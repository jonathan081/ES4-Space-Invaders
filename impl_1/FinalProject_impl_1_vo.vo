
// Verilog netlist produced by program backanno, Version Radiant (64-bit) 1.0.0.350.6

// backanno -n Verilog -o FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui FinalProject_impl_1.udb 
// Netlist created on Tue Apr 23 19:23:59 2019
// Netlist written on Tue Apr 23 19:24:04 2019
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module topvhd ( control, NESclk, latch, HSYNC, VSYNC, rgbT );
  input  control;
  output NESclk, latch, HSYNC, VSYNC;
  output [5:0] rgbT;
  wire   \NES/n85[2] , \NES/n85[1] , \NES/n6454 , \NES/count[2] , \NES/n4622 , 
         \NES/count[1] , \NES/n1215 , pll_clock, \NES/n4624 , \NES/n85[0] , 
         \NES/n6448 , \NES/count[0] , VCC_net, \NES/n85[19] , \NES/n6481 , 
         \NES/n4640 , \NES/count[19] , \NES/n85[18] , \NES/n85[17] , 
         \NES/n6478 , \NES/count[18] , \NES/n4638 , \NES/count[17] , 
         \NES/n85[16] , \NES/n85[15] , \NES/n6475 , \NES/count[16] , 
         \NES/n4636 , \NES/count[15] , \NES/n85[14] , \NES/n85[13] , 
         \NES/n6472 , \NES/count[14] , \NES/n4634 , \NES/count[13] , 
         \NES/n85[12] , \NES/n85[11] , \NES/n6469 , \NES/count[12] , 
         \NES/n4632 , \NES/count[11] , \NES/n85[10] , \NES/n85[9] , 
         \NES/n6466 , \NES/count[10] , \NES/n4630 , \NES/count[9] , 
         \NES/n85[8] , \NES/n85[7] , \NES/n6463 , \NES/count[8] , \NES/n4628 , 
         \NES/count[7] , \NES/n85[6] , \NES/n85[5] , \NES/n6460 , 
         \NES/count[6] , \NES/n4626 , \NES/count[5] , \NES/n85[4] , 
         \NES/n85[3] , \NES/n6457 , \NES/count[4] , \NES/count[3] , 
         \Howdy/n167[12] , \Howdy/n167[11] , \Howdy/n6385 , \Howdy/countr[12] , 
         \Howdy/n4581 , \Howdy/countr[11] , \Howdy/row_9__N_189 , 
         \Howdy/row_9__N_187 , \Howdy/n4583 , \Howdy/n167[2] , \Howdy/n167[1] , 
         \Howdy/n6325 , \rowp[2] , \Howdy/n4571 , \Howdy/rowp[1]_2 , 
         \Howdy/n4573 , \Howdy/n167[24] , \Howdy/n167[23] , \Howdy/n6493 , 
         \Howdy/countr[24] , \Howdy/n4593 , \Howdy/countr[23] , \Howdy/n4595 , 
         \Howdy/n133[0] , \Howdy/n6397 , \colp[0] , \Howdy/n4654 , 
         \Howdy/n167[22] , \Howdy/n167[21] , \Howdy/n6490 , \Howdy/countr[22] , 
         \Howdy/n4591 , \Howdy/countr[21] , \Howdy/n167[10] , \Howdy/n167[9] , 
         \Howdy/n6382 , \Howdy/countr[10] , \Howdy/n4579 , \rowp[9] , 
         \Howdy/n167[8] , \Howdy/n167[7] , \Howdy/n6337 , \rowp[8] , 
         \Howdy/n4577 , \rowp[7] , \Howdy/n167[20] , \Howdy/n167[19] , 
         \Howdy/n6487 , \Howdy/countr[20] , \Howdy/n4589 , \Howdy/countr[19] , 
         \Howdy/n167[6] , \Howdy/n167[5] , \Howdy/n6331 , \rowp[6] , 
         \Howdy/n4575 , \rowp[5] , \Howdy/n133[31] , \Howdy/n6445 , 
         \Howdy/n4684 , \Howdy/countc[31] , \Howdy/n167[18] , \Howdy/n167[17] , 
         \Howdy/n6484 , \Howdy/countr[18] , \Howdy/n4587 , \Howdy/countr[17] , 
         \Howdy/n167[16] , \Howdy/n167[15] , \Howdy/n6391 , \Howdy/countr[16] , 
         \Howdy/n4585 , \Howdy/countr[15] , \Howdy/n167[4] , \Howdy/n167[3] , 
         \Howdy/n6328 , \rowp[4] , \rowp[3] , \Howdy/n133[30] , 
         \Howdy/n133[29] , \Howdy/n6442 , \Howdy/countc[30] , \Howdy/n4682 , 
         \Howdy/countc[29] , \Howdy/n133[28] , \Howdy/n133[27] , \Howdy/n6439 , 
         \Howdy/countc[28] , \Howdy/n4680 , \Howdy/countc[27] , 
         \Howdy/n133[26] , \Howdy/n133[25] , \Howdy/n6436 , \Howdy/countc[26] , 
         \Howdy/n4678 , \Howdy/countc[25] , \Howdy/n133[24] , \Howdy/n133[23] , 
         \Howdy/n6433 , \Howdy/countc[24] , \Howdy/n4676 , \Howdy/countc[23] , 
         \Howdy/n133[22] , \Howdy/n133[21] , \Howdy/n6430 , \Howdy/countc[22] , 
         \Howdy/n4674 , \Howdy/countc[21] , \Howdy/n133[20] , \Howdy/n133[19] , 
         \Howdy/n6427 , \Howdy/countc[20] , \Howdy/n4672 , \Howdy/countc[19] , 
         \Howdy/n133[18] , \Howdy/n133[17] , \Howdy/n6424 , \Howdy/countc[18] , 
         \Howdy/n4670 , \Howdy/countc[17] , \Howdy/n133[16] , \Howdy/n133[15] , 
         \Howdy/n6421 , \Howdy/countc[16] , \Howdy/n4668 , \Howdy/countc[15] , 
         \Howdy/n133[14] , \Howdy/n133[13] , \Howdy/n6418 , \Howdy/countc[14] , 
         \Howdy/n4666 , \Howdy/countc[13] , \Howdy/n167[31] , \Howdy/n6505 , 
         \Howdy/n4601 , \Howdy/countr[31] , \Howdy/n167[30] , \Howdy/n167[29] , 
         \Howdy/n6502 , \Howdy/countr[30] , \Howdy/n4599 , \Howdy/countr[29] , 
         \Howdy/n133[12] , \Howdy/n133[11] , \Howdy/n6415 , \Howdy/countc[12] , 
         \Howdy/n4664 , \Howdy/countc[11] , \Howdy/n133[10] , \Howdy/n133[9] , 
         \Howdy/n6412 , \Howdy/countc[10] , \Howdy/n4662 , \colp[9] , 
         \Howdy/n133[8] , \Howdy/n133[7] , \Howdy/n6409 , \colp[8] , 
         \Howdy/n4660 , \colp[7] , \Howdy/n133[6] , \Howdy/n133[5] , 
         \Howdy/n6406 , \colp[6] , \Howdy/n4658 , \colp[5] , \Howdy/n133[4] , 
         \Howdy/n133[3] , \Howdy/n6403 , \colp[4] , \Howdy/n4656 , \colp[3] , 
         \Howdy/n133[2] , \Howdy/n133[1] , \Howdy/n6400 , \colp[2] , \colp[1] , 
         \Howdy/n167[28] , \Howdy/n167[27] , \Howdy/n6499 , \Howdy/countr[28] , 
         \Howdy/n4597 , \Howdy/countr[27] , \Howdy/n167[14] , \Howdy/n167[13] , 
         \Howdy/n6388 , \Howdy/countr[14] , \Howdy/countr[13] , 
         \Howdy/n167[0] , \Howdy/n6322 , \Howdy/rowp[0]_2 , \Howdy/n167[26] , 
         \Howdy/n167[25] , \Howdy/n6496 , \Howdy/countr[26] , 
         \Howdy/countr[25] , \Hola/n6352 , \Hola/n4619 , \Hola/pos_x[9] , 
         \Hola/rgb_5__N_273[9] , \Hola/n6451 , \Hola/n4651 , \button_sig[6] , 
         \Hola/n45[9] , \Hola/n6349 , \Hola/pos_x[8] , \Hola/n4617 , 
         \Hola/pos_x[7] , \Hola/rgb_5__N_273[7] , \Hola/rgb_5__N_273[8] , 
         \Hola/n45[7] , \Hola/n6394 , \Hola/n4649 , n1195, \Hola/n1217 , 
         \Hola/n45[8] , \Hola/n45[6] , \Hola/n45[5] , \Hola/n6379 , 
         \Hola/pos_x[6] , \Hola/n4647 , \Hola/pos_x[5] , \Hola/n6346 , 
         \Hola/n4615 , \Hola/rgb_5__N_273[5] , \Hola/rgb_5__N_273[6] , 
         \Hola/n6376 , \Hola/pos_x[4] , \Hola/n4645 , \Hola/pos_x[3] , 
         \Hola/n45[3] , \Hola/n45[4] , \Hola/n6373 , \Hola/pos_x[2] , 
         \Hola/n4643 , \Hola/rgb_5__N_262[1] , \Hola/n45[1] , \Hola/n45[2] , 
         \Hola/n6343 , \Hola/n4613 , \Hola/rgb_5__N_273[3] , 
         \Hola/rgb_5__N_273[4] , \Hola/n6340 , \Hola/rgb_5__N_273[2] , 
         \Hola/n45[0] , \Hola/n6370 , \Hola/rgb_5__N_262[0] , \Hola/n330[0] , 
         \Hola/n6367 , \Hola/n4610 , \Hola/rgb_5__N_262[9] , \Hola/n6364 , 
         \Hola/n4608 , \Hola/rgb_5__N_262[7] , \Hola/rgb_5__N_262[8] , 
         \Hola/n6361 , \Hola/n4606 , \Hola/rgb_5__N_262[5] , 
         \Hola/rgb_5__N_262[6] , \Hola/n6358 , \Hola/n4604 , 
         \Hola/rgb_5__N_262[3] , \Hola/rgb_5__N_262[4] , \Hola/n6355 , 
         \Hola/rgb_5__N_262[2] , \NES/count[19]/sig_000/FeedThruLUT , 
         \NES/NEScount[9] , \NES/count[17]/sig_002/FeedThruLUT , 
         \NES/count[18]/sig_001/FeedThruLUT , \NES/NEScount[8] , 
         \NES/NEScount[7] , \NES/count[15]/sig_004/FeedThruLUT , 
         \NES/count[16]/sig_003/FeedThruLUT , \NES/NEScount[6] , 
         \NES/NEScount[5] , \NES/count[13]/sig_006/FeedThruLUT , 
         \NES/count[14]/sig_005/FeedThruLUT , \NES/NEScount[4] , 
         \NES/NEScount[3] , \NES/count[10]/sig_009/FeedThruLUT , 
         \NES/count[12]/sig_007/FeedThruLUT , \NES/NEScount[2] , 
         \NES/NEScount[0] , n1221, n1223, n5, control_c, \NEScount[1] , 
         \button_sig[3] , \NES/n1166 , \NES/n11 , NESclk_c, \Hola/n5145 , 
         \Hola/n57[8] , \Hola/n230 , \Hola/n65 , \Hola/n3151 , \Hola/n7 , 
         \Hola/n57[2] , \Hola/n57[3] , \Hola/n6_adj_326 , \Hola/n6 , 
         \Hola/n3043 , \Hola/n5296 , \Hola/n93 , \Hola/n87 , \NES/n1139 , 
         \NES/n6 , \NES/n18 , n8, CNTclk_N_89, \NES/n6_adj_364 , \NES/n35 , 
         \NES/n33 , \NES/n36 , \NES/n34 , \NES/n32 , \NES/n22 , \NES/n1169 , 
         \NES/NESclk , \NES/n5497 , \Howdy/n35 , \Howdy/n1145 , \Howdy/n36 , 
         \Howdy/n38 , \Howdy/n37 , \Howdy/n1085 , \Howdy/n22 , \Howdy/n1171 , 
         \Howdy/n1148 , \Howdy/n1142 , \Howdy/n8 , \Howdy/n62 , \Howdy/n34 , 
         \Howdy/n24 , \Howdy/n59 , \Howdy/n6_adj_340 , \Howdy/valid_N_234 , 
         \Howdy/n19 , \Howdy/n5298 , \Howdy/n42_c , \Howdy/n1095 , 
         \Howdy/n5093 , \Howdy/n1087 , \Howdy/n5293 , \Howdy/n10 , 
         \Howdy/n1157 , \Howdy/n6_adj_363 , \Howdy/n1114 , \Howdy/n5067 , n4, 
         n1693, n41, n42, \Howdy/n3 , \Hola/n7_adj_330 , \Hola/n5515 , 
         \Howdy/n1082 , \Howdy/n61 , \Howdy/n1084 , \Howdy/n62_adj_342 , 
         \Howdy/n942 , n3143, \Howdy/n20 , \Howdy/n4_adj_353 , \Howdy/n18 , 
         n5499, \Hola/n23 , \Howdy/n36_adj_357 , \Howdy/n38_adj_358 , 
         \Howdy/n35_adj_355 , \Howdy/n37_adj_356 , n3041, \Howdy/n62_adj_354 , 
         \Howdy/n34_adj_361 , \Howdy/n24_adj_362 , \Howdy/n22_adj_359 , 
         \Hola/n41_c , \Hola/n1528 , \Hola/n5517 , \Hola/n134 , \Hola/n3 , 
         \Hola/n6_adj_327 , \Hola/rgb_5__N_272 , \Hola/n8 , \Hola/n18 , validp, 
         rgbT_c, \Hola/n16 , \Hola/n14 , \Hola/n18_adj_331 , \Hola/n12 , 
         \Hola/n10 , \Hola/n8_adj_332 , \Hola/n6_adj_333 , \Hola/n4_adj_334 , 
         \Hola/n16_adj_335 , \Hola/n14_adj_336 , \Hola/n12_adj_337 , 
         \Hola/n10_adj_338 , \Hola/n8_adj_339 , n7, \Hola/n57[1] , 
         \Hola/n5141 , \NES/count[9]/sig_010/FeedThruLUT , \Howdy/valid_N_229 , 
         \Howdy/n943 , \NES/count[11]/sig_008/FeedThruLUT , \Howdy/n6099 , 
         \Howdy/n6 , VSYNC_c, \Howdy/n5077 , \Howdy/n4_adj_341 , HSYNC_c, 
         n1222, \button_sig[7] , clk, \Hello/lscc_pll_inst/feedback_w ;

  SLICE_0 SLICE_0( .DI1(\NES/n85[2] ), .DI0(\NES/n85[1] ), .D1(\NES/n6454 ), 
    .C1(\NES/count[2] ), .D0(\NES/n4622 ), .C0(\NES/count[1] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4622 ), .CIN1(\NES/n6454 ), 
    .Q0(\NES/count[1] ), .Q1(\NES/count[2] ), .F0(\NES/n85[1] ), 
    .F1(\NES/n85[2] ), .COUT1(\NES/n4624 ), .COUT0(\NES/n6454 ));
  SLICE_1 SLICE_1( .DI1(\NES/n85[0] ), .D1(\NES/n6448 ), .C1(\NES/count[0] ), 
    .B1(VCC_net), .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN1(\NES/n6448 ), 
    .Q1(\NES/count[0] ), .F1(\NES/n85[0] ), .COUT1(\NES/n4622 ), 
    .COUT0(\NES/n6448 ));
  SLICE_2 SLICE_2( .DI0(\NES/n85[19] ), .D1(\NES/n6481 ), .D0(\NES/n4640 ), 
    .C0(\NES/count[19] ), .LSR(\NES/n1215 ), .CLK(pll_clock), 
    .CIN0(\NES/n4640 ), .CIN1(\NES/n6481 ), .Q0(\NES/count[19] ), 
    .F0(\NES/n85[19] ), .COUT0(\NES/n6481 ));
  SLICE_3 SLICE_3( .DI1(\NES/n85[18] ), .DI0(\NES/n85[17] ), .D1(\NES/n6478 ), 
    .C1(\NES/count[18] ), .D0(\NES/n4638 ), .C0(\NES/count[17] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4638 ), .CIN1(\NES/n6478 ), 
    .Q0(\NES/count[17] ), .Q1(\NES/count[18] ), .F0(\NES/n85[17] ), 
    .F1(\NES/n85[18] ), .COUT1(\NES/n4640 ), .COUT0(\NES/n6478 ));
  SLICE_4 SLICE_4( .DI1(\NES/n85[16] ), .DI0(\NES/n85[15] ), .D1(\NES/n6475 ), 
    .C1(\NES/count[16] ), .D0(\NES/n4636 ), .C0(\NES/count[15] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4636 ), .CIN1(\NES/n6475 ), 
    .Q0(\NES/count[15] ), .Q1(\NES/count[16] ), .F0(\NES/n85[15] ), 
    .F1(\NES/n85[16] ), .COUT1(\NES/n4638 ), .COUT0(\NES/n6475 ));
  SLICE_5 SLICE_5( .DI1(\NES/n85[14] ), .DI0(\NES/n85[13] ), .D1(\NES/n6472 ), 
    .C1(\NES/count[14] ), .D0(\NES/n4634 ), .C0(\NES/count[13] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4634 ), .CIN1(\NES/n6472 ), 
    .Q0(\NES/count[13] ), .Q1(\NES/count[14] ), .F0(\NES/n85[13] ), 
    .F1(\NES/n85[14] ), .COUT1(\NES/n4636 ), .COUT0(\NES/n6472 ));
  SLICE_6 SLICE_6( .DI1(\NES/n85[12] ), .DI0(\NES/n85[11] ), .D1(\NES/n6469 ), 
    .C1(\NES/count[12] ), .D0(\NES/n4632 ), .C0(\NES/count[11] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4632 ), .CIN1(\NES/n6469 ), 
    .Q0(\NES/count[11] ), .Q1(\NES/count[12] ), .F0(\NES/n85[11] ), 
    .F1(\NES/n85[12] ), .COUT1(\NES/n4634 ), .COUT0(\NES/n6469 ));
  SLICE_7 SLICE_7( .DI1(\NES/n85[10] ), .DI0(\NES/n85[9] ), .D1(\NES/n6466 ), 
    .C1(\NES/count[10] ), .D0(\NES/n4630 ), .C0(\NES/count[9] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4630 ), .CIN1(\NES/n6466 ), 
    .Q0(\NES/count[9] ), .Q1(\NES/count[10] ), .F0(\NES/n85[9] ), 
    .F1(\NES/n85[10] ), .COUT1(\NES/n4632 ), .COUT0(\NES/n6466 ));
  SLICE_8 SLICE_8( .DI1(\NES/n85[8] ), .DI0(\NES/n85[7] ), .D1(\NES/n6463 ), 
    .C1(\NES/count[8] ), .D0(\NES/n4628 ), .C0(\NES/count[7] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4628 ), .CIN1(\NES/n6463 ), 
    .Q0(\NES/count[7] ), .Q1(\NES/count[8] ), .F0(\NES/n85[7] ), 
    .F1(\NES/n85[8] ), .COUT1(\NES/n4630 ), .COUT0(\NES/n6463 ));
  SLICE_9 SLICE_9( .DI1(\NES/n85[6] ), .DI0(\NES/n85[5] ), .D1(\NES/n6460 ), 
    .C1(\NES/count[6] ), .D0(\NES/n4626 ), .C0(\NES/count[5] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4626 ), .CIN1(\NES/n6460 ), 
    .Q0(\NES/count[5] ), .Q1(\NES/count[6] ), .F0(\NES/n85[5] ), 
    .F1(\NES/n85[6] ), .COUT1(\NES/n4628 ), .COUT0(\NES/n6460 ));
  SLICE_10 SLICE_10( .DI1(\NES/n85[4] ), .DI0(\NES/n85[3] ), .D1(\NES/n6457 ), 
    .C1(\NES/count[4] ), .D0(\NES/n4624 ), .C0(\NES/count[3] ), 
    .LSR(\NES/n1215 ), .CLK(pll_clock), .CIN0(\NES/n4624 ), .CIN1(\NES/n6457 ), 
    .Q0(\NES/count[3] ), .Q1(\NES/count[4] ), .F0(\NES/n85[3] ), 
    .F1(\NES/n85[4] ), .COUT1(\NES/n4626 ), .COUT0(\NES/n6457 ));
  SLICE_11 SLICE_11( .DI1(\Howdy/n167[12] ), .DI0(\Howdy/n167[11] ), 
    .D1(\Howdy/n6385 ), .B1(\Howdy/countr[12] ), .D0(\Howdy/n4581 ), 
    .B0(\Howdy/countr[11] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4581 ), 
    .CIN1(\Howdy/n6385 ), .Q0(\Howdy/countr[11] ), .Q1(\Howdy/countr[12] ), 
    .F0(\Howdy/n167[11] ), .F1(\Howdy/n167[12] ), .COUT1(\Howdy/n4583 ), 
    .COUT0(\Howdy/n6385 ));
  SLICE_12 SLICE_12( .DI1(\Howdy/n167[2] ), .DI0(\Howdy/n167[1] ), 
    .D1(\Howdy/n6325 ), .B1(\rowp[2] ), .D0(\Howdy/n4571 ), 
    .B0(\Howdy/rowp[1]_2 ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4571 ), 
    .CIN1(\Howdy/n6325 ), .Q0(\Howdy/rowp[1]_2 ), .Q1(\rowp[2] ), 
    .F0(\Howdy/n167[1] ), .F1(\Howdy/n167[2] ), .COUT1(\Howdy/n4573 ), 
    .COUT0(\Howdy/n6325 ));
  SLICE_13 SLICE_13( .DI1(\Howdy/n167[24] ), .DI0(\Howdy/n167[23] ), 
    .D1(\Howdy/n6493 ), .B1(\Howdy/countr[24] ), .D0(\Howdy/n4593 ), 
    .B0(\Howdy/countr[23] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4593 ), 
    .CIN1(\Howdy/n6493 ), .Q0(\Howdy/countr[23] ), .Q1(\Howdy/countr[24] ), 
    .F0(\Howdy/n167[23] ), .F1(\Howdy/n167[24] ), .COUT1(\Howdy/n4595 ), 
    .COUT0(\Howdy/n6493 ));
  SLICE_14 SLICE_14( .DI1(\Howdy/n133[0] ), .D1(\Howdy/n6397 ), .C1(\colp[0] ), 
    .B1(VCC_net), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN1(\Howdy/n6397 ), .Q1(\colp[0] ), .F1(\Howdy/n133[0] ), 
    .COUT1(\Howdy/n4654 ), .COUT0(\Howdy/n6397 ));
  SLICE_15 SLICE_15( .DI1(\Howdy/n167[22] ), .DI0(\Howdy/n167[21] ), 
    .D1(\Howdy/n6490 ), .B1(\Howdy/countr[22] ), .D0(\Howdy/n4591 ), 
    .B0(\Howdy/countr[21] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4591 ), 
    .CIN1(\Howdy/n6490 ), .Q0(\Howdy/countr[21] ), .Q1(\Howdy/countr[22] ), 
    .F0(\Howdy/n167[21] ), .F1(\Howdy/n167[22] ), .COUT1(\Howdy/n4593 ), 
    .COUT0(\Howdy/n6490 ));
  SLICE_16 SLICE_16( .DI1(\Howdy/n167[10] ), .DI0(\Howdy/n167[9] ), 
    .D1(\Howdy/n6382 ), .B1(\Howdy/countr[10] ), .D0(\Howdy/n4579 ), 
    .B0(\rowp[9] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n4579 ), .CIN1(\Howdy/n6382 ), 
    .Q0(\rowp[9] ), .Q1(\Howdy/countr[10] ), .F0(\Howdy/n167[9] ), 
    .F1(\Howdy/n167[10] ), .COUT1(\Howdy/n4581 ), .COUT0(\Howdy/n6382 ));
  SLICE_17 SLICE_17( .DI1(\Howdy/n167[8] ), .DI0(\Howdy/n167[7] ), 
    .D1(\Howdy/n6337 ), .B1(\rowp[8] ), .D0(\Howdy/n4577 ), .B0(\rowp[7] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4577 ), .CIN1(\Howdy/n6337 ), .Q0(\rowp[7] ), .Q1(\rowp[8] ), 
    .F0(\Howdy/n167[7] ), .F1(\Howdy/n167[8] ), .COUT1(\Howdy/n4579 ), 
    .COUT0(\Howdy/n6337 ));
  SLICE_18 SLICE_18( .DI1(\Howdy/n167[20] ), .DI0(\Howdy/n167[19] ), 
    .D1(\Howdy/n6487 ), .B1(\Howdy/countr[20] ), .D0(\Howdy/n4589 ), 
    .B0(\Howdy/countr[19] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4589 ), 
    .CIN1(\Howdy/n6487 ), .Q0(\Howdy/countr[19] ), .Q1(\Howdy/countr[20] ), 
    .F0(\Howdy/n167[19] ), .F1(\Howdy/n167[20] ), .COUT1(\Howdy/n4591 ), 
    .COUT0(\Howdy/n6487 ));
  SLICE_19 SLICE_19( .DI1(\Howdy/n167[6] ), .DI0(\Howdy/n167[5] ), 
    .D1(\Howdy/n6331 ), .B1(\rowp[6] ), .D0(\Howdy/n4575 ), .B0(\rowp[5] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4575 ), .CIN1(\Howdy/n6331 ), .Q0(\rowp[5] ), .Q1(\rowp[6] ), 
    .F0(\Howdy/n167[5] ), .F1(\Howdy/n167[6] ), .COUT1(\Howdy/n4577 ), 
    .COUT0(\Howdy/n6331 ));
  SLICE_20 SLICE_20( .DI0(\Howdy/n133[31] ), .D1(\Howdy/n6445 ), 
    .D0(\Howdy/n4684 ), .C0(\Howdy/countc[31] ), .LSR(\Howdy/row_9__N_189 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n4684 ), .CIN1(\Howdy/n6445 ), 
    .Q0(\Howdy/countc[31] ), .F0(\Howdy/n133[31] ), .COUT0(\Howdy/n6445 ));
  SLICE_21 SLICE_21( .DI1(\Howdy/n167[18] ), .DI0(\Howdy/n167[17] ), 
    .D1(\Howdy/n6484 ), .B1(\Howdy/countr[18] ), .D0(\Howdy/n4587 ), 
    .B0(\Howdy/countr[17] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4587 ), 
    .CIN1(\Howdy/n6484 ), .Q0(\Howdy/countr[17] ), .Q1(\Howdy/countr[18] ), 
    .F0(\Howdy/n167[17] ), .F1(\Howdy/n167[18] ), .COUT1(\Howdy/n4589 ), 
    .COUT0(\Howdy/n6484 ));
  SLICE_22 SLICE_22( .DI1(\Howdy/n167[16] ), .DI0(\Howdy/n167[15] ), 
    .D1(\Howdy/n6391 ), .B1(\Howdy/countr[16] ), .D0(\Howdy/n4585 ), 
    .B0(\Howdy/countr[15] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4585 ), 
    .CIN1(\Howdy/n6391 ), .Q0(\Howdy/countr[15] ), .Q1(\Howdy/countr[16] ), 
    .F0(\Howdy/n167[15] ), .F1(\Howdy/n167[16] ), .COUT1(\Howdy/n4587 ), 
    .COUT0(\Howdy/n6391 ));
  SLICE_23 SLICE_23( .DI1(\Howdy/n167[4] ), .DI0(\Howdy/n167[3] ), 
    .D1(\Howdy/n6328 ), .B1(\rowp[4] ), .D0(\Howdy/n4573 ), .B0(\rowp[3] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4573 ), .CIN1(\Howdy/n6328 ), .Q0(\rowp[3] ), .Q1(\rowp[4] ), 
    .F0(\Howdy/n167[3] ), .F1(\Howdy/n167[4] ), .COUT1(\Howdy/n4575 ), 
    .COUT0(\Howdy/n6328 ));
  SLICE_24 SLICE_24( .DI1(\Howdy/n133[30] ), .DI0(\Howdy/n133[29] ), 
    .D1(\Howdy/n6442 ), .C1(\Howdy/countc[30] ), .D0(\Howdy/n4682 ), 
    .C0(\Howdy/countc[29] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4682 ), .CIN1(\Howdy/n6442 ), .Q0(\Howdy/countc[29] ), 
    .Q1(\Howdy/countc[30] ), .F0(\Howdy/n133[29] ), .F1(\Howdy/n133[30] ), 
    .COUT1(\Howdy/n4684 ), .COUT0(\Howdy/n6442 ));
  SLICE_25 SLICE_25( .DI1(\Howdy/n133[28] ), .DI0(\Howdy/n133[27] ), 
    .D1(\Howdy/n6439 ), .C1(\Howdy/countc[28] ), .D0(\Howdy/n4680 ), 
    .C0(\Howdy/countc[27] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4680 ), .CIN1(\Howdy/n6439 ), .Q0(\Howdy/countc[27] ), 
    .Q1(\Howdy/countc[28] ), .F0(\Howdy/n133[27] ), .F1(\Howdy/n133[28] ), 
    .COUT1(\Howdy/n4682 ), .COUT0(\Howdy/n6439 ));
  SLICE_26 SLICE_26( .DI1(\Howdy/n133[26] ), .DI0(\Howdy/n133[25] ), 
    .D1(\Howdy/n6436 ), .C1(\Howdy/countc[26] ), .D0(\Howdy/n4678 ), 
    .C0(\Howdy/countc[25] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4678 ), .CIN1(\Howdy/n6436 ), .Q0(\Howdy/countc[25] ), 
    .Q1(\Howdy/countc[26] ), .F0(\Howdy/n133[25] ), .F1(\Howdy/n133[26] ), 
    .COUT1(\Howdy/n4680 ), .COUT0(\Howdy/n6436 ));
  SLICE_27 SLICE_27( .DI1(\Howdy/n133[24] ), .DI0(\Howdy/n133[23] ), 
    .D1(\Howdy/n6433 ), .C1(\Howdy/countc[24] ), .D0(\Howdy/n4676 ), 
    .C0(\Howdy/countc[23] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4676 ), .CIN1(\Howdy/n6433 ), .Q0(\Howdy/countc[23] ), 
    .Q1(\Howdy/countc[24] ), .F0(\Howdy/n133[23] ), .F1(\Howdy/n133[24] ), 
    .COUT1(\Howdy/n4678 ), .COUT0(\Howdy/n6433 ));
  SLICE_28 SLICE_28( .DI1(\Howdy/n133[22] ), .DI0(\Howdy/n133[21] ), 
    .D1(\Howdy/n6430 ), .C1(\Howdy/countc[22] ), .D0(\Howdy/n4674 ), 
    .C0(\Howdy/countc[21] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4674 ), .CIN1(\Howdy/n6430 ), .Q0(\Howdy/countc[21] ), 
    .Q1(\Howdy/countc[22] ), .F0(\Howdy/n133[21] ), .F1(\Howdy/n133[22] ), 
    .COUT1(\Howdy/n4676 ), .COUT0(\Howdy/n6430 ));
  SLICE_29 SLICE_29( .DI1(\Howdy/n133[20] ), .DI0(\Howdy/n133[19] ), 
    .D1(\Howdy/n6427 ), .C1(\Howdy/countc[20] ), .D0(\Howdy/n4672 ), 
    .C0(\Howdy/countc[19] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4672 ), .CIN1(\Howdy/n6427 ), .Q0(\Howdy/countc[19] ), 
    .Q1(\Howdy/countc[20] ), .F0(\Howdy/n133[19] ), .F1(\Howdy/n133[20] ), 
    .COUT1(\Howdy/n4674 ), .COUT0(\Howdy/n6427 ));
  SLICE_30 SLICE_30( .DI1(\Howdy/n133[18] ), .DI0(\Howdy/n133[17] ), 
    .D1(\Howdy/n6424 ), .C1(\Howdy/countc[18] ), .D0(\Howdy/n4670 ), 
    .C0(\Howdy/countc[17] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4670 ), .CIN1(\Howdy/n6424 ), .Q0(\Howdy/countc[17] ), 
    .Q1(\Howdy/countc[18] ), .F0(\Howdy/n133[17] ), .F1(\Howdy/n133[18] ), 
    .COUT1(\Howdy/n4672 ), .COUT0(\Howdy/n6424 ));
  SLICE_31 SLICE_31( .DI1(\Howdy/n133[16] ), .DI0(\Howdy/n133[15] ), 
    .D1(\Howdy/n6421 ), .C1(\Howdy/countc[16] ), .D0(\Howdy/n4668 ), 
    .C0(\Howdy/countc[15] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4668 ), .CIN1(\Howdy/n6421 ), .Q0(\Howdy/countc[15] ), 
    .Q1(\Howdy/countc[16] ), .F0(\Howdy/n133[15] ), .F1(\Howdy/n133[16] ), 
    .COUT1(\Howdy/n4670 ), .COUT0(\Howdy/n6421 ));
  SLICE_32 SLICE_32( .DI1(\Howdy/n133[14] ), .DI0(\Howdy/n133[13] ), 
    .D1(\Howdy/n6418 ), .C1(\Howdy/countc[14] ), .D0(\Howdy/n4666 ), 
    .C0(\Howdy/countc[13] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4666 ), .CIN1(\Howdy/n6418 ), .Q0(\Howdy/countc[13] ), 
    .Q1(\Howdy/countc[14] ), .F0(\Howdy/n133[13] ), .F1(\Howdy/n133[14] ), 
    .COUT1(\Howdy/n4668 ), .COUT0(\Howdy/n6418 ));
  SLICE_33 SLICE_33( .DI0(\Howdy/n167[31] ), .D1(\Howdy/n6505 ), 
    .D0(\Howdy/n4601 ), .B0(\Howdy/countr[31] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4601 ), 
    .CIN1(\Howdy/n6505 ), .Q0(\Howdy/countr[31] ), .F0(\Howdy/n167[31] ), 
    .COUT0(\Howdy/n6505 ));
  SLICE_34 SLICE_34( .DI1(\Howdy/n167[30] ), .DI0(\Howdy/n167[29] ), 
    .D1(\Howdy/n6502 ), .B1(\Howdy/countr[30] ), .D0(\Howdy/n4599 ), 
    .B0(\Howdy/countr[29] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4599 ), 
    .CIN1(\Howdy/n6502 ), .Q0(\Howdy/countr[29] ), .Q1(\Howdy/countr[30] ), 
    .F0(\Howdy/n167[29] ), .F1(\Howdy/n167[30] ), .COUT1(\Howdy/n4601 ), 
    .COUT0(\Howdy/n6502 ));
  SLICE_35 SLICE_35( .DI1(\Howdy/n133[12] ), .DI0(\Howdy/n133[11] ), 
    .D1(\Howdy/n6415 ), .C1(\Howdy/countc[12] ), .D0(\Howdy/n4664 ), 
    .C0(\Howdy/countc[11] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4664 ), .CIN1(\Howdy/n6415 ), .Q0(\Howdy/countc[11] ), 
    .Q1(\Howdy/countc[12] ), .F0(\Howdy/n133[11] ), .F1(\Howdy/n133[12] ), 
    .COUT1(\Howdy/n4666 ), .COUT0(\Howdy/n6415 ));
  SLICE_36 SLICE_36( .DI1(\Howdy/n133[10] ), .DI0(\Howdy/n133[9] ), 
    .D1(\Howdy/n6412 ), .C1(\Howdy/countc[10] ), .D0(\Howdy/n4662 ), 
    .C0(\colp[9] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4662 ), .CIN1(\Howdy/n6412 ), .Q0(\colp[9] ), 
    .Q1(\Howdy/countc[10] ), .F0(\Howdy/n133[9] ), .F1(\Howdy/n133[10] ), 
    .COUT1(\Howdy/n4664 ), .COUT0(\Howdy/n6412 ));
  SLICE_37 SLICE_37( .DI1(\Howdy/n133[8] ), .DI0(\Howdy/n133[7] ), 
    .D1(\Howdy/n6409 ), .C1(\colp[8] ), .D0(\Howdy/n4660 ), .C0(\colp[7] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4660 ), 
    .CIN1(\Howdy/n6409 ), .Q0(\colp[7] ), .Q1(\colp[8] ), .F0(\Howdy/n133[7] ), 
    .F1(\Howdy/n133[8] ), .COUT1(\Howdy/n4662 ), .COUT0(\Howdy/n6409 ));
  SLICE_38 SLICE_38( .DI1(\Howdy/n133[6] ), .DI0(\Howdy/n133[5] ), 
    .D1(\Howdy/n6406 ), .C1(\colp[6] ), .D0(\Howdy/n4658 ), .C0(\colp[5] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4658 ), 
    .CIN1(\Howdy/n6406 ), .Q0(\colp[5] ), .Q1(\colp[6] ), .F0(\Howdy/n133[5] ), 
    .F1(\Howdy/n133[6] ), .COUT1(\Howdy/n4660 ), .COUT0(\Howdy/n6406 ));
  SLICE_39 SLICE_39( .DI1(\Howdy/n133[4] ), .DI0(\Howdy/n133[3] ), 
    .D1(\Howdy/n6403 ), .C1(\colp[4] ), .D0(\Howdy/n4656 ), .C0(\colp[3] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4656 ), 
    .CIN1(\Howdy/n6403 ), .Q0(\colp[3] ), .Q1(\colp[4] ), .F0(\Howdy/n133[3] ), 
    .F1(\Howdy/n133[4] ), .COUT1(\Howdy/n4658 ), .COUT0(\Howdy/n6403 ));
  SLICE_40 SLICE_40( .DI1(\Howdy/n133[2] ), .DI0(\Howdy/n133[1] ), 
    .D1(\Howdy/n6400 ), .C1(\colp[2] ), .D0(\Howdy/n4654 ), .C0(\colp[1] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4654 ), 
    .CIN1(\Howdy/n6400 ), .Q0(\colp[1] ), .Q1(\colp[2] ), .F0(\Howdy/n133[1] ), 
    .F1(\Howdy/n133[2] ), .COUT1(\Howdy/n4656 ), .COUT0(\Howdy/n6400 ));
  SLICE_41 SLICE_41( .DI1(\Howdy/n167[28] ), .DI0(\Howdy/n167[27] ), 
    .D1(\Howdy/n6499 ), .B1(\Howdy/countr[28] ), .D0(\Howdy/n4597 ), 
    .B0(\Howdy/countr[27] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4597 ), 
    .CIN1(\Howdy/n6499 ), .Q0(\Howdy/countr[27] ), .Q1(\Howdy/countr[28] ), 
    .F0(\Howdy/n167[27] ), .F1(\Howdy/n167[28] ), .COUT1(\Howdy/n4599 ), 
    .COUT0(\Howdy/n6499 ));
  SLICE_42 SLICE_42( .DI1(\Howdy/n167[14] ), .DI0(\Howdy/n167[13] ), 
    .D1(\Howdy/n6388 ), .B1(\Howdy/countr[14] ), .D0(\Howdy/n4583 ), 
    .B0(\Howdy/countr[13] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4583 ), 
    .CIN1(\Howdy/n6388 ), .Q0(\Howdy/countr[13] ), .Q1(\Howdy/countr[14] ), 
    .F0(\Howdy/n167[13] ), .F1(\Howdy/n167[14] ), .COUT1(\Howdy/n4585 ), 
    .COUT0(\Howdy/n6388 ));
  SLICE_43 SLICE_43( .DI1(\Howdy/n167[0] ), .D1(\Howdy/n6322 ), .C1(VCC_net), 
    .B1(\Howdy/rowp[0]_2 ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN1(\Howdy/n6322 ), 
    .Q1(\Howdy/rowp[0]_2 ), .F1(\Howdy/n167[0] ), .COUT1(\Howdy/n4571 ), 
    .COUT0(\Howdy/n6322 ));
  SLICE_44 SLICE_44( .DI1(\Howdy/n167[26] ), .DI0(\Howdy/n167[25] ), 
    .D1(\Howdy/n6496 ), .B1(\Howdy/countr[26] ), .D0(\Howdy/n4595 ), 
    .B0(\Howdy/countr[25] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4595 ), 
    .CIN1(\Howdy/n6496 ), .Q0(\Howdy/countr[25] ), .Q1(\Howdy/countr[26] ), 
    .F0(\Howdy/n167[25] ), .F1(\Howdy/n167[26] ), .COUT1(\Howdy/n4597 ), 
    .COUT0(\Howdy/n6496 ));
  SLICE_45 SLICE_45( .D1(\Hola/n6352 ), .D0(\Hola/n4619 ), .C0(VCC_net), 
    .B0(\Hola/pos_x[9] ), .CIN0(\Hola/n4619 ), .CIN1(\Hola/n6352 ), 
    .F0(\Hola/rgb_5__N_273[9] ), .COUT0(\Hola/n6352 ));
  SLICE_46 SLICE_46( .D1(\Hola/n6451 ), .D0(\Hola/n4651 ), 
    .C0(\Hola/pos_x[9] ), .B0(\button_sig[6] ), .CIN0(\Hola/n4651 ), 
    .CIN1(\Hola/n6451 ), .F0(\Hola/n45[9] ), .COUT0(\Hola/n6451 ));
  SLICE_47 SLICE_47( .D1(\Hola/n6349 ), .C1(VCC_net), .B1(\Hola/pos_x[8] ), 
    .D0(\Hola/n4617 ), .C0(VCC_net), .B0(\Hola/pos_x[7] ), .CIN0(\Hola/n4617 ), 
    .CIN1(\Hola/n6349 ), .F0(\Hola/rgb_5__N_273[7] ), 
    .F1(\Hola/rgb_5__N_273[8] ), .COUT1(\Hola/n4619 ), .COUT0(\Hola/n6349 ));
  SLICE_48 SLICE_48( .DI0(\Hola/n45[7] ), .D1(\Hola/n6394 ), 
    .C1(\Hola/pos_x[8] ), .B1(\button_sig[6] ), .D0(\Hola/n4649 ), 
    .C0(\Hola/pos_x[7] ), .B0(\button_sig[6] ), .CE(n1195), .LSR(\Hola/n1217 ), 
    .CLK(pll_clock), .CIN0(\Hola/n4649 ), .CIN1(\Hola/n6394 ), 
    .Q0(\Hola/pos_x[7] ), .F0(\Hola/n45[7] ), .F1(\Hola/n45[8] ), 
    .COUT1(\Hola/n4651 ), .COUT0(\Hola/n6394 ));
  SLICE_49 SLICE_49( .DI1(\Hola/n45[6] ), .DI0(\Hola/n45[5] ), 
    .D1(\Hola/n6379 ), .C1(\Hola/pos_x[6] ), .B1(\button_sig[6] ), 
    .D0(\Hola/n4647 ), .C0(\Hola/pos_x[5] ), .B0(\button_sig[6] ), .CE(n1195), 
    .LSR(\Hola/n1217 ), .CLK(pll_clock), .CIN0(\Hola/n4647 ), 
    .CIN1(\Hola/n6379 ), .Q0(\Hola/pos_x[5] ), .Q1(\Hola/pos_x[6] ), 
    .F0(\Hola/n45[5] ), .F1(\Hola/n45[6] ), .COUT1(\Hola/n4649 ), 
    .COUT0(\Hola/n6379 ));
  SLICE_50 SLICE_50( .D1(\Hola/n6346 ), .C1(VCC_net), .B1(\Hola/pos_x[6] ), 
    .D0(\Hola/n4615 ), .C0(VCC_net), .B0(\Hola/pos_x[5] ), .CIN0(\Hola/n4615 ), 
    .CIN1(\Hola/n6346 ), .F0(\Hola/rgb_5__N_273[5] ), 
    .F1(\Hola/rgb_5__N_273[6] ), .COUT1(\Hola/n4617 ), .COUT0(\Hola/n6346 ));
  SLICE_51 SLICE_51( .D1(\Hola/n6376 ), .C1(\Hola/pos_x[4] ), 
    .B1(\button_sig[6] ), .D0(\Hola/n4645 ), .C0(\Hola/pos_x[3] ), 
    .B0(\button_sig[6] ), .CIN0(\Hola/n4645 ), .CIN1(\Hola/n6376 ), 
    .F0(\Hola/n45[3] ), .F1(\Hola/n45[4] ), .COUT1(\Hola/n4647 ), 
    .COUT0(\Hola/n6376 ));
  SLICE_52 SLICE_52( .D1(\Hola/n6373 ), .C1(\Hola/pos_x[2] ), 
    .B1(\button_sig[6] ), .D0(\Hola/n4643 ), .C0(\Hola/rgb_5__N_262[1] ), 
    .B0(\button_sig[6] ), .CIN0(\Hola/n4643 ), .CIN1(\Hola/n6373 ), 
    .F0(\Hola/n45[1] ), .F1(\Hola/n45[2] ), .COUT1(\Hola/n4645 ), 
    .COUT0(\Hola/n6373 ));
  SLICE_53 SLICE_53( .D1(\Hola/n6343 ), .B1(\Hola/pos_x[4] ), 
    .D0(\Hola/n4613 ), .C0(VCC_net), .B0(\Hola/pos_x[3] ), .CIN0(\Hola/n4613 ), 
    .CIN1(\Hola/n6343 ), .F0(\Hola/rgb_5__N_273[3] ), 
    .F1(\Hola/rgb_5__N_273[4] ), .COUT1(\Hola/n4615 ), .COUT0(\Hola/n6343 ));
  SLICE_54 SLICE_54( .D1(\Hola/n6340 ), .C1(VCC_net), .B1(\Hola/pos_x[2] ), 
    .CIN1(\Hola/n6340 ), .F1(\Hola/rgb_5__N_273[2] ), .COUT1(\Hola/n4613 ), 
    .COUT0(\Hola/n6340 ));
  SLICE_55 SLICE_55( .DI1(\Hola/n45[0] ), .D1(\Hola/n6370 ), 
    .C1(\Hola/rgb_5__N_262[0] ), .B1(\Hola/n330[0] ), .CE(n1195), 
    .LSR(\Hola/n1217 ), .CLK(pll_clock), .CIN1(\Hola/n6370 ), 
    .Q1(\Hola/rgb_5__N_262[0] ), .F1(\Hola/n45[0] ), .COUT1(\Hola/n4643 ), 
    .COUT0(\Hola/n6370 ));
  SLICE_56 SLICE_56( .D1(\Hola/n6367 ), .D0(\Hola/n4610 ), 
    .B0(\Hola/pos_x[9] ), .CIN0(\Hola/n4610 ), .CIN1(\Hola/n6367 ), 
    .F0(\Hola/rgb_5__N_262[9] ), .COUT0(\Hola/n6367 ));
  SLICE_57 SLICE_57( .D1(\Hola/n6364 ), .B1(\Hola/pos_x[8] ), 
    .D0(\Hola/n4608 ), .B0(\Hola/pos_x[7] ), .CIN0(\Hola/n4608 ), 
    .CIN1(\Hola/n6364 ), .F0(\Hola/rgb_5__N_262[7] ), 
    .F1(\Hola/rgb_5__N_262[8] ), .COUT1(\Hola/n4610 ), .COUT0(\Hola/n6364 ));
  SLICE_58 SLICE_58( .D1(\Hola/n6361 ), .B1(\Hola/pos_x[6] ), 
    .D0(\Hola/n4606 ), .B0(\Hola/pos_x[5] ), .CIN0(\Hola/n4606 ), 
    .CIN1(\Hola/n6361 ), .F0(\Hola/rgb_5__N_262[5] ), 
    .F1(\Hola/rgb_5__N_262[6] ), .COUT1(\Hola/n4608 ), .COUT0(\Hola/n6361 ));
  SLICE_59 SLICE_59( .D1(\Hola/n6358 ), .C1(VCC_net), .B1(\Hola/pos_x[4] ), 
    .D0(\Hola/n4604 ), .B0(\Hola/pos_x[3] ), .CIN0(\Hola/n4604 ), 
    .CIN1(\Hola/n6358 ), .F0(\Hola/rgb_5__N_262[3] ), 
    .F1(\Hola/rgb_5__N_262[4] ), .COUT1(\Hola/n4606 ), .COUT0(\Hola/n6358 ));
  SLICE_60 SLICE_60( .D1(\Hola/n6355 ), .C1(VCC_net), .B1(\Hola/pos_x[2] ), 
    .CIN1(\Hola/n6355 ), .F1(\Hola/rgb_5__N_262[2] ), .COUT1(\Hola/n4604 ), 
    .COUT0(\Hola/n6355 ));
  SLICE_61 SLICE_61( .DI0(\NES/count[19]/sig_000/FeedThruLUT ), 
    .D0(\NES/count[19] ), .CLK(pll_clock), .Q0(\NES/NEScount[9] ), 
    .F0(\NES/count[19]/sig_000/FeedThruLUT ));
  SLICE_62 SLICE_62( .DI1(\NES/count[17]/sig_002/FeedThruLUT ), 
    .DI0(\NES/count[18]/sig_001/FeedThruLUT ), .C1(\NES/count[17] ), 
    .B0(\NES/count[18] ), .CLK(pll_clock), .Q0(\NES/NEScount[8] ), 
    .Q1(\NES/NEScount[7] ), .F0(\NES/count[18]/sig_001/FeedThruLUT ), 
    .F1(\NES/count[17]/sig_002/FeedThruLUT ));
  SLICE_64 SLICE_64( .DI1(\NES/count[15]/sig_004/FeedThruLUT ), 
    .DI0(\NES/count[16]/sig_003/FeedThruLUT ), .C1(\NES/count[15] ), 
    .B0(\NES/count[16] ), .CLK(pll_clock), .Q0(\NES/NEScount[6] ), 
    .Q1(\NES/NEScount[5] ), .F0(\NES/count[16]/sig_003/FeedThruLUT ), 
    .F1(\NES/count[15]/sig_004/FeedThruLUT ));
  SLICE_66 SLICE_66( .DI1(\NES/count[13]/sig_006/FeedThruLUT ), 
    .DI0(\NES/count[14]/sig_005/FeedThruLUT ), .D1(\NES/count[13] ), 
    .C0(\NES/count[14] ), .CLK(pll_clock), .Q0(\NES/NEScount[4] ), 
    .Q1(\NES/NEScount[3] ), .F0(\NES/count[14]/sig_005/FeedThruLUT ), 
    .F1(\NES/count[13]/sig_006/FeedThruLUT ));
  SLICE_68 SLICE_68( .DI1(\NES/count[10]/sig_009/FeedThruLUT ), 
    .DI0(\NES/count[12]/sig_007/FeedThruLUT ), .B1(\NES/count[10] ), 
    .D0(\NES/count[12] ), .CLK(pll_clock), .Q0(\NES/NEScount[2] ), 
    .Q1(\NES/NEScount[0] ), .F0(\NES/count[12]/sig_007/FeedThruLUT ), 
    .F1(\NES/count[10]/sig_009/FeedThruLUT ));
  SLICE_69 SLICE_69( .DI1(n1221), .DI0(n1223), .D1(n5), .C1(control_c), 
    .B1(\button_sig[6] ), .A1(\NEScount[1] ), .D0(\button_sig[3] ), 
    .C0(\NES/n1166 ), .B0(control_c), .A0(\NES/n11 ), .CLK(NESclk_c), 
    .Q0(\button_sig[3] ), .Q1(\button_sig[6] ), .F0(n1223), .F1(n1221));
  SLICE_79 SLICE_79( .DI1(\Hola/n5145 ), .DI0(\Hola/n57[8] ), 
    .D1(\Hola/pos_x[9] ), .C1(\Hola/n45[4] ), .B1(\Hola/n230 ), 
    .A1(\Hola/n65 ), .D0(\Hola/n3151 ), .C0(\Hola/n45[8] ), .B0(\Hola/n7 ), 
    .A0(\Hola/n230 ), .CE(n1195), .CLK(pll_clock), .Q0(\Hola/pos_x[8] ), 
    .Q1(\Hola/pos_x[4] ), .F0(\Hola/n57[8] ), .F1(\Hola/n5145 ));
  SLICE_81 SLICE_81( .DI1(\Hola/n57[2] ), .DI0(\Hola/n57[3] ), 
    .D1(\Hola/n230 ), .C1(\Hola/n3151 ), .A1(\Hola/n45[2] ), .D0(\Hola/n3151 ), 
    .C0(\Hola/n45[3] ), .B0(\Hola/n7 ), .A0(\Hola/n230 ), .CE(n1195), 
    .CLK(pll_clock), .Q0(\Hola/pos_x[3] ), .Q1(\Hola/pos_x[2] ), 
    .F0(\Hola/n57[3] ), .F1(\Hola/n57[2] ));
  SLICE_84 SLICE_84( .D1(\rowp[4] ), .C1(\Hola/n6_adj_326 ), .B1(\Hola/n6 ), 
    .A1(\Hola/n3043 ), .D0(\Hola/pos_x[9] ), .C0(\Hola/n5296 ), .B0(\rowp[2] ), 
    .A0(\Hola/n65 ), .F0(\Hola/n6_adj_326 ), .F1(\Hola/n93 ));
  SLICE_85 SLICE_85( .D1(\rowp[4] ), .C1(\Hola/n87 ), .B1(\button_sig[3] ), 
    .A1(\rowp[2] ), .D0(\Hola/pos_x[9] ), .B0(\Hola/n5296 ), .A0(\Hola/n65 ), 
    .F0(\Hola/n87 ), .F1(\Hola/n6 ));
  SLICE_86 SLICE_86( .D1(\NES/n1139 ), .C1(\NES/n6 ), .B1(\NEScount[1] ), 
    .A1(\NES/NEScount[0] ), .C0(\NES/n18 ), .B0(\NES/NEScount[4] ), 
    .A0(\NES/NEScount[2] ), .F0(\NES/n6 ), .F1(n8));
  SLICE_88 SLICE_88( .D1(\NEScount[1] ), .C1(\NES/n1139 ), 
    .A1(\NES/NEScount[0] ), .D0(\NES/NEScount[4] ), .C0(\NES/NEScount[2] ), 
    .B0(\NES/NEScount[3] ), .A0(\NES/n18 ), .F0(\NES/n1139 ), .F1(CNTclk_N_89));
  SLICE_89 SLICE_89( .D1(\NES/NEScount[9] ), .C1(\NES/n6_adj_364 ), 
    .B1(\NES/NEScount[6] ), .A1(\NES/NEScount[8] ), .D0(\NES/NEScount[7] ), 
    .C0(\NES/NEScount[5] ), .F0(\NES/n6_adj_364 ), .F1(\NES/n18 ));
  SLICE_90 SLICE_90( .C1(\NES/n1166 ), .A1(\NES/NEScount[0] ), 
    .D0(\NES/NEScount[4] ), .C0(\NES/NEScount[2] ), .B0(\NES/NEScount[3] ), 
    .A0(\NES/n18 ), .F0(\NES/n1166 ), .F1(n5));
  SLICE_92 SLICE_92( .D1(\NES/n35 ), .C1(\NES/n33 ), .B1(\NES/n36 ), 
    .A1(\NES/n34 ), .D0(\NES/count[8] ), .C0(\NES/count[9] ), 
    .B0(\NES/count[15] ), .A0(\NES/count[18] ), .F0(\NES/n33 ), 
    .F1(\NES/n1215 ));
  SLICE_93 SLICE_93( .D1(\NES/count[6] ), .C1(\NES/n32 ), .B1(\NES/count[7] ), 
    .A1(\NES/n22 ), .D0(\NES/count[16] ), .C0(\NES/count[17] ), 
    .B0(\NES/count[4] ), .A0(\NES/count[19] ), .F0(\NES/n32 ), .F1(\NES/n36 ));
  SLICE_95 SLICE_95( .D1(CNTclk_N_89), .C1(\NES/n1169 ), .B1(\NES/NESclk ), 
    .A1(\NES/n5497 ), .D0(\NES/NEScount[4] ), .C0(\NES/n18 ), .F0(\NES/n1169 ), 
    .F1(NESclk_c));
  SLICE_96 SLICE_96( .D0(\Howdy/countc[27] ), .C0(\Howdy/countc[25] ), 
    .B0(\Howdy/countc[28] ), .A0(\Howdy/countc[17] ), .F0(\Howdy/n35 ));
  SLICE_97 SLICE_97( .C1(\Howdy/n1145 ), .B1(\colp[8] ), .A1(\colp[9] ), 
    .D0(\Howdy/n36 ), .C0(\Howdy/n38 ), .B0(\Howdy/n35 ), .A0(\Howdy/n37 ), 
    .F0(\Howdy/n1145 ), .F1(\Howdy/n1085 ));
  SLICE_98 SLICE_98( .D1(\Howdy/countc[30] ), .C1(\Howdy/n22 ), 
    .B1(\Howdy/countc[22] ), .A1(\Howdy/countc[26] ), .D0(\Howdy/countc[20] ), 
    .A0(\Howdy/countc[12] ), .F0(\Howdy/n22 ), .F1(\Howdy/n37 ));
  SLICE_100 SLICE_100( .D1(\rowp[4] ), .C1(\Howdy/n1171 ), .A1(\rowp[5] ), 
    .D0(\rowp[8] ), .C0(\rowp[7] ), .A0(\rowp[6] ), .F0(\Howdy/n1171 ), 
    .F1(\Howdy/n1148 ));
  SLICE_101 SLICE_101( .D1(\Howdy/n1142 ), .C1(\Howdy/n8 ), .B1(\Howdy/n1148 ), 
    .A1(\rowp[9] ), .B0(\rowp[2] ), .A0(\rowp[3] ), .F0(\Howdy/n8 ), 
    .F1(\Howdy/n62 ));
  SLICE_102 SLICE_102( .D1(\Howdy/countc[16] ), .C1(\Howdy/n34 ), 
    .B1(\Howdy/countc[18] ), .A1(\Howdy/n24 ), .D0(\Howdy/countc[10] ), 
    .C0(\Howdy/countc[15] ), .B0(\Howdy/countc[14] ), .A0(\Howdy/countc[11] ), 
    .F0(\Howdy/n34 ), .F1(\Howdy/n38 ));
  SLICE_103 SLICE_103( .D1(\Howdy/countc[21] ), .C1(\Howdy/countc[13] ), 
    .B1(\Howdy/countc[23] ), .A1(\Howdy/countc[24] ), .C0(\Howdy/countc[19] ), 
    .A0(\Howdy/countc[29] ), .F0(\Howdy/n24 ), .F1(\Howdy/n36 ));
  SLICE_104 SLICE_104( .C1(\Howdy/n59 ), .B1(\colp[8] ), .A1(\colp[9] ), 
    .D0(\rowp[3] ), .C0(\Howdy/n1148 ), .B0(\rowp[2] ), .A0(\Howdy/rowp[1]_2 ), 
    .F0(\Howdy/n59 ), .F1(\Howdy/n6_adj_340 ));
  SLICE_105 SLICE_105( .D1(\colp[2] ), .C1(\colp[8] ), .B1(\rowp[7] ), 
    .A1(\rowp[5] ), .D0(\Howdy/n59 ), .C0(\rowp[9] ), .B0(\Howdy/countr[31] ), 
    .A0(\Howdy/n1142 ), .F0(\Howdy/valid_N_234 ), .F1(\Howdy/n19 ));
  SLICE_107 SLICE_107( .D1(\Howdy/n6_adj_340 ), .C1(\Howdy/n5298 ), 
    .B1(\Howdy/n42_c ), .A1(\Howdy/n1095 ), .C0(\rowp[9] ), 
    .A0(\Howdy/rowp[0]_2 ), .F0(\Howdy/n5298 ), .F1(n1195));
  SLICE_109 SLICE_109( .D1(\Howdy/n5093 ), .C1(\Howdy/n1087 ), 
    .B1(\Howdy/n1145 ), .A1(\Howdy/n5293 ), .D0(\colp[7] ), .C0(\Howdy/n10 ), 
    .B0(\Howdy/n1157 ), .A0(\Howdy/n1085 ), .F0(\Howdy/n1087 ), 
    .F1(\Howdy/n6_adj_363 ));
  SLICE_110 SLICE_110( .D1(\colp[0] ), .C1(\Howdy/n1114 ), .B1(\colp[4] ), 
    .D0(\colp[2] ), .B0(\colp[1] ), .A0(\colp[3] ), .F0(\Howdy/n1114 ), 
    .F1(\Howdy/n5067 ));
  SLICE_111 SLICE_111( .D1(\colp[0] ), .C1(\Howdy/n1095 ), .B1(\colp[4] ), 
    .A1(\Howdy/n1114 ), .D0(\colp[7] ), .B0(\colp[5] ), .A0(\colp[6] ), 
    .F0(\Howdy/n1095 ), .F1(\Howdy/n5093 ));
  SLICE_112 SLICE_112( .C1(\rowp[8] ), .B1(\rowp[7] ), .A1(\rowp[6] ), 
    .C0(\rowp[5] ), .B0(\rowp[8] ), .A0(\rowp[7] ), .F0(n4), .F1(n1693));
  SLICE_113 SLICE_113( .D1(n4), .C1(n41), .B1(n42), .A1(n1693), .D0(\rowp[3] ), 
    .C0(\Howdy/rowp[0]_2 ), .B0(\Howdy/n3 ), .A0(\rowp[4] ), .F0(n41), 
    .F1(\Hola/n7_adj_330 ));
  SLICE_114 SLICE_114( .D1(\rowp[4] ), .C1(\Howdy/n3 ), .B1(\rowp[5] ), 
    .A1(\rowp[3] ), .C0(\Howdy/rowp[1]_2 ), .A0(\rowp[2] ), .F0(\Howdy/n3 ), 
    .F1(n42));
  SLICE_116 SLICE_116( .D1(\colp[5] ), .C1(\colp[9] ), .B1(\colp[4] ), 
    .A1(\colp[8] ), .D0(\colp[8] ), .B0(\colp[9] ), .F0(\Howdy/n5293 ), 
    .F1(\Hola/n5515 ));
  SLICE_118 SLICE_118( .D1(\Howdy/n1082 ), .C1(\Howdy/n61 ), .B1(\rowp[5] ), 
    .A1(\rowp[3] ), .B0(\rowp[4] ), .A0(\rowp[2] ), .F0(\Howdy/n61 ), 
    .F1(\Howdy/n1084 ));
  SLICE_120 SLICE_120( .B1(\Howdy/n62 ), .A1(\Howdy/countr[31] ), 
    .D0(\Howdy/countc[31] ), .C0(\Howdy/n62_adj_342 ), .B0(\Howdy/countr[31] ), 
    .A0(\Howdy/n62 ), .F0(\Howdy/row_9__N_187 ), .F1(\Howdy/n942 ));
  SLICE_121 SLICE_121( .C1(\Howdy/n62_adj_342 ), .A1(\Howdy/countc[31] ), 
    .D0(\Howdy/n5293 ), .C0(\Howdy/n5067 ), .B0(\Howdy/n1095 ), 
    .A0(\Howdy/n1145 ), .F0(\Howdy/n62_adj_342 ), .F1(\Howdy/row_9__N_189 ));
  SLICE_122 SLICE_122( .D1(\Hola/pos_x[9] ), .C1(n3143), .B1(\Hola/n3043 ), 
    .A1(\Hola/n5296 ), .D0(\Howdy/n20 ), .C0(\Howdy/n4_adj_353 ), 
    .B0(\Howdy/n19 ), .A0(\Howdy/n61 ), .F0(n3143), .F1(\Hola/n3151 ));
  SLICE_124 SLICE_124( .D1(\rowp[8] ), .C1(\Howdy/n18 ), .B1(\colp[5] ), 
    .A1(\rowp[3] ), .D0(\colp[9] ), .C0(\rowp[6] ), .B0(\colp[4] ), 
    .A0(\colp[3] ), .F0(\Howdy/n18 ), .F1(\Howdy/n20 ));
  SLICE_126 SLICE_126( .D1(\rowp[5] ), .C1(n5499), .B1(\rowp[7] ), 
    .A1(\Hola/n93 ), .D0(\Howdy/rowp[1]_2 ), .C0(\rowp[9] ), 
    .B0(\Howdy/rowp[0]_2 ), .A0(\colp[3] ), .F0(n5499), .F1(\Hola/n23 ));
  SLICE_129 SLICE_129( .C1(\Howdy/n1142 ), .B1(\rowp[9] ), .A1(\Howdy/n1171 ), 
    .D0(\Howdy/n36_adj_357 ), .C0(\Howdy/n38_adj_358 ), 
    .B0(\Howdy/n35_adj_355 ), .A0(\Howdy/n37_adj_356 ), .F0(\Howdy/n1142 ), 
    .F1(\Howdy/n1082 ));
  SLICE_130 SLICE_130( .D1(\Howdy/rowp[1]_2 ), .C1(n3041), .B1(\rowp[9] ), 
    .A1(\Howdy/rowp[0]_2 ), .D0(\colp[7] ), .A0(\colp[6] ), .F0(n3041), 
    .F1(\Howdy/n4_adj_353 ));
  SLICE_132 SLICE_132( .D1(\colp[5] ), .C1(\colp[6] ), .D0(\colp[4] ), 
    .B0(\Howdy/n62_adj_354 ), .F0(\Howdy/n42_c ), .F1(\Howdy/n1157 ));
  SLICE_133 SLICE_133( .C1(\Howdy/n62_adj_354 ), .A1(\colp[4] ), 
    .D0(\colp[3] ), .C0(\colp[2] ), .B0(\colp[1] ), .A0(\colp[0] ), 
    .F0(\Howdy/n62_adj_354 ), .F1(\Howdy/n10 ));
  SLICE_135 SLICE_135( .D1(\Howdy/countr[16] ), .C1(\Howdy/n34_adj_361 ), 
    .B1(\Howdy/n24_adj_362 ), .A1(\Howdy/countr[18] ), .D0(\Howdy/countr[15] ), 
    .C0(\Howdy/countr[10] ), .B0(\Howdy/countr[14] ), .A0(\Howdy/countr[11] ), 
    .F0(\Howdy/n34_adj_361 ), .F1(\Howdy/n38_adj_358 ));
  SLICE_136 SLICE_136( .D1(\Howdy/countr[26] ), .C1(\Howdy/n22_adj_359 ), 
    .B1(\Howdy/countr[30] ), .A1(\Howdy/countr[22] ), .B0(\Howdy/countr[12] ), 
    .A0(\Howdy/countr[20] ), .F0(\Howdy/n22_adj_359 ), 
    .F1(\Howdy/n37_adj_356 ));
  SLICE_138 SLICE_138( .D1(\Hola/rgb_5__N_262[2] ), .C1(\Hola/n41_c ), 
    .B1(\colp[2] ), .D0(\Hola/rgb_5__N_262[0] ), .C0(\Hola/rgb_5__N_262[1] ), 
    .B0(\colp[0] ), .A0(\colp[1] ), .F0(\Hola/n41_c ), .F1(\Hola/n1528 ));
  SLICE_140 SLICE_140( .D0(n1195), .C0(\Hola/n230 ), .F0(\Hola/n1217 ));
  SLICE_141 SLICE_141( .D1(\Hola/n5515 ), .C1(\Hola/n5517 ), .B1(\colp[2] ), 
    .A1(\Hola/n23 ), .D0(\rowp[3] ), .C0(n3041), .B0(\rowp[8] ), 
    .A0(\rowp[6] ), .F0(\Hola/n5517 ), .F1(\Hola/n230 ));
  SLICE_143 SLICE_143( .D1(\Hola/pos_x[4] ), .C1(\Hola/n134 ), .B1(\Hola/n3 ), 
    .A1(\Hola/pos_x[8] ), .D0(\Hola/rgb_5__N_262[0] ), .C0(\Hola/pos_x[3] ), 
    .B0(\Hola/pos_x[2] ), .A0(\Hola/rgb_5__N_262[1] ), .F0(\Hola/n134 ), 
    .F1(\Hola/n65 ));
  SLICE_145 SLICE_145( .D1(\Hola/n6_adj_327 ), .C1(\Hola/n3 ), 
    .B1(\Hola/pos_x[4] ), .A1(\Hola/pos_x[8] ), .C0(\Hola/pos_x[7] ), 
    .B0(\Hola/pos_x[6] ), .A0(\Hola/pos_x[5] ), .F0(\Hola/n3 ), 
    .F1(\Hola/n5296 ));
  SLICE_146 SLICE_146( .D1(\Hola/rgb_5__N_272 ), .C1(\Hola/n8 ), 
    .B1(\rowp[9] ), .A1(\Hola/n7_adj_330 ), .D0(\colp[9] ), .C0(\Hola/n18 ), 
    .B0(\Hola/rgb_5__N_262[9] ), .A0(validp), .F0(\Hola/n8 ), .F1(rgbT_c));
  SLICE_148 SLICE_148( .D1(\Hola/rgb_5__N_273[8] ), .C1(\Hola/n16 ), 
    .B1(\colp[8] ), .D0(\Hola/rgb_5__N_273[7] ), .C0(\Hola/n14 ), 
    .A0(\colp[7] ), .F0(\Hola/n16 ), .F1(\Hola/n18_adj_331 ));
  SLICE_149 SLICE_149( .D0(\Hola/rgb_5__N_273[9] ), .C0(\Hola/n18_adj_331 ), 
    .B0(\colp[9] ), .F0(\Hola/rgb_5__N_272 ));
  SLICE_151 SLICE_151( .D1(\colp[6] ), .C1(\Hola/n12 ), 
    .B1(\Hola/rgb_5__N_273[6] ), .C0(\Hola/n10 ), .B0(\colp[5] ), 
    .A0(\Hola/rgb_5__N_273[5] ), .F0(\Hola/n12 ), .F1(\Hola/n14 ));
  SLICE_153 SLICE_153( .C1(\Hola/n8_adj_332 ), .B1(\Hola/rgb_5__N_273[4] ), 
    .A1(\colp[4] ), .C0(\Hola/n6_adj_333 ), .B0(\Hola/rgb_5__N_273[3] ), 
    .A0(\colp[3] ), .F0(\Hola/n8_adj_332 ), .F1(\Hola/n10 ));
  SLICE_155 SLICE_155( .D1(\colp[2] ), .C1(\Hola/n4_adj_334 ), 
    .A1(\Hola/rgb_5__N_273[2] ), .D0(\Hola/rgb_5__N_262[1] ), .C0(\colp[0] ), 
    .B0(\colp[1] ), .A0(\Hola/rgb_5__N_262[0] ), .F0(\Hola/n4_adj_334 ), 
    .F1(\Hola/n6_adj_333 ));
  SLICE_156 SLICE_156( .D1(\Hola/rgb_5__N_262[8] ), .C1(\Hola/n16_adj_335 ), 
    .A1(\colp[8] ), .D0(\Hola/rgb_5__N_262[7] ), .C0(\Hola/n14_adj_336 ), 
    .A0(\colp[7] ), .F0(\Hola/n16_adj_335 ), .F1(\Hola/n18 ));
  SLICE_158 SLICE_158( .C1(\Hola/n12_adj_337 ), .B1(\colp[6] ), 
    .A1(\Hola/rgb_5__N_262[6] ), .D0(\Hola/rgb_5__N_262[5] ), 
    .C0(\Hola/n10_adj_338 ), .B0(\colp[5] ), .F0(\Hola/n12_adj_337 ), 
    .F1(\Hola/n14_adj_336 ));
  SLICE_160 SLICE_160( .D1(\colp[4] ), .C1(\Hola/n8_adj_339 ), 
    .B1(\Hola/rgb_5__N_262[4] ), .C0(\Hola/n1528 ), 
    .B0(\Hola/rgb_5__N_262[3] ), .A0(\colp[3] ), .F0(\Hola/n8_adj_339 ), 
    .F1(\Hola/n10_adj_338 ));
  SLICE_162 SLICE_162( .D1(\NES/NEScount[2] ), .C1(\NES/NEScount[0] ), 
    .B1(\NEScount[1] ), .A1(\NES/NEScount[3] ), .D0(\NES/NEScount[0] ), 
    .B0(\NES/NEScount[3] ), .A0(\NEScount[1] ), .F0(n7), .F1(\NES/n5497 ));
  SLICE_164 SLICE_164( .DI1(\Hola/n57[1] ), .D1(\Hola/n45[1] ), 
    .C1(\Hola/n230 ), .B1(\Hola/n3151 ), .A1(\Hola/n7 ), .D0(\Hola/pos_x[2] ), 
    .C0(\Hola/rgb_5__N_262[1] ), .A0(\Hola/pos_x[3] ), .CE(n1195), 
    .CLK(pll_clock), .Q1(\Hola/rgb_5__N_262[1] ), .F0(\Hola/n6_adj_327 ), 
    .F1(\Hola/n57[1] ));
  SLICE_167 SLICE_167( .DI1(\Hola/n5141 ), .D1(\Hola/pos_x[9] ), 
    .C1(\Hola/n45[9] ), .B1(\Hola/n65 ), .A1(\Hola/n230 ), .C0(\Hola/n65 ), 
    .A0(\Hola/pos_x[9] ), .CE(n1195), .CLK(pll_clock), .Q1(\Hola/pos_x[9] ), 
    .F0(\Hola/n7 ), .F1(\Hola/n5141 ));
  SLICE_168 SLICE_168( .D0(\Howdy/countr[29] ), .C0(\Howdy/countr[19] ), 
    .F0(\Howdy/n24_adj_362 ));
  SLICE_170 SLICE_170( .D0(\Howdy/countr[23] ), .C0(\Howdy/countr[13] ), 
    .B0(\Howdy/countr[24] ), .A0(\Howdy/countr[21] ), .F0(\Howdy/n36_adj_357 ));
  SLICE_171 SLICE_171( .D0(\Howdy/countr[25] ), .C0(\Howdy/countr[17] ), 
    .B0(\Howdy/countr[28] ), .A0(\Howdy/countr[27] ), .F0(\Howdy/n35_adj_355 ));
  SLICE_174 SLICE_174( .D0(\NES/count[1] ), .C0(\NES/count[14] ), 
    .B0(\NES/count[5] ), .A0(\NES/count[2] ), .F0(\NES/n34 ));
  SLICE_175 SLICE_175( .D0(\NES/count[0] ), .C0(\NES/count[3] ), 
    .B0(\NES/count[11] ), .A0(\NES/count[13] ), .F0(\NES/n35 ));
  SLICE_176 SLICE_176( .DI1(\NES/count[9]/sig_010/FeedThruLUT ), 
    .D1(\NES/count[9] ), .B0(\NES/count[12] ), .A0(\NES/count[10] ), 
    .CLK(pll_clock), .Q1(\NES/NESclk ), .F0(\NES/n22 ), 
    .F1(\NES/count[9]/sig_010/FeedThruLUT ));
  SLICE_179 SLICE_179( .DI1(\Howdy/valid_N_229 ), .D1(\Howdy/countr[31] ), 
    .C1(\Howdy/n1084 ), .B1(\Howdy/n6_adj_363 ), .A1(\Howdy/countc[31] ), 
    .D0(\Howdy/countc[31] ), .C0(\Howdy/n62_adj_342 ), 
    .LSR(\Howdy/valid_N_234 ), .CLK(pll_clock), .Q1(validp), .F0(\Howdy/n943 ), 
    .F1(\Howdy/valid_N_229 ));
  SLICE_191 SLICE_191( .DI1(\NES/count[11]/sig_008/FeedThruLUT ), 
    .B1(\NES/count[11] ), .D0(\NES/NEScount[0] ), .A0(\NEScount[1] ), 
    .CLK(pll_clock), .Q1(\NEScount[1] ), .F0(\NES/n11 ), 
    .F1(\NES/count[11]/sig_008/FeedThruLUT ));
  SLICE_192 SLICE_192( .DI1(\Howdy/n6099 ), .D1(\Howdy/rowp[1]_2 ), 
    .C1(\Howdy/n6 ), .B1(\Howdy/rowp[0]_2 ), .A1(\Howdy/n1082 ), 
    .D0(\rowp[3] ), .C0(\rowp[4] ), .B0(\rowp[5] ), .A0(\rowp[2] ), 
    .LSR(\Howdy/n942 ), .CLK(pll_clock), .Q1(VSYNC_c), .F0(\Howdy/n6 ), 
    .F1(\Howdy/n6099 ));
  SLICE_195 SLICE_195( .DI1(\Howdy/n5077 ), .D1(\colp[7] ), 
    .C1(\Howdy/n4_adj_341 ), .B1(\Howdy/n42_c ), .A1(\Howdy/n1085 ), 
    .D0(\colp[6] ), .A0(\colp[5] ), .LSR(\Howdy/n943 ), .CLK(pll_clock), 
    .Q1(HSYNC_c), .F0(\Howdy/n4_adj_341 ), .F1(\Howdy/n5077 ));
  SLICE_199 SLICE_199( .B0(\colp[1] ), .A0(\colp[0] ), .F0(\Hola/n3043 ));
  SLICE_200 SLICE_200( .DI1(n1222), .D1(\button_sig[7] ), .C1(control_c), 
    .B1(n8), .A1(n7), .C0(\button_sig[6] ), .A0(\button_sig[7] ), 
    .CLK(NESclk_c), .Q1(\button_sig[7] ), .F0(\Hola/n330[0] ), .F1(n1222));
  SLICE_201 SLICE_201( .F0(VCC_net));
  Hi Hi( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  Hello_lscc_pll_inst_u_PLL_B \Hello.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk), .FEEDBACK(\Hello/lscc_pll_inst/feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\Hello/lscc_pll_inst/feedback_w ), 
    .OUTGLOBAL(pll_clock));
  control control_I( .PADDI(control_c), .control(control));
  NESclk NESclk_I( .PADDO(NESclk_c), .NESclk(NESclk));
  latch latch_I( .PADDO(CNTclk_N_89), .latch(latch));
  rgbT_0_ \rgbT[0]_I ( .PADDO(rgbT_c), .rgbT0(rgbT[0]));
  rgbT_1_ \rgbT[1]_I ( .PADDO(rgbT_c), .rgbT1(rgbT[1]));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
  VSYNC VSYNC_I( .PADDO(VSYNC_c), .VSYNC(VSYNC));
  rgbT_5_ \rgbT[5]_I ( .PADDO(rgbT_c), .rgbT5(rgbT[5]));
  rgbT_4_ \rgbT[4]_I ( .PADDO(rgbT_c), .rgbT4(rgbT[4]));
  rgbT_3_ \rgbT[3]_I ( .PADDO(rgbT_c), .rgbT3(rgbT[3]));
  rgbT_2_ \rgbT[2]_I ( .PADDO(rgbT_c), .rgbT2(rgbT[2]));
endmodule

module SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_231_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_231_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_231_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_231__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_231__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i13 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_12 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_13 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i25 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_14 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_15 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_16 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_17 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_18 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i21 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_19 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_20 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_21 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i19 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_22 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i17 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_23 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_31 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_33 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i32 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i30 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i31 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_35 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_36 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_38 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_39 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_40 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_233_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_233__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_233__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_41 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i28 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i29 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_42 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i15 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_43 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countr__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i26 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i27 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_45 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_227_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_46 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/pos_x_232_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_227_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Hola/pos_x_232_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \Hola/pos_x_232__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20001 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_49 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Hola/pos_x_232_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20001 \Hola/pos_x_232__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre20001 \Hola/pos_x_232__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_50 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_227_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/pos_x_232_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/pos_x_232_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_53 ( input D1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_227_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/add_227_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_55 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Hola/pos_x_232_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Hola/pos_x_232__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_56 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_228_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_228_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_228_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_59 ( input D1, C1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_228_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/add_228_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_61 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 SLICE_61_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/NEScount_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_62 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_62_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_62_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_64 ( input DI1, DI0, C1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_64_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_64_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_66 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 SLICE_66_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 SLICE_66_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_68 ( input DI1, DI0, B1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_68_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 SLICE_68_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 i1010_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 i1012_3_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xCC4E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFB01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_79 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CE, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \Hola/i21_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \Hola/pos_x_232_mux_6_i9_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \Hola/pos_x_232__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Hola/pos_x_232__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x74FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x7250") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_81 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, A0, CE, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40011 \Hola/pos_x_232_mux_6_i3_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \Hola/pos_x_232_mux_6_i4_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  ffsre2 \Hola/pos_x_232__i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \Hola/pos_x_232__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xD8FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40013 \Hola/i1_4_lut_adj_31 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 \Hola/i2_4_lut_adj_32 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x4454") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x2203") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_85 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40015 \Hola/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \Hola/i111_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x55CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_86 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40017 \NES/i3_4_lut_adj_74 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \NES/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 \NES/i5270_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \NES/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x0005") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_89 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40021 \NES/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 \NES/i1_2_lut_adj_73 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 \NES/i1_2_lut_adj_75 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \NES/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_92 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40025 \NES/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \NES/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 \NES/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \NES/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_95 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40029 \NES/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \NES/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input D0, C0, B0, A0, output F0 );

  lut40031 \Howdy/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \Howdy/i1_2_lut_3_lut_adj_39 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \Howdy/i20_4_lut_adj_72 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40034 \Howdy/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \Howdy/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_100 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40036 \Howdy/i2_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \Howdy/i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_101 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40038 \Howdy/i1_4_lut_adj_54 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \Howdy/i1_2_lut_adj_55 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_102 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40040 \Howdy/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 \Howdy/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_103 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \Howdy/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \Howdy/i3_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_104 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 \Howdy/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \Howdy/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 \Howdy/i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \Howdy/i5272_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x3222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \Howdy/i5275_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \Howdy/i1_2_lut_adj_49 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40048 \Howdy/i2_4_lut_adj_68 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \Howdy/i1_4_lut_adj_70 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x1030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xFEAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_110 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \Howdy/i2_3_lut_adj_47 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \Howdy/i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \Howdy/i2_4_lut_adj_69 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \Howdy/i1_2_lut_3_lut_adj_50 ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_112 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \Howdy/i1_2_lut_3_lut_adj_41 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 \Howdy/i1_2_lut_3_lut_adj_40 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40056 \Hola/i1_4_lut_adj_36 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \Howdy/i1_4_lut_adj_57 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x7222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_114 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 \Howdy/i1_4_lut_adj_60 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \Howdy/i1_2_lut_adj_42 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_116 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40042 \Hola/i5005_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 \Howdy/i1_2_lut_adj_43 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_118 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40061 \Howdy/i1_4_lut_adj_67 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \Howdy/i1_2_lut_adj_44 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_120 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \Howdy/i743_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \Howdy/i2_3_lut_4_lut_adj_45 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_121 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \Howdy/i2827_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \Howdy/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_122 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40066 \Hola/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \Howdy/i1_4_lut_adj_48 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 \Howdy/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \Howdy/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40067 \Hola/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \Howdy/i4989_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_129 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \Howdy/i2_3_lut_adj_56 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \Howdy/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \Howdy/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40035 \Hola/i2834_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40071 \Howdy/i1_2_lut_adj_52 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \Howdy/i1_2_lut_adj_51 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_133 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Howdy/i1_2_lut_adj_71 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \Howdy/i2_4_lut_adj_53 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_135 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 \Howdy/i17_4_lut_adj_62 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \Howdy/i13_4_lut_adj_64 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_136 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 \Howdy/i16_4_lut_adj_59 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \Howdy/i1_2_lut_adj_63 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_138 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \Hola/i1318_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \Hola/i40_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x7150") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_140 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40078 \Hola/i1006_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 \Hola/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \Hola/i5007_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40081 \Hola/i1_4_lut_adj_34 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \Hola/i1_4_lut_adj_35 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40083 \Hola/i1_4_lut_adj_33 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 \Hola/i2_3_lut_adj_38 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40085 \Hola/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 \Hola/i2_4_lut_adj_37 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x80A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40087 \Hola/rgb_5__I_29_i18_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \Hola/rgb_5__I_29_i16_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_149 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40089 \Hola/rgb_5__I_29_i20_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40090 \Hola/rgb_5__I_29_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Hola/rgb_5__I_29_i12_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xD4D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_153 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \Hola/rgb_5__I_29_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \Hola/rgb_5__I_29_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_155 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 \Hola/rgb_5__I_29_i6_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \Hola/rgb_5__I_29_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x40DC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_156 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 \Hola/col_9__I_0_45_i18_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \Hola/col_9__I_0_45_i16_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_158 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40092 \Hola/col_9__I_0_45_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \Hola/col_9__I_0_45_i12_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_160 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40087 \Hola/col_9__I_0_45_i10_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \Hola/col_9__I_0_45_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_162 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \NES/i4987_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \NES/i2_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_164 ( input DI1, D1, C1, B1, A1, D0, C0, A0, CE, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40100 \Hola/pos_x_232_mux_6_i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40101 \Hola/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Hola/pos_x_232__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xBFB0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_167 ( input DI1, D1, C1, B1, A1, C0, A0, CE, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40102 \Hola/i17_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \Hola/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Hola/pos_x_232__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xD850") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_168 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40030 \Howdy/i3_2_lut_adj_65 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_170 ( input D0, C0, B0, A0, output F0 );

  lut40031 \Howdy/i15_4_lut_adj_61 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_171 ( input D0, C0, B0, A0, output F0 );

  lut40103 \Howdy/i14_4_lut_adj_58 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_174 ( input D0, C0, B0, A0, output F0 );

  lut40104 \NES/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_175 ( input D0, C0, B0, A0, output F0 );

  lut40105 \NES/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_176 ( input DI1, D1, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40004 SLICE_176_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 \NES/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NESclk_68 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module SLICE_179 ( input DI1, D1, C1, B1, A1, D0, C0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40106 \Howdy/i3_4_lut_adj_66 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 \Howdy/i744_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/valid_41 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_191 ( input DI1, B1, D0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40006 SLICE_191_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40035 \NES/NEScount_9__I_0_77_i11_2_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module SLICE_192 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40107 \Howdy/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \Howdy/i2_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \Howdy/von_39 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_195 ( input DI1, D1, C1, B1, A1, D0, A0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40109 \Howdy/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \Howdy/i1_2_lut_adj_46 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/hon_40 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_199 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40111 \Hola/i2836_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_200 ( input DI1, D1, C1, B1, A1, C0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40112 i1011_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 \Hola/i2824_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xEF01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_201 ( output F0 );
  wire   GNDI;

  lut40114 i5680( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Hi ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B Hi( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module Hello_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \Hello/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.DIVR = "3";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "48.000000";
endmodule

module control ( output PADDI, input control );
  wire   GNDI;

  BB_B_B \control_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(control));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (control => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module NESclk ( input PADDO, output NESclk );
  wire   VCCI;

  BB_B_B \NESclk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(NESclk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => NESclk) = (0:0:0,0:0:0);
  endspecify

endmodule

module latch ( input PADDO, output latch );
  wire   VCCI;

  BB_B_B \latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_0_ ( input PADDO, output rgbT0 );
  wire   VCCI;

  BB_B_B \rgbT_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_1_ ( input PADDO, output rgbT1 );
  wire   VCCI;

  BB_B_B \rgbT_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_5_ ( input PADDO, output rgbT5 );
  wire   VCCI;

  BB_B_B \rgbT_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT5) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_4_ ( input PADDO, output rgbT4 );
  wire   VCCI;

  BB_B_B \rgbT_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_3_ ( input PADDO, output rgbT3 );
  wire   VCCI;

  BB_B_B \rgbT_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT3) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_2_ ( input PADDO, output rgbT2 );
  wire   VCCI;

  BB_B_B \rgbT_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT2) = (0:0:0,0:0:0);
  endspecify

endmodule
