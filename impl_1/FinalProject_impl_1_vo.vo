
// Verilog netlist produced by program backanno, Version Radiant (64-bit) 1.0.0.350.6

// backanno -n Verilog -o FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui FinalProject_impl_1.udb 
// Netlist created on Sun Apr 21 19:06:56 2019
// Netlist written on Sun Apr 21 19:06:59 2019
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module topvhd ( HSYNC, VSYNC, rgbT, latch, NESclk, control );
  input  control;
  output HSYNC, VSYNC;
  output [5:0] rgbT;
  output latch, NESclk;
  wire   \NES/n85[19] , \NES/n7599 , \NES/n5707 , \NES/count[19] , \NES/n1560 , 
         pll_clock, \NES/n85[18] , \NES/n85[17] , \NES/n7596 , \NES/count[18] , 
         \NES/n5705 , \NES/count[17] , \NES/n85[16] , \NES/n85[15] , 
         \NES/n7593 , \NES/count[16] , \NES/n5703 , \NES/count[15] , 
         \NES/n85[14] , \NES/n85[13] , \NES/n7590 , \NES/count[14] , 
         \NES/n5701 , \NES/count[13] , \NES/n85[12] , \NES/n85[11] , 
         \NES/n7587 , \NES/count[12] , \NES/n5699 , \NES/count[11] , 
         \NES/n85[10] , \NES/n85[9] , \NES/n7584 , \NES/count[10] , 
         \NES/n5697 , \NES/count[9] , \NES/n85[8] , \NES/n85[7] , \NES/n7581 , 
         \NES/count[8] , \NES/n5695 , \NES/count[7] , \NES/n85[6] , 
         \NES/n85[5] , \NES/n7578 , \NES/count[6] , \NES/n5693 , 
         \NES/count[5] , \NES/n85[4] , \NES/n85[3] , \NES/n7575 , 
         \NES/count[4] , \NES/n5691 , \NES/count[3] , \NES/n85[2] , 
         \NES/n85[1] , \NES/n7572 , \NES/count[2] , \NES/n5689 , 
         \NES/count[1] , \NES/n85[0] , \NES/n7488 , \NES/count[0] , VCC_net, 
         \Hola/n7566 , \Hola/n5611 , \Hola/pos_x[9] , \Hola/rgb_5__N_253[9] , 
         \Hola/n7533 , \Hola/pos_x[8] , \Hola/n5609 , \Hola/pos_x[7] , 
         \Hola/rgb_5__N_253[7] , \Hola/rgb_5__N_253[8] , \Hola/n7521 , 
         \Hola/pos_x[6] , \Hola/n5607 , \Hola/pos_x[5] , 
         \Hola/rgb_5__N_253[5] , \Hola/rgb_5__N_253[6] , \Hola/n7509 , 
         \Hola/pos_x[4] , \Hola/n5605 , \Hola/pos_x[3] , 
         \Hola/rgb_5__N_253[3] , \Hola/rgb_5__N_253[4] , \Hola/n7506 , 
         \Hola/pos_x[2] , \Hola/rgb_5__N_253[2] , \Hola/n7560 , \Hola/n5602 , 
         \Hola/n234[6] , \Hola/n7536 , \Hola/n5600 , \Hola/n7524 , 
         \Hola/n5598 , \Hola/n7512 , \Hola/n5596 , \Hola/n7497 , \Hola/n5594 , 
         \Hola/rgb_5__N_242[1] , \Hola/n7491 , \Hola/n2109 , 
         \Hola/rgb_5__N_242[0] , \Hola/n7557 , \Hola/n5653 , 
         \Hola/rgb_5__N_242[9] , \Hola/n7554 , \Hola/n5651 , 
         \Hola/rgb_5__N_242[7] , \Hola/rgb_5__N_242[8] , \Hola/n7551 , 
         \Hola/n5649 , \Hola/rgb_5__N_242[5] , \Hola/rgb_5__N_242[6] , 
         \Hola/n7548 , \Hola/n5647 , \Hola/rgb_5__N_242[3] , 
         \Hola/rgb_5__N_242[4] , \Hola/n7545 , \Hola/rgb_5__N_242[2] , 
         \Howdy/n167[20] , \Howdy/n167[19] , \Howdy/n7677 , \Howdy/countr[20] , 
         \Howdy/n5632 , \Howdy/countr[19] , \Howdy/row_9__N_189 , 
         \Howdy/row_9__N_187 , \Howdy/n5634 , \Howdy/n167[30] , 
         \Howdy/n167[29] , \Howdy/n7692 , \Howdy/countr[30] , \Howdy/n5642 , 
         \Howdy/countr[29] , \Howdy/n5644 , \Howdy/n167[18] , \Howdy/n167[17] , 
         \Howdy/n7674 , \Howdy/countr[18] , \Howdy/n5630 , \Howdy/countr[17] , 
         \Howdy/n167[16] , \Howdy/n167[15] , \Howdy/n7671 , \Howdy/countr[16] , 
         \Howdy/n5628 , \Howdy/countr[15] , \Howdy/n167[14] , \Howdy/n167[13] , 
         \Howdy/n7668 , \Howdy/countr[14] , \Howdy/n5626 , \Howdy/countr[13] , 
         \Howdy/n167[12] , \Howdy/n167[11] , \Howdy/n7665 , \Howdy/countr[12] , 
         \Howdy/n5624 , \Howdy/countr[11] , \Howdy/n167[28] , \Howdy/n167[27] , 
         \Howdy/n7689 , \Howdy/countr[28] , \Howdy/n5640 , \Howdy/countr[27] , 
         \Howdy/n167[10] , \Howdy/n167[9] , \Howdy/n7662 , \Howdy/countr[10] , 
         \Howdy/n5622 , \rowp[9] , \Howdy/n167[8] , \Howdy/n167[7] , 
         \Howdy/n7659 , \rowp[8] , \Howdy/n5620 , \rowp[7] , \Howdy/n167[6] , 
         \Howdy/n167[5] , \Howdy/n7656 , \rowp[6] , \Howdy/n5618 , \rowp[5] , 
         \Howdy/n167[4] , \Howdy/n167[3] , \Howdy/n7653 , \rowp[4] , 
         \Howdy/n5616 , \rowp[3] , \Howdy/n167[26] , \Howdy/n167[25] , 
         \Howdy/n7686 , \Howdy/countr[26] , \Howdy/n5638 , \Howdy/countr[25] , 
         \Howdy/n167[2] , \Howdy/n167[1] , \Howdy/n7650 , \rowp[2] , 
         \Howdy/n5614 , \rowp[1] , \Howdy/n167[0] , \Howdy/n7485 , \rowp[0] , 
         \Howdy/n167[24] , \Howdy/n167[23] , \Howdy/n7683 , \Howdy/countr[24] , 
         \Howdy/n5636 , \Howdy/countr[23] , \Howdy/n133[31] , \Howdy/n7647 , 
         \Howdy/n5686 , \Howdy/countc[31] , \Howdy/n133[30] , \Howdy/n133[29] , 
         \Howdy/n7644 , \Howdy/countc[30] , \Howdy/n5684 , \Howdy/countc[29] , 
         \Howdy/n167[22] , \Howdy/n167[21] , \Howdy/n7680 , \Howdy/countr[22] , 
         \Howdy/countr[21] , \Howdy/n133[28] , \Howdy/n133[27] , \Howdy/n7641 , 
         \Howdy/countc[28] , \Howdy/n5682 , \Howdy/countc[27] , 
         \Howdy/n133[26] , \Howdy/n133[25] , \Howdy/n7638 , \Howdy/countc[26] , 
         \Howdy/n5680 , \Howdy/countc[25] , \Howdy/n133[24] , \Howdy/n133[23] , 
         \Howdy/n7635 , \Howdy/countc[24] , \Howdy/n5678 , \Howdy/countc[23] , 
         \Howdy/n133[22] , \Howdy/n133[21] , \Howdy/n7632 , \Howdy/countc[22] , 
         \Howdy/n5676 , \Howdy/countc[21] , \Howdy/n133[20] , \Howdy/n133[19] , 
         \Howdy/n7629 , \Howdy/countc[20] , \Howdy/n5674 , \Howdy/countc[19] , 
         \Howdy/n133[18] , \Howdy/n133[17] , \Howdy/n7626 , \Howdy/countc[18] , 
         \Howdy/n5672 , \Howdy/countc[17] , \Howdy/n133[16] , \Howdy/n133[15] , 
         \Howdy/n7623 , \Howdy/countc[16] , \Howdy/n5670 , \Howdy/countc[15] , 
         \Howdy/n133[14] , \Howdy/n133[13] , \Howdy/n7620 , \Howdy/countc[14] , 
         \Howdy/n5668 , \Howdy/countc[13] , \Howdy/n133[12] , \Howdy/n133[11] , 
         \Howdy/n7617 , \Howdy/countc[12] , \Howdy/n5666 , \Howdy/countc[11] , 
         \Howdy/n133[10] , \Howdy/n133[9] , \Howdy/n7614 , \Howdy/countc[10] , 
         \Howdy/n5664 , \colp[9] , \Howdy/n133[8] , \Howdy/n133[7] , 
         \Howdy/n7611 , \colp[8] , \Howdy/n5662 , \colp[7] , \Howdy/n133[6] , 
         \Howdy/n133[5] , \Howdy/n7608 , \colp[6] , \Howdy/n5660 , \colp[5] , 
         \Howdy/n133[4] , \Howdy/n133[3] , \Howdy/n7605 , \colp[4] , 
         \Howdy/n5658 , \colp[3] , \Howdy/n133[2] , \Howdy/n133[1] , 
         \Howdy/n7602 , \colp[2] , \Howdy/n5656 , \colp[1] , \Howdy/n133[0] , 
         \Howdy/n7569 , \colp[0] , \Howdy/n167[31] , \Howdy/n7695 , 
         \Howdy/countr[31] , \NES/count[16]/sig_001/FeedThruLUT , 
         \NES/count[17]/sig_000/FeedThruLUT , \NES/NEScount[7] , 
         \NES/NEScount[6] , \NES/count[14]/sig_004/FeedThruLUT , 
         \NES/count[15]/sig_003/FeedThruLUT , \NES/NEScount[5] , 
         \NES/NEScount[4] , \NES/count[12]/sig_006/FeedThruLUT , 
         \NES/count[13]/sig_005/FeedThruLUT , \NES/NEScount[3] , 
         \NES/NEScount[2] , \NES/count[10]/sig_008/FeedThruLUT , 
         \NES/count[11]/sig_007/FeedThruLUT , \NES/NEScount[1] , 
         \NES/NEScount[0] , n1565, n1568, n2064, control_c, n1382, 
         \button_sig[6] , \button_sig[7] , n7, n8, NESclk_c, n1563, 
         \NES/n6264 , n4, \button_sig[3] , n6548, \NES/n1210 , \button_sig[2] , 
         n1564, n1566, n11, \button_sig[5] , \button_sig[4] , n6328, 
         \NES/count[18]/sig_010/FeedThruLUT , 
         \NES/count[19]/sig_009/FeedThruLUT , \NES/NEScount[9] , 
         \NES/NEScount[8] , \NES/n6278 , n1562, \button_sig[0] , n19, 
         n19_adj_331, \button_sig[1] , \Hola/n9 , \Hola/n10 , \Hola/n8 , n1358, 
         validp, \Hola/n4 , rgbT_c, \Howdy/n1376 , \Hola/n18 , 
         \Hola/rgb_5__N_241 , \Hola/n18_adj_316 , \Howdy/valid_N_229 , 
         \Howdy/n6 , \Howdy/n1322 , \Howdy/n1317 , \Howdy/n16 , \Howdy/n6325 , 
         \Howdy/n1347 , \Howdy/valid_N_234 , \Howdy/n36_adj_310 , 
         \Howdy/n38_adj_311 , \Howdy/n35_adj_308 , \Howdy/n37_adj_309 , 
         \NES/n34 , \NES/n22 , \NES/n35 , \NES/n33 , \NES/n36 , \NES/n32 , 
         \NES/n19_c , \NES/n7_c , CNTclk_N_89, \NES/n18 , \NES/NESclk , 
         \NES/n1353 , \NES/n6 , \NES/n2445 , \Howdy/n4 , \Howdy/n6172 , 
         \Howdy/n1350 , \Howdy/n1373 , \Hola/n16 , \Hola/n14 , 
         \Hola/n16_adj_317 , \Hola/n14_adj_321 , \Hola/n12 , 
         \Hola/n10_adj_318 , \Hola/n8_adj_319 , \Hola/n6 , \Hola/n4_adj_320 , 
         \Hola/n12_adj_322 , \Hola/n10_adj_323 , \Hola/n8_adj_324 , 
         \Hola/n6_adj_325 , \Hola/n4_adj_326 , \Hola/n1367 , 
         \Hola/n10_adj_327 , \Howdy/n62_adj_307 , \Howdy/n62 , \Howdy/n1320 , 
         \Howdy/n36 , \Howdy/n38 , \Howdy/n35 , \Howdy/n37 , \Howdy/n6324 , 
         \Howdy/n1335 , \Howdy/n4_adj_305 , \Howdy/n6149 , \Howdy/n34 , 
         \Howdy/n24 , \Howdy/n1333 , \Howdy/n1370 , \Howdy/n22 , \Howdy/n6163 , 
         \Howdy/n4_adj_306 , \Howdy/n1143 , HSYNC_c, \Howdy/n34_adj_313 , 
         \Howdy/n24_adj_314 , \Howdy/n22_adj_312 , \Howdy/n7217 , 
         \Howdy/n6_adj_315 , \Howdy/n1132 , VSYNC_c, 
         \NES/count[9]/sig_002/FeedThruLUT , clk, 
         \Hello/lscc_pll_inst/feedback_w ;

  SLICE_0 SLICE_0( .DI0(\NES/n85[19] ), .D1(\NES/n7599 ), .D0(\NES/n5707 ), 
    .C0(\NES/count[19] ), .LSR(\NES/n1560 ), .CLK(pll_clock), 
    .CIN0(\NES/n5707 ), .CIN1(\NES/n7599 ), .Q0(\NES/count[19] ), 
    .F0(\NES/n85[19] ), .COUT0(\NES/n7599 ));
  SLICE_1 SLICE_1( .DI1(\NES/n85[18] ), .DI0(\NES/n85[17] ), .D1(\NES/n7596 ), 
    .C1(\NES/count[18] ), .D0(\NES/n5705 ), .C0(\NES/count[17] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5705 ), .CIN1(\NES/n7596 ), 
    .Q0(\NES/count[17] ), .Q1(\NES/count[18] ), .F0(\NES/n85[17] ), 
    .F1(\NES/n85[18] ), .COUT1(\NES/n5707 ), .COUT0(\NES/n7596 ));
  SLICE_2 SLICE_2( .DI1(\NES/n85[16] ), .DI0(\NES/n85[15] ), .D1(\NES/n7593 ), 
    .C1(\NES/count[16] ), .D0(\NES/n5703 ), .C0(\NES/count[15] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5703 ), .CIN1(\NES/n7593 ), 
    .Q0(\NES/count[15] ), .Q1(\NES/count[16] ), .F0(\NES/n85[15] ), 
    .F1(\NES/n85[16] ), .COUT1(\NES/n5705 ), .COUT0(\NES/n7593 ));
  SLICE_3 SLICE_3( .DI1(\NES/n85[14] ), .DI0(\NES/n85[13] ), .D1(\NES/n7590 ), 
    .C1(\NES/count[14] ), .D0(\NES/n5701 ), .C0(\NES/count[13] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5701 ), .CIN1(\NES/n7590 ), 
    .Q0(\NES/count[13] ), .Q1(\NES/count[14] ), .F0(\NES/n85[13] ), 
    .F1(\NES/n85[14] ), .COUT1(\NES/n5703 ), .COUT0(\NES/n7590 ));
  SLICE_4 SLICE_4( .DI1(\NES/n85[12] ), .DI0(\NES/n85[11] ), .D1(\NES/n7587 ), 
    .C1(\NES/count[12] ), .D0(\NES/n5699 ), .C0(\NES/count[11] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5699 ), .CIN1(\NES/n7587 ), 
    .Q0(\NES/count[11] ), .Q1(\NES/count[12] ), .F0(\NES/n85[11] ), 
    .F1(\NES/n85[12] ), .COUT1(\NES/n5701 ), .COUT0(\NES/n7587 ));
  SLICE_5 SLICE_5( .DI1(\NES/n85[10] ), .DI0(\NES/n85[9] ), .D1(\NES/n7584 ), 
    .C1(\NES/count[10] ), .D0(\NES/n5697 ), .C0(\NES/count[9] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5697 ), .CIN1(\NES/n7584 ), 
    .Q0(\NES/count[9] ), .Q1(\NES/count[10] ), .F0(\NES/n85[9] ), 
    .F1(\NES/n85[10] ), .COUT1(\NES/n5699 ), .COUT0(\NES/n7584 ));
  SLICE_6 SLICE_6( .DI1(\NES/n85[8] ), .DI0(\NES/n85[7] ), .D1(\NES/n7581 ), 
    .C1(\NES/count[8] ), .D0(\NES/n5695 ), .C0(\NES/count[7] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5695 ), .CIN1(\NES/n7581 ), 
    .Q0(\NES/count[7] ), .Q1(\NES/count[8] ), .F0(\NES/n85[7] ), 
    .F1(\NES/n85[8] ), .COUT1(\NES/n5697 ), .COUT0(\NES/n7581 ));
  SLICE_7 SLICE_7( .DI1(\NES/n85[6] ), .DI0(\NES/n85[5] ), .D1(\NES/n7578 ), 
    .C1(\NES/count[6] ), .D0(\NES/n5693 ), .C0(\NES/count[5] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5693 ), .CIN1(\NES/n7578 ), 
    .Q0(\NES/count[5] ), .Q1(\NES/count[6] ), .F0(\NES/n85[5] ), 
    .F1(\NES/n85[6] ), .COUT1(\NES/n5695 ), .COUT0(\NES/n7578 ));
  SLICE_8 SLICE_8( .DI1(\NES/n85[4] ), .DI0(\NES/n85[3] ), .D1(\NES/n7575 ), 
    .C1(\NES/count[4] ), .D0(\NES/n5691 ), .C0(\NES/count[3] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5691 ), .CIN1(\NES/n7575 ), 
    .Q0(\NES/count[3] ), .Q1(\NES/count[4] ), .F0(\NES/n85[3] ), 
    .F1(\NES/n85[4] ), .COUT1(\NES/n5693 ), .COUT0(\NES/n7575 ));
  SLICE_9 SLICE_9( .DI1(\NES/n85[2] ), .DI0(\NES/n85[1] ), .D1(\NES/n7572 ), 
    .C1(\NES/count[2] ), .D0(\NES/n5689 ), .C0(\NES/count[1] ), 
    .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN0(\NES/n5689 ), .CIN1(\NES/n7572 ), 
    .Q0(\NES/count[1] ), .Q1(\NES/count[2] ), .F0(\NES/n85[1] ), 
    .F1(\NES/n85[2] ), .COUT1(\NES/n5691 ), .COUT0(\NES/n7572 ));
  SLICE_10 SLICE_10( .DI1(\NES/n85[0] ), .D1(\NES/n7488 ), .C1(\NES/count[0] ), 
    .B1(VCC_net), .LSR(\NES/n1560 ), .CLK(pll_clock), .CIN1(\NES/n7488 ), 
    .Q1(\NES/count[0] ), .F1(\NES/n85[0] ), .COUT1(\NES/n5689 ), 
    .COUT0(\NES/n7488 ));
  SLICE_11 SLICE_11( .D1(\Hola/n7566 ), .D0(\Hola/n5611 ), .C0(VCC_net), 
    .B0(\Hola/pos_x[9] ), .CIN0(\Hola/n5611 ), .CIN1(\Hola/n7566 ), 
    .F0(\Hola/rgb_5__N_253[9] ), .COUT0(\Hola/n7566 ));
  SLICE_12 SLICE_12( .D1(\Hola/n7533 ), .C1(VCC_net), .B1(\Hola/pos_x[8] ), 
    .D0(\Hola/n5609 ), .C0(VCC_net), .B0(\Hola/pos_x[7] ), .CIN0(\Hola/n5609 ), 
    .CIN1(\Hola/n7533 ), .F0(\Hola/rgb_5__N_253[7] ), 
    .F1(\Hola/rgb_5__N_253[8] ), .COUT1(\Hola/n5611 ), .COUT0(\Hola/n7533 ));
  SLICE_13 SLICE_13( .D1(\Hola/n7521 ), .C1(VCC_net), .B1(\Hola/pos_x[6] ), 
    .D0(\Hola/n5607 ), .C0(VCC_net), .B0(\Hola/pos_x[5] ), .CIN0(\Hola/n5607 ), 
    .CIN1(\Hola/n7521 ), .F0(\Hola/rgb_5__N_253[5] ), 
    .F1(\Hola/rgb_5__N_253[6] ), .COUT1(\Hola/n5609 ), .COUT0(\Hola/n7521 ));
  SLICE_14 SLICE_14( .D1(\Hola/n7509 ), .B1(\Hola/pos_x[4] ), 
    .D0(\Hola/n5605 ), .C0(VCC_net), .B0(\Hola/pos_x[3] ), .CIN0(\Hola/n5605 ), 
    .CIN1(\Hola/n7509 ), .F0(\Hola/rgb_5__N_253[3] ), 
    .F1(\Hola/rgb_5__N_253[4] ), .COUT1(\Hola/n5607 ), .COUT0(\Hola/n7509 ));
  SLICE_15 SLICE_15( .D1(\Hola/n7506 ), .C1(VCC_net), .B1(\Hola/pos_x[2] ), 
    .CIN1(\Hola/n7506 ), .F1(\Hola/rgb_5__N_253[2] ), .COUT1(\Hola/n5605 ), 
    .COUT0(\Hola/n7506 ));
  SLICE_16 SLICE_16( .D1(\Hola/n7560 ), .D0(\Hola/n5602 ), .C0(\Hola/n234[6] ), 
    .B0(\Hola/pos_x[9] ), .CIN0(\Hola/n5602 ), .CIN1(\Hola/n7560 ), 
    .F0(\Hola/pos_x[9] ), .COUT0(\Hola/n7560 ));
  SLICE_17 SLICE_17( .D1(\Hola/n7536 ), .C1(\Hola/n234[6] ), 
    .B1(\Hola/pos_x[8] ), .D0(\Hola/n5600 ), .C0(\Hola/n234[6] ), 
    .B0(\Hola/pos_x[7] ), .CIN0(\Hola/n5600 ), .CIN1(\Hola/n7536 ), 
    .F0(\Hola/pos_x[7] ), .F1(\Hola/pos_x[8] ), .COUT1(\Hola/n5602 ), 
    .COUT0(\Hola/n7536 ));
  SLICE_18 SLICE_18( .D1(\Hola/n7524 ), .C1(\Hola/n234[6] ), 
    .B1(\Hola/pos_x[6] ), .D0(\Hola/n5598 ), .C0(\Hola/n234[6] ), 
    .B0(\Hola/pos_x[5] ), .CIN0(\Hola/n5598 ), .CIN1(\Hola/n7524 ), 
    .F0(\Hola/pos_x[5] ), .F1(\Hola/pos_x[6] ), .COUT1(\Hola/n5600 ), 
    .COUT0(\Hola/n7524 ));
  SLICE_19 SLICE_19( .D1(\Hola/n7512 ), .C1(\Hola/n234[6] ), 
    .B1(\Hola/pos_x[4] ), .D0(\Hola/n5596 ), .C0(\Hola/n234[6] ), 
    .B0(\Hola/pos_x[3] ), .CIN0(\Hola/n5596 ), .CIN1(\Hola/n7512 ), 
    .F0(\Hola/pos_x[3] ), .F1(\Hola/pos_x[4] ), .COUT1(\Hola/n5598 ), 
    .COUT0(\Hola/n7512 ));
  SLICE_20 SLICE_20( .D1(\Hola/n7497 ), .C1(\Hola/n234[6] ), 
    .B1(\Hola/pos_x[2] ), .D0(\Hola/n5594 ), .C0(\Hola/n234[6] ), 
    .B0(\Hola/rgb_5__N_242[1] ), .CIN0(\Hola/n5594 ), .CIN1(\Hola/n7497 ), 
    .F0(\Hola/rgb_5__N_242[1] ), .F1(\Hola/pos_x[2] ), .COUT1(\Hola/n5596 ), 
    .COUT0(\Hola/n7497 ));
  SLICE_21 SLICE_21( .D1(\Hola/n7491 ), .C1(\Hola/n2109 ), 
    .B1(\Hola/rgb_5__N_242[0] ), .CIN1(\Hola/n7491 ), 
    .F1(\Hola/rgb_5__N_242[0] ), .COUT1(\Hola/n5594 ), .COUT0(\Hola/n7491 ));
  SLICE_22 SLICE_22( .D1(\Hola/n7557 ), .D0(\Hola/n5653 ), 
    .B0(\Hola/pos_x[9] ), .CIN0(\Hola/n5653 ), .CIN1(\Hola/n7557 ), 
    .F0(\Hola/rgb_5__N_242[9] ), .COUT0(\Hola/n7557 ));
  SLICE_23 SLICE_23( .D1(\Hola/n7554 ), .B1(\Hola/pos_x[8] ), 
    .D0(\Hola/n5651 ), .B0(\Hola/pos_x[7] ), .CIN0(\Hola/n5651 ), 
    .CIN1(\Hola/n7554 ), .F0(\Hola/rgb_5__N_242[7] ), 
    .F1(\Hola/rgb_5__N_242[8] ), .COUT1(\Hola/n5653 ), .COUT0(\Hola/n7554 ));
  SLICE_24 SLICE_24( .D1(\Hola/n7551 ), .B1(\Hola/pos_x[6] ), 
    .D0(\Hola/n5649 ), .B0(\Hola/pos_x[5] ), .CIN0(\Hola/n5649 ), 
    .CIN1(\Hola/n7551 ), .F0(\Hola/rgb_5__N_242[5] ), 
    .F1(\Hola/rgb_5__N_242[6] ), .COUT1(\Hola/n5651 ), .COUT0(\Hola/n7551 ));
  SLICE_25 SLICE_25( .D1(\Hola/n7548 ), .C1(VCC_net), .B1(\Hola/pos_x[4] ), 
    .D0(\Hola/n5647 ), .B0(\Hola/pos_x[3] ), .CIN0(\Hola/n5647 ), 
    .CIN1(\Hola/n7548 ), .F0(\Hola/rgb_5__N_242[3] ), 
    .F1(\Hola/rgb_5__N_242[4] ), .COUT1(\Hola/n5649 ), .COUT0(\Hola/n7548 ));
  SLICE_26 SLICE_26( .D1(\Hola/n7545 ), .C1(VCC_net), .B1(\Hola/pos_x[2] ), 
    .CIN1(\Hola/n7545 ), .F1(\Hola/rgb_5__N_242[2] ), .COUT1(\Hola/n5647 ), 
    .COUT0(\Hola/n7545 ));
  SLICE_27 SLICE_27( .DI1(\Howdy/n167[20] ), .DI0(\Howdy/n167[19] ), 
    .D1(\Howdy/n7677 ), .B1(\Howdy/countr[20] ), .D0(\Howdy/n5632 ), 
    .B0(\Howdy/countr[19] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5632 ), 
    .CIN1(\Howdy/n7677 ), .Q0(\Howdy/countr[19] ), .Q1(\Howdy/countr[20] ), 
    .F0(\Howdy/n167[19] ), .F1(\Howdy/n167[20] ), .COUT1(\Howdy/n5634 ), 
    .COUT0(\Howdy/n7677 ));
  SLICE_28 SLICE_28( .DI1(\Howdy/n167[30] ), .DI0(\Howdy/n167[29] ), 
    .D1(\Howdy/n7692 ), .B1(\Howdy/countr[30] ), .D0(\Howdy/n5642 ), 
    .B0(\Howdy/countr[29] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5642 ), 
    .CIN1(\Howdy/n7692 ), .Q0(\Howdy/countr[29] ), .Q1(\Howdy/countr[30] ), 
    .F0(\Howdy/n167[29] ), .F1(\Howdy/n167[30] ), .COUT1(\Howdy/n5644 ), 
    .COUT0(\Howdy/n7692 ));
  SLICE_29 SLICE_29( .DI1(\Howdy/n167[18] ), .DI0(\Howdy/n167[17] ), 
    .D1(\Howdy/n7674 ), .B1(\Howdy/countr[18] ), .D0(\Howdy/n5630 ), 
    .B0(\Howdy/countr[17] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5630 ), 
    .CIN1(\Howdy/n7674 ), .Q0(\Howdy/countr[17] ), .Q1(\Howdy/countr[18] ), 
    .F0(\Howdy/n167[17] ), .F1(\Howdy/n167[18] ), .COUT1(\Howdy/n5632 ), 
    .COUT0(\Howdy/n7674 ));
  SLICE_30 SLICE_30( .DI1(\Howdy/n167[16] ), .DI0(\Howdy/n167[15] ), 
    .D1(\Howdy/n7671 ), .B1(\Howdy/countr[16] ), .D0(\Howdy/n5628 ), 
    .B0(\Howdy/countr[15] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5628 ), 
    .CIN1(\Howdy/n7671 ), .Q0(\Howdy/countr[15] ), .Q1(\Howdy/countr[16] ), 
    .F0(\Howdy/n167[15] ), .F1(\Howdy/n167[16] ), .COUT1(\Howdy/n5630 ), 
    .COUT0(\Howdy/n7671 ));
  SLICE_31 SLICE_31( .DI1(\Howdy/n167[14] ), .DI0(\Howdy/n167[13] ), 
    .D1(\Howdy/n7668 ), .B1(\Howdy/countr[14] ), .D0(\Howdy/n5626 ), 
    .B0(\Howdy/countr[13] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5626 ), 
    .CIN1(\Howdy/n7668 ), .Q0(\Howdy/countr[13] ), .Q1(\Howdy/countr[14] ), 
    .F0(\Howdy/n167[13] ), .F1(\Howdy/n167[14] ), .COUT1(\Howdy/n5628 ), 
    .COUT0(\Howdy/n7668 ));
  SLICE_32 SLICE_32( .DI1(\Howdy/n167[12] ), .DI0(\Howdy/n167[11] ), 
    .D1(\Howdy/n7665 ), .B1(\Howdy/countr[12] ), .D0(\Howdy/n5624 ), 
    .B0(\Howdy/countr[11] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5624 ), 
    .CIN1(\Howdy/n7665 ), .Q0(\Howdy/countr[11] ), .Q1(\Howdy/countr[12] ), 
    .F0(\Howdy/n167[11] ), .F1(\Howdy/n167[12] ), .COUT1(\Howdy/n5626 ), 
    .COUT0(\Howdy/n7665 ));
  SLICE_33 SLICE_33( .DI1(\Howdy/n167[28] ), .DI0(\Howdy/n167[27] ), 
    .D1(\Howdy/n7689 ), .B1(\Howdy/countr[28] ), .D0(\Howdy/n5640 ), 
    .B0(\Howdy/countr[27] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5640 ), 
    .CIN1(\Howdy/n7689 ), .Q0(\Howdy/countr[27] ), .Q1(\Howdy/countr[28] ), 
    .F0(\Howdy/n167[27] ), .F1(\Howdy/n167[28] ), .COUT1(\Howdy/n5642 ), 
    .COUT0(\Howdy/n7689 ));
  SLICE_34 SLICE_34( .DI1(\Howdy/n167[10] ), .DI0(\Howdy/n167[9] ), 
    .D1(\Howdy/n7662 ), .B1(\Howdy/countr[10] ), .D0(\Howdy/n5622 ), 
    .B0(\rowp[9] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n5622 ), .CIN1(\Howdy/n7662 ), 
    .Q0(\rowp[9] ), .Q1(\Howdy/countr[10] ), .F0(\Howdy/n167[9] ), 
    .F1(\Howdy/n167[10] ), .COUT1(\Howdy/n5624 ), .COUT0(\Howdy/n7662 ));
  SLICE_35 SLICE_35( .DI1(\Howdy/n167[8] ), .DI0(\Howdy/n167[7] ), 
    .D1(\Howdy/n7659 ), .B1(\rowp[8] ), .D0(\Howdy/n5620 ), .B0(\rowp[7] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5620 ), .CIN1(\Howdy/n7659 ), .Q0(\rowp[7] ), .Q1(\rowp[8] ), 
    .F0(\Howdy/n167[7] ), .F1(\Howdy/n167[8] ), .COUT1(\Howdy/n5622 ), 
    .COUT0(\Howdy/n7659 ));
  SLICE_36 SLICE_36( .DI1(\Howdy/n167[6] ), .DI0(\Howdy/n167[5] ), 
    .D1(\Howdy/n7656 ), .B1(\rowp[6] ), .D0(\Howdy/n5618 ), .B0(\rowp[5] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5618 ), .CIN1(\Howdy/n7656 ), .Q0(\rowp[5] ), .Q1(\rowp[6] ), 
    .F0(\Howdy/n167[5] ), .F1(\Howdy/n167[6] ), .COUT1(\Howdy/n5620 ), 
    .COUT0(\Howdy/n7656 ));
  SLICE_37 SLICE_37( .DI1(\Howdy/n167[4] ), .DI0(\Howdy/n167[3] ), 
    .D1(\Howdy/n7653 ), .B1(\rowp[4] ), .D0(\Howdy/n5616 ), .B0(\rowp[3] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5616 ), .CIN1(\Howdy/n7653 ), .Q0(\rowp[3] ), .Q1(\rowp[4] ), 
    .F0(\Howdy/n167[3] ), .F1(\Howdy/n167[4] ), .COUT1(\Howdy/n5618 ), 
    .COUT0(\Howdy/n7653 ));
  SLICE_38 SLICE_38( .DI1(\Howdy/n167[26] ), .DI0(\Howdy/n167[25] ), 
    .D1(\Howdy/n7686 ), .B1(\Howdy/countr[26] ), .D0(\Howdy/n5638 ), 
    .B0(\Howdy/countr[25] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5638 ), 
    .CIN1(\Howdy/n7686 ), .Q0(\Howdy/countr[25] ), .Q1(\Howdy/countr[26] ), 
    .F0(\Howdy/n167[25] ), .F1(\Howdy/n167[26] ), .COUT1(\Howdy/n5640 ), 
    .COUT0(\Howdy/n7686 ));
  SLICE_39 SLICE_39( .DI1(\Howdy/n167[2] ), .DI0(\Howdy/n167[1] ), 
    .D1(\Howdy/n7650 ), .B1(\rowp[2] ), .D0(\Howdy/n5614 ), .B0(\rowp[1] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5614 ), .CIN1(\Howdy/n7650 ), .Q0(\rowp[1] ), .Q1(\rowp[2] ), 
    .F0(\Howdy/n167[1] ), .F1(\Howdy/n167[2] ), .COUT1(\Howdy/n5616 ), 
    .COUT0(\Howdy/n7650 ));
  SLICE_40 SLICE_40( .DI1(\Howdy/n167[0] ), .D1(\Howdy/n7485 ), .C1(VCC_net), 
    .B1(\rowp[0] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN1(\Howdy/n7485 ), .Q1(\rowp[0] ), 
    .F1(\Howdy/n167[0] ), .COUT1(\Howdy/n5614 ), .COUT0(\Howdy/n7485 ));
  SLICE_41 SLICE_41( .DI1(\Howdy/n167[24] ), .DI0(\Howdy/n167[23] ), 
    .D1(\Howdy/n7683 ), .B1(\Howdy/countr[24] ), .D0(\Howdy/n5636 ), 
    .B0(\Howdy/countr[23] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5636 ), 
    .CIN1(\Howdy/n7683 ), .Q0(\Howdy/countr[23] ), .Q1(\Howdy/countr[24] ), 
    .F0(\Howdy/n167[23] ), .F1(\Howdy/n167[24] ), .COUT1(\Howdy/n5638 ), 
    .COUT0(\Howdy/n7683 ));
  SLICE_42 SLICE_42( .DI0(\Howdy/n133[31] ), .D1(\Howdy/n7647 ), 
    .D0(\Howdy/n5686 ), .C0(\Howdy/countc[31] ), .LSR(\Howdy/row_9__N_189 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n5686 ), .CIN1(\Howdy/n7647 ), 
    .Q0(\Howdy/countc[31] ), .F0(\Howdy/n133[31] ), .COUT0(\Howdy/n7647 ));
  SLICE_43 SLICE_43( .DI1(\Howdy/n133[30] ), .DI0(\Howdy/n133[29] ), 
    .D1(\Howdy/n7644 ), .C1(\Howdy/countc[30] ), .D0(\Howdy/n5684 ), 
    .C0(\Howdy/countc[29] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5684 ), .CIN1(\Howdy/n7644 ), .Q0(\Howdy/countc[29] ), 
    .Q1(\Howdy/countc[30] ), .F0(\Howdy/n133[29] ), .F1(\Howdy/n133[30] ), 
    .COUT1(\Howdy/n5686 ), .COUT0(\Howdy/n7644 ));
  SLICE_44 SLICE_44( .DI1(\Howdy/n167[22] ), .DI0(\Howdy/n167[21] ), 
    .D1(\Howdy/n7680 ), .B1(\Howdy/countr[22] ), .D0(\Howdy/n5634 ), 
    .B0(\Howdy/countr[21] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5634 ), 
    .CIN1(\Howdy/n7680 ), .Q0(\Howdy/countr[21] ), .Q1(\Howdy/countr[22] ), 
    .F0(\Howdy/n167[21] ), .F1(\Howdy/n167[22] ), .COUT1(\Howdy/n5636 ), 
    .COUT0(\Howdy/n7680 ));
  SLICE_45 SLICE_45( .DI1(\Howdy/n133[28] ), .DI0(\Howdy/n133[27] ), 
    .D1(\Howdy/n7641 ), .C1(\Howdy/countc[28] ), .D0(\Howdy/n5682 ), 
    .C0(\Howdy/countc[27] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5682 ), .CIN1(\Howdy/n7641 ), .Q0(\Howdy/countc[27] ), 
    .Q1(\Howdy/countc[28] ), .F0(\Howdy/n133[27] ), .F1(\Howdy/n133[28] ), 
    .COUT1(\Howdy/n5684 ), .COUT0(\Howdy/n7641 ));
  SLICE_46 SLICE_46( .DI1(\Howdy/n133[26] ), .DI0(\Howdy/n133[25] ), 
    .D1(\Howdy/n7638 ), .C1(\Howdy/countc[26] ), .D0(\Howdy/n5680 ), 
    .C0(\Howdy/countc[25] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5680 ), .CIN1(\Howdy/n7638 ), .Q0(\Howdy/countc[25] ), 
    .Q1(\Howdy/countc[26] ), .F0(\Howdy/n133[25] ), .F1(\Howdy/n133[26] ), 
    .COUT1(\Howdy/n5682 ), .COUT0(\Howdy/n7638 ));
  SLICE_47 SLICE_47( .DI1(\Howdy/n133[24] ), .DI0(\Howdy/n133[23] ), 
    .D1(\Howdy/n7635 ), .C1(\Howdy/countc[24] ), .D0(\Howdy/n5678 ), 
    .C0(\Howdy/countc[23] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5678 ), .CIN1(\Howdy/n7635 ), .Q0(\Howdy/countc[23] ), 
    .Q1(\Howdy/countc[24] ), .F0(\Howdy/n133[23] ), .F1(\Howdy/n133[24] ), 
    .COUT1(\Howdy/n5680 ), .COUT0(\Howdy/n7635 ));
  SLICE_48 SLICE_48( .DI1(\Howdy/n133[22] ), .DI0(\Howdy/n133[21] ), 
    .D1(\Howdy/n7632 ), .C1(\Howdy/countc[22] ), .D0(\Howdy/n5676 ), 
    .C0(\Howdy/countc[21] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5676 ), .CIN1(\Howdy/n7632 ), .Q0(\Howdy/countc[21] ), 
    .Q1(\Howdy/countc[22] ), .F0(\Howdy/n133[21] ), .F1(\Howdy/n133[22] ), 
    .COUT1(\Howdy/n5678 ), .COUT0(\Howdy/n7632 ));
  SLICE_49 SLICE_49( .DI1(\Howdy/n133[20] ), .DI0(\Howdy/n133[19] ), 
    .D1(\Howdy/n7629 ), .C1(\Howdy/countc[20] ), .D0(\Howdy/n5674 ), 
    .C0(\Howdy/countc[19] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5674 ), .CIN1(\Howdy/n7629 ), .Q0(\Howdy/countc[19] ), 
    .Q1(\Howdy/countc[20] ), .F0(\Howdy/n133[19] ), .F1(\Howdy/n133[20] ), 
    .COUT1(\Howdy/n5676 ), .COUT0(\Howdy/n7629 ));
  SLICE_50 SLICE_50( .DI1(\Howdy/n133[18] ), .DI0(\Howdy/n133[17] ), 
    .D1(\Howdy/n7626 ), .C1(\Howdy/countc[18] ), .D0(\Howdy/n5672 ), 
    .C0(\Howdy/countc[17] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5672 ), .CIN1(\Howdy/n7626 ), .Q0(\Howdy/countc[17] ), 
    .Q1(\Howdy/countc[18] ), .F0(\Howdy/n133[17] ), .F1(\Howdy/n133[18] ), 
    .COUT1(\Howdy/n5674 ), .COUT0(\Howdy/n7626 ));
  SLICE_51 SLICE_51( .DI1(\Howdy/n133[16] ), .DI0(\Howdy/n133[15] ), 
    .D1(\Howdy/n7623 ), .C1(\Howdy/countc[16] ), .D0(\Howdy/n5670 ), 
    .C0(\Howdy/countc[15] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5670 ), .CIN1(\Howdy/n7623 ), .Q0(\Howdy/countc[15] ), 
    .Q1(\Howdy/countc[16] ), .F0(\Howdy/n133[15] ), .F1(\Howdy/n133[16] ), 
    .COUT1(\Howdy/n5672 ), .COUT0(\Howdy/n7623 ));
  SLICE_52 SLICE_52( .DI1(\Howdy/n133[14] ), .DI0(\Howdy/n133[13] ), 
    .D1(\Howdy/n7620 ), .C1(\Howdy/countc[14] ), .D0(\Howdy/n5668 ), 
    .C0(\Howdy/countc[13] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5668 ), .CIN1(\Howdy/n7620 ), .Q0(\Howdy/countc[13] ), 
    .Q1(\Howdy/countc[14] ), .F0(\Howdy/n133[13] ), .F1(\Howdy/n133[14] ), 
    .COUT1(\Howdy/n5670 ), .COUT0(\Howdy/n7620 ));
  SLICE_53 SLICE_53( .DI1(\Howdy/n133[12] ), .DI0(\Howdy/n133[11] ), 
    .D1(\Howdy/n7617 ), .C1(\Howdy/countc[12] ), .D0(\Howdy/n5666 ), 
    .C0(\Howdy/countc[11] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5666 ), .CIN1(\Howdy/n7617 ), .Q0(\Howdy/countc[11] ), 
    .Q1(\Howdy/countc[12] ), .F0(\Howdy/n133[11] ), .F1(\Howdy/n133[12] ), 
    .COUT1(\Howdy/n5668 ), .COUT0(\Howdy/n7617 ));
  SLICE_54 SLICE_54( .DI1(\Howdy/n133[10] ), .DI0(\Howdy/n133[9] ), 
    .D1(\Howdy/n7614 ), .C1(\Howdy/countc[10] ), .D0(\Howdy/n5664 ), 
    .C0(\colp[9] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n5664 ), .CIN1(\Howdy/n7614 ), .Q0(\colp[9] ), 
    .Q1(\Howdy/countc[10] ), .F0(\Howdy/n133[9] ), .F1(\Howdy/n133[10] ), 
    .COUT1(\Howdy/n5666 ), .COUT0(\Howdy/n7614 ));
  SLICE_55 SLICE_55( .DI1(\Howdy/n133[8] ), .DI0(\Howdy/n133[7] ), 
    .D1(\Howdy/n7611 ), .C1(\colp[8] ), .D0(\Howdy/n5662 ), .C0(\colp[7] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n5662 ), 
    .CIN1(\Howdy/n7611 ), .Q0(\colp[7] ), .Q1(\colp[8] ), .F0(\Howdy/n133[7] ), 
    .F1(\Howdy/n133[8] ), .COUT1(\Howdy/n5664 ), .COUT0(\Howdy/n7611 ));
  SLICE_56 SLICE_56( .DI1(\Howdy/n133[6] ), .DI0(\Howdy/n133[5] ), 
    .D1(\Howdy/n7608 ), .C1(\colp[6] ), .D0(\Howdy/n5660 ), .C0(\colp[5] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n5660 ), 
    .CIN1(\Howdy/n7608 ), .Q0(\colp[5] ), .Q1(\colp[6] ), .F0(\Howdy/n133[5] ), 
    .F1(\Howdy/n133[6] ), .COUT1(\Howdy/n5662 ), .COUT0(\Howdy/n7608 ));
  SLICE_57 SLICE_57( .DI1(\Howdy/n133[4] ), .DI0(\Howdy/n133[3] ), 
    .D1(\Howdy/n7605 ), .C1(\colp[4] ), .D0(\Howdy/n5658 ), .C0(\colp[3] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n5658 ), 
    .CIN1(\Howdy/n7605 ), .Q0(\colp[3] ), .Q1(\colp[4] ), .F0(\Howdy/n133[3] ), 
    .F1(\Howdy/n133[4] ), .COUT1(\Howdy/n5660 ), .COUT0(\Howdy/n7605 ));
  SLICE_58 SLICE_58( .DI1(\Howdy/n133[2] ), .DI0(\Howdy/n133[1] ), 
    .D1(\Howdy/n7602 ), .C1(\colp[2] ), .D0(\Howdy/n5656 ), .C0(\colp[1] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n5656 ), 
    .CIN1(\Howdy/n7602 ), .Q0(\colp[1] ), .Q1(\colp[2] ), .F0(\Howdy/n133[1] ), 
    .F1(\Howdy/n133[2] ), .COUT1(\Howdy/n5658 ), .COUT0(\Howdy/n7602 ));
  SLICE_59 SLICE_59( .DI1(\Howdy/n133[0] ), .D1(\Howdy/n7569 ), .C1(\colp[0] ), 
    .B1(VCC_net), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN1(\Howdy/n7569 ), .Q1(\colp[0] ), .F1(\Howdy/n133[0] ), 
    .COUT1(\Howdy/n5656 ), .COUT0(\Howdy/n7569 ));
  SLICE_60 SLICE_60( .DI0(\Howdy/n167[31] ), .D1(\Howdy/n7695 ), 
    .D0(\Howdy/n5644 ), .B0(\Howdy/countr[31] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n5644 ), 
    .CIN1(\Howdy/n7695 ), .Q0(\Howdy/countr[31] ), .F0(\Howdy/n167[31] ), 
    .COUT0(\Howdy/n7695 ));
  SLICE_61 SLICE_61( .DI1(\NES/count[16]/sig_001/FeedThruLUT ), 
    .DI0(\NES/count[17]/sig_000/FeedThruLUT ), .A1(\NES/count[16] ), 
    .B0(\NES/count[17] ), .CLK(pll_clock), .Q0(\NES/NEScount[7] ), 
    .Q1(\NES/NEScount[6] ), .F0(\NES/count[17]/sig_000/FeedThruLUT ), 
    .F1(\NES/count[16]/sig_001/FeedThruLUT ));
  SLICE_64 SLICE_64( .DI1(\NES/count[14]/sig_004/FeedThruLUT ), 
    .DI0(\NES/count[15]/sig_003/FeedThruLUT ), .C1(\NES/count[14] ), 
    .C0(\NES/count[15] ), .CLK(pll_clock), .Q0(\NES/NEScount[5] ), 
    .Q1(\NES/NEScount[4] ), .F0(\NES/count[15]/sig_003/FeedThruLUT ), 
    .F1(\NES/count[14]/sig_004/FeedThruLUT ));
  SLICE_66 SLICE_66( .DI1(\NES/count[12]/sig_006/FeedThruLUT ), 
    .DI0(\NES/count[13]/sig_005/FeedThruLUT ), .B1(\NES/count[12] ), 
    .C0(\NES/count[13] ), .CLK(pll_clock), .Q0(\NES/NEScount[3] ), 
    .Q1(\NES/NEScount[2] ), .F0(\NES/count[13]/sig_005/FeedThruLUT ), 
    .F1(\NES/count[12]/sig_006/FeedThruLUT ));
  SLICE_68 SLICE_68( .DI1(\NES/count[10]/sig_008/FeedThruLUT ), 
    .DI0(\NES/count[11]/sig_007/FeedThruLUT ), .A1(\NES/count[10] ), 
    .B0(\NES/count[11] ), .CLK(pll_clock), .Q0(\NES/NEScount[1] ), 
    .Q1(\NES/NEScount[0] ), .F0(\NES/count[11]/sig_007/FeedThruLUT ), 
    .F1(\NES/count[10]/sig_008/FeedThruLUT ));
  SLICE_70 SLICE_70( .DI1(n1565), .DI0(n1568), .D1(n2064), .C1(control_c), 
    .B1(n1382), .A1(\button_sig[6] ), .D0(control_c), .C0(\button_sig[7] ), 
    .B0(n7), .A0(n8), .CLK(NESclk_c), .Q0(\button_sig[7] ), 
    .Q1(\button_sig[6] ), .F0(n1568), .F1(n1565));
  SLICE_71 SLICE_71( .DI1(n1563), .DI0(\NES/n6264 ), .D1(n4), .C1(control_c), 
    .B1(\button_sig[3] ), .A1(n6548), .C0(\NES/n1210 ), .B0(control_c), 
    .A0(\button_sig[2] ), .CLK(NESclk_c), .Q0(\button_sig[2] ), 
    .Q1(\button_sig[3] ), .F0(\NES/n6264 ), .F1(n1563));
  SLICE_72 SLICE_72( .DI1(n1564), .DI0(n1566), .D1(n11), .C1(n1382), 
    .B1(\button_sig[5] ), .A1(control_c), .D0(\button_sig[4] ), .B0(control_c), 
    .A0(n6328), .CLK(NESclk_c), .Q0(\button_sig[4] ), .Q1(\button_sig[5] ), 
    .F0(n1566), .F1(n1564));
  SLICE_73 SLICE_73( .DI1(\NES/count[18]/sig_010/FeedThruLUT ), 
    .DI0(\NES/count[19]/sig_009/FeedThruLUT ), .C1(\NES/count[18] ), 
    .C0(\NES/count[19] ), .CLK(pll_clock), .Q0(\NES/NEScount[9] ), 
    .Q1(\NES/NEScount[8] ), .F0(\NES/count[19]/sig_009/FeedThruLUT ), 
    .F1(\NES/count[18]/sig_010/FeedThruLUT ));
  SLICE_77 SLICE_77( .DI1(\NES/n6278 ), .DI0(n1562), .D1(\button_sig[0] ), 
    .C1(n19), .B1(control_c), .D0(n19), .C0(n19_adj_331), .B0(\button_sig[1] ), 
    .A0(control_c), .CLK(NESclk_c), .Q0(\button_sig[1] ), .Q1(\button_sig[0] ), 
    .F0(n1562), .F1(\NES/n6278 ));
  SLICE_83 SLICE_83( .D1(\Hola/n9 ), .C1(\Hola/n10 ), .B1(\Hola/n8 ), 
    .A1(\rowp[8] ), .D0(\rowp[4] ), .C0(n1358), .B0(validp), .A0(\Hola/n4 ), 
    .F0(\Hola/n10 ), .F1(rgbT_c));
  SLICE_84 SLICE_84( .D1(\rowp[6] ), .A1(\rowp[7] ), .D0(\rowp[7] ), 
    .C0(\rowp[9] ), .B0(\rowp[8] ), .A0(\rowp[6] ), .F0(\Hola/n9 ), 
    .F1(\Howdy/n1376 ));
  SLICE_85 SLICE_85( .D1(\Hola/n18 ), .C1(\Hola/rgb_5__N_241 ), 
    .B1(\Hola/rgb_5__N_253[9] ), .A1(\colp[9] ), .D0(\colp[9] ), 
    .C0(\Hola/n18_adj_316 ), .B0(\Hola/rgb_5__N_242[9] ), 
    .F0(\Hola/rgb_5__N_241 ), .F1(\Hola/n8 ));
  SLICE_87 SLICE_87( .DI1(\Howdy/valid_N_229 ), .D1(\Howdy/countc[31] ), 
    .C1(\Howdy/n6 ), .B1(\Howdy/n1322 ), .A1(\Howdy/countr[31] ), 
    .D0(\Howdy/n1317 ), .C0(\Howdy/n16 ), .B0(\Howdy/n6325 ), 
    .A0(\Howdy/n1347 ), .LSR(\Howdy/valid_N_234 ), .CLK(pll_clock), 
    .Q1(validp), .F0(\Howdy/n6 ), .F1(\Howdy/valid_N_229 ));
  SLICE_88 SLICE_88( .D1(\colp[9] ), .C1(\Howdy/n1347 ), .A1(\colp[8] ), 
    .D0(\Howdy/n36_adj_310 ), .C0(\Howdy/n38_adj_311 ), 
    .B0(\Howdy/n35_adj_308 ), .A0(\Howdy/n37_adj_309 ), .F0(\Howdy/n1347 ), 
    .F1(\Howdy/n1317 ));
  SLICE_89 SLICE_89( .D1(\NES/count[3] ), .C1(\NES/count[11] ), 
    .D0(\NES/count[2] ), .C0(\NES/count[8] ), .B0(\NES/count[14] ), 
    .A0(\NES/count[18] ), .F0(\NES/n34 ), .F1(\NES/n22 ));
  SLICE_90 SLICE_90( .D1(\NES/n35 ), .C1(\NES/n33 ), .B1(\NES/n36 ), 
    .A1(\NES/n34 ), .D0(\NES/count[17] ), .C0(\NES/count[7] ), 
    .B0(\NES/count[4] ), .A0(\NES/count[16] ), .F0(\NES/n33 ), 
    .F1(\NES/n1560 ));
  SLICE_91 SLICE_91( .D1(\NES/count[15] ), .C1(\NES/n32 ), .B1(\NES/count[0] ), 
    .A1(\NES/n22 ), .D0(\NES/count[10] ), .C0(\NES/count[1] ), 
    .B0(\NES/count[13] ), .A0(\NES/count[12] ), .F0(\NES/n32 ), .F1(\NES/n36 ));
  SLICE_93 SLICE_93( .D1(\NES/n19_c ), .C1(\NES/n7_c ), .B1(CNTclk_N_89), 
    .A1(\NES/n18 ), .D0(\NES/NESclk ), .C0(\NES/NEScount[4] ), .F0(\NES/n7_c ), 
    .F1(NESclk_c));
  SLICE_94 SLICE_94( .C1(\NES/NEScount[1] ), .B1(\NES/n1353 ), 
    .A1(\NES/NEScount[0] ), .D0(\NES/NEScount[1] ), .C0(\NES/n1353 ), 
    .B0(\NES/NEScount[0] ), .F0(CNTclk_N_89), .F1(\NES/n1210 ));
  SLICE_95 SLICE_95( .C1(\NES/NEScount[0] ), .A1(\NES/NEScount[1] ), 
    .D0(\NES/NEScount[1] ), .B0(\NES/NEScount[0] ), .A0(\NES/n1353 ), 
    .F0(n19_adj_331), .F1(n11));
  SLICE_96 SLICE_96( .D1(\NES/NEScount[1] ), .C1(\NES/n1353 ), 
    .B1(\NES/NEScount[0] ), .D0(\NES/NEScount[4] ), .C0(\NES/n18 ), 
    .B0(\NES/NEScount[2] ), .A0(\NES/NEScount[3] ), .F0(\NES/n1353 ), .F1(n19));
  SLICE_97 SLICE_97( .D1(\NES/NEScount[8] ), .C1(\NES/n6 ), 
    .B1(\NES/NEScount[9] ), .A1(\NES/NEScount[6] ), .D0(\NES/NEScount[7] ), 
    .B0(\NES/NEScount[5] ), .F0(\NES/n6 ), .F1(\NES/n18 ));
  SLICE_98 SLICE_98( .D1(\NES/n18 ), .C1(\NES/n2445 ), .B1(\NES/NEScount[2] ), 
    .A1(n19), .B0(\NES/NEScount[4] ), .A0(\NES/NEScount[3] ), .F0(\NES/n2445 ), 
    .F1(n1382));
  SLICE_99 SLICE_99( .D1(\NES/NEScount[1] ), .C1(n6548), 
    .B1(\NES/NEScount[2] ), .A1(\NES/NEScount[0] ), .D0(\NES/NEScount[4] ), 
    .C0(\NES/NEScount[3] ), .A0(\NES/n18 ), .F0(n6548), .F1(n6328));
  SLICE_102 SLICE_102( .D0(\NES/NEScount[4] ), .C0(\NES/n18 ), .B0(n19), 
    .A0(\NES/NEScount[2] ), .F0(n8));
  SLICE_103 SLICE_103( .D1(\rowp[3] ), .C1(n1358), .B1(\rowp[2] ), 
    .A1(\rowp[8] ), .C0(\rowp[6] ), .B0(\rowp[7] ), .A0(\rowp[5] ), .F0(n1358), 
    .F1(\Howdy/n4 ));
  SLICE_104 SLICE_104( .D1(\rowp[9] ), .C1(\Howdy/n6172 ), 
    .B1(\Howdy/countr[31] ), .A1(\Howdy/n1350 ), .D0(n1358), .C0(\rowp[8] ), 
    .B0(\rowp[1] ), .A0(\Howdy/n1373 ), .F0(\Howdy/n6172 ), 
    .F1(\Howdy/valid_N_234 ));
  SLICE_106 SLICE_106( .D0(\rowp[0] ), .C0(\rowp[2] ), .B0(\rowp[1] ), 
    .A0(\rowp[3] ), .F0(\Hola/n4 ));
  SLICE_107 SLICE_107( .D1(\Hola/rgb_5__N_253[8] ), .C1(\Hola/n16 ), 
    .B1(\colp[8] ), .C0(\Hola/n14 ), .B0(\Hola/rgb_5__N_253[7] ), 
    .A0(\colp[7] ), .F0(\Hola/n16 ), .F1(\Hola/n18 ));
  SLICE_109 SLICE_109( .D1(\Hola/rgb_5__N_242[8] ), .C1(\Hola/n16_adj_317 ), 
    .A1(\colp[8] ), .D0(\colp[7] ), .C0(\Hola/n14_adj_321 ), 
    .A0(\Hola/rgb_5__N_242[7] ), .F0(\Hola/n16_adj_317 ), 
    .F1(\Hola/n18_adj_316 ));
  SLICE_111 SLICE_111( .D1(\Hola/rgb_5__N_253[6] ), .C1(\Hola/n12 ), 
    .A1(\colp[6] ), .C0(\Hola/n10_adj_318 ), .B0(\colp[5] ), 
    .A0(\Hola/rgb_5__N_253[5] ), .F0(\Hola/n12 ), .F1(\Hola/n14 ));
  SLICE_113 SLICE_113( .C1(\Hola/n8_adj_319 ), .B1(\colp[4] ), 
    .A1(\Hola/rgb_5__N_253[4] ), .D0(\colp[3] ), .C0(\Hola/n6 ), 
    .A0(\Hola/rgb_5__N_253[3] ), .F0(\Hola/n8_adj_319 ), 
    .F1(\Hola/n10_adj_318 ));
  SLICE_115 SLICE_115( .C1(\Hola/n4_adj_320 ), .B1(\colp[2] ), 
    .A1(\Hola/rgb_5__N_253[2] ), .D0(\colp[0] ), .C0(\Hola/rgb_5__N_242[1] ), 
    .B0(\colp[1] ), .A0(\Hola/rgb_5__N_242[0] ), .F0(\Hola/n4_adj_320 ), 
    .F1(\Hola/n6 ));
  SLICE_117 SLICE_117( .D1(\colp[6] ), .C1(\Hola/n12_adj_322 ), 
    .B1(\Hola/rgb_5__N_242[6] ), .C0(\Hola/n10_adj_323 ), 
    .B0(\Hola/rgb_5__N_242[5] ), .A0(\colp[5] ), .F0(\Hola/n12_adj_322 ), 
    .F1(\Hola/n14_adj_321 ));
  SLICE_119 SLICE_119( .C1(\Hola/n8_adj_324 ), .B1(\colp[4] ), 
    .A1(\Hola/rgb_5__N_242[4] ), .C0(\Hola/n6_adj_325 ), 
    .B0(\Hola/rgb_5__N_242[3] ), .A0(\colp[3] ), .F0(\Hola/n8_adj_324 ), 
    .F1(\Hola/n10_adj_323 ));
  SLICE_121 SLICE_121( .D1(\colp[2] ), .C1(\Hola/n4_adj_326 ), 
    .A1(\Hola/rgb_5__N_242[2] ), .D0(\Hola/rgb_5__N_242[0] ), .C0(\colp[0] ), 
    .B0(\Hola/rgb_5__N_242[1] ), .A0(\colp[1] ), .F0(\Hola/n4_adj_326 ), 
    .F1(\Hola/n6_adj_325 ));
  SLICE_123 SLICE_123( .D1(\button_sig[6] ), .C1(\button_sig[7] ), 
    .B1(\Hola/n1367 ), .C0(\Hola/n1367 ), .B0(\button_sig[7] ), 
    .A0(\button_sig[6] ), .F0(\Hola/n234[6] ), .F1(\Hola/n2109 ));
  SLICE_124 SLICE_124( .D1(\button_sig[2] ), .C1(\Hola/n10_adj_327 ), 
    .A1(\button_sig[3] ), .D0(\button_sig[4] ), .C0(\button_sig[1] ), 
    .B0(\button_sig[0] ), .A0(\button_sig[5] ), .F0(\Hola/n10_adj_327 ), 
    .F1(\Hola/n1367 ));
  SLICE_126 SLICE_126( .D1(\Howdy/countc[31] ), .C1(\Howdy/n62_adj_307 ), 
    .B1(\Howdy/n62 ), .A1(\Howdy/countr[31] ), .D0(\rowp[4] ), .C0(\Howdy/n4 ), 
    .B0(\Howdy/n1350 ), .A0(\rowp[9] ), .F0(\Howdy/n62_adj_307 ), 
    .F1(\Howdy/row_9__N_187 ));
  SLICE_127 SLICE_127( .D1(\Howdy/n1320 ), .C1(\Howdy/n1373 ), .A1(\rowp[5] ), 
    .D0(\rowp[2] ), .B0(\rowp[3] ), .A0(\rowp[4] ), .F0(\Howdy/n1373 ), 
    .F1(\Howdy/n1322 ));
  SLICE_128 SLICE_128( .D1(\Howdy/n1376 ), .C1(\Howdy/n1350 ), .B1(\rowp[8] ), 
    .A1(\rowp[9] ), .D0(\Howdy/n36 ), .C0(\Howdy/n38 ), .B0(\Howdy/n35 ), 
    .A0(\Howdy/n37 ), .F0(\Howdy/n1350 ), .F1(\Howdy/n1320 ));
  SLICE_129 SLICE_129( .D1(\Howdy/n6324 ), .C1(\Howdy/n1335 ), .B1(\colp[4] ), 
    .A1(\Howdy/n4_adj_305 ), .D0(\colp[7] ), .B0(\colp[6] ), .A0(\colp[5] ), 
    .F0(\Howdy/n1335 ), .F1(\Howdy/n6325 ));
  SLICE_130 SLICE_130( .C1(\Howdy/n4_adj_305 ), .A1(\colp[4] ), .D0(\colp[2] ), 
    .C0(\colp[1] ), .B0(\colp[3] ), .A0(\colp[0] ), .F0(\Howdy/n4_adj_305 ), 
    .F1(\Howdy/n6149 ));
  SLICE_132 SLICE_132( .D1(\Howdy/countr[16] ), .C1(\Howdy/n34 ), 
    .B1(\Howdy/countr[18] ), .A1(\Howdy/n24 ), .D0(\Howdy/countr[14] ), 
    .C0(\Howdy/countr[11] ), .B0(\Howdy/countr[15] ), .A0(\Howdy/countr[10] ), 
    .F0(\Howdy/n34 ), .F1(\Howdy/n38 ));
  SLICE_133 SLICE_133( .D1(\colp[4] ), .C1(\Howdy/n1333 ), .B1(\colp[7] ), 
    .A1(\Howdy/n1370 ), .D0(\colp[3] ), .C0(\colp[1] ), .B0(\colp[2] ), 
    .A0(\colp[0] ), .F0(\Howdy/n1333 ), .F1(\Howdy/n16 ));
  SLICE_134 SLICE_134( .D1(\Howdy/countr[24] ), .C1(\Howdy/countr[21] ), 
    .B1(\Howdy/countr[13] ), .A1(\Howdy/countr[23] ), .D0(\colp[5] ), 
    .B0(\colp[6] ), .F0(\Howdy/n1370 ), .F1(\Howdy/n36 ));
  SLICE_135 SLICE_135( .D1(\Howdy/countr[30] ), .C1(\Howdy/n22 ), 
    .B1(\Howdy/countr[26] ), .A1(\Howdy/countr[22] ), .D0(\Howdy/countr[12] ), 
    .C0(\Howdy/countr[20] ), .F0(\Howdy/n22 ), .F1(\Howdy/n37 ));
  SLICE_138 SLICE_138( .D1(\Howdy/countc[31] ), .C1(\Howdy/n62 ), 
    .D0(\Howdy/n1347 ), .C0(\Howdy/n6149 ), .B0(\Howdy/n6324 ), 
    .A0(\Howdy/n1335 ), .F0(\Howdy/n62 ), .F1(\Howdy/row_9__N_189 ));
  SLICE_140 SLICE_140( .DI1(\Howdy/n6163 ), .D1(\colp[7] ), 
    .C1(\Howdy/n4_adj_306 ), .B1(\Howdy/n1317 ), .A1(\colp[6] ), 
    .D0(\Howdy/n1333 ), .B0(\colp[5] ), .A0(\colp[4] ), .LSR(\Howdy/n1143 ), 
    .CLK(pll_clock), .Q1(HSYNC_c), .F0(\Howdy/n4_adj_306 ), .F1(\Howdy/n6163 ));
  SLICE_142 SLICE_142( .D1(\Howdy/countc[16] ), .C1(\Howdy/n34_adj_313 ), 
    .B1(\Howdy/countc[18] ), .A1(\Howdy/n24_adj_314 ), .D0(\Howdy/countc[10] ), 
    .C0(\Howdy/countc[14] ), .B0(\Howdy/countc[15] ), .A0(\Howdy/countc[11] ), 
    .F0(\Howdy/n34_adj_313 ), .F1(\Howdy/n38_adj_311 ));
  SLICE_143 SLICE_143( .D1(\Howdy/countc[30] ), .C1(\Howdy/n22_adj_312 ), 
    .B1(\Howdy/countc[22] ), .A1(\Howdy/countc[26] ), .B0(\Howdy/countc[12] ), 
    .A0(\Howdy/countc[20] ), .F0(\Howdy/n22_adj_312 ), 
    .F1(\Howdy/n37_adj_309 ));
  SLICE_145 SLICE_145( .C1(\NES/NEScount[0] ), .B1(\NES/NEScount[2] ), 
    .A1(\NES/NEScount[1] ), .D0(\NES/NEScount[1] ), .C0(\NES/NEScount[3] ), 
    .B0(\NES/NEScount[0] ), .A0(\NES/NEScount[2] ), .F0(\NES/n19_c ), .F1(n4));
  SLICE_146 SLICE_146( .C1(\NES/NEScount[1] ), .A1(\NES/NEScount[0] ), 
    .D0(\NES/NEScount[0] ), .B0(\NES/NEScount[1] ), .A0(\NES/NEScount[3] ), 
    .F0(n7), .F1(n2064));
  SLICE_148 SLICE_148( .DI1(\Howdy/n7217 ), .D1(\rowp[0] ), 
    .C1(\Howdy/n6_adj_315 ), .B1(\rowp[1] ), .A1(\Howdy/n1320 ), 
    .D0(\rowp[5] ), .C0(\rowp[3] ), .B0(\rowp[4] ), .A0(\rowp[2] ), 
    .LSR(\Howdy/n1132 ), .CLK(pll_clock), .Q1(VSYNC_c), 
    .F0(\Howdy/n6_adj_315 ), .F1(\Howdy/n7217 ));
  SLICE_149 SLICE_149( .D1(\Howdy/countc[21] ), .C1(\Howdy/countc[13] ), 
    .B1(\Howdy/countc[23] ), .A1(\Howdy/countc[24] ), .C0(\Howdy/countc[29] ), 
    .A0(\Howdy/countc[19] ), .F0(\Howdy/n24_adj_314 ), 
    .F1(\Howdy/n36_adj_310 ));
  SLICE_152 SLICE_152( .D0(\Howdy/countc[28] ), .C0(\Howdy/countc[27] ), 
    .B0(\Howdy/countc[25] ), .A0(\Howdy/countc[17] ), .F0(\Howdy/n35_adj_308 ));
  SLICE_153 SLICE_153( .D1(\Howdy/countr[25] ), .C1(\Howdy/countr[27] ), 
    .B1(\Howdy/countr[28] ), .A1(\Howdy/countr[17] ), .C0(\Howdy/countr[19] ), 
    .A0(\Howdy/countr[29] ), .F0(\Howdy/n24 ), .F1(\Howdy/n35 ));
  SLICE_158 SLICE_158( .C0(\Howdy/n62_adj_307 ), .B0(\Howdy/countr[31] ), 
    .F0(\Howdy/n1132 ));
  SLICE_159 SLICE_159( .DI1(\NES/count[9]/sig_002/FeedThruLUT ), 
    .D1(\NES/count[9] ), .D0(\NES/count[19] ), .C0(\NES/count[6] ), 
    .B0(\NES/count[9] ), .A0(\NES/count[5] ), .CLK(pll_clock), 
    .Q1(\NES/NESclk ), .F0(\NES/n35 ), .F1(\NES/count[9]/sig_002/FeedThruLUT ));
  SLICE_163 SLICE_163( .C0(\colp[9] ), .A0(\colp[8] ), .F0(\Howdy/n6324 ));
  SLICE_166 SLICE_166( .C0(\Howdy/countc[31] ), .A0(\Howdy/n62 ), 
    .F0(\Howdy/n1143 ));
  SLICE_177 SLICE_177( .F0(VCC_net));
  Hi Hi( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  Hello_lscc_pll_inst_u_PLL_B \Hello.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk), .FEEDBACK(\Hello/lscc_pll_inst/feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\Hello/lscc_pll_inst/feedback_w ), 
    .OUTGLOBAL(pll_clock));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
  VSYNC VSYNC_I( .PADDO(VSYNC_c), .VSYNC(VSYNC));
  rgbT_5_ \rgbT[5]_I ( .PADDO(rgbT_c), .rgbT5(rgbT[5]));
  rgbT_4_ \rgbT[4]_I ( .PADDO(rgbT_c), .rgbT4(rgbT[4]));
  rgbT_3_ \rgbT[3]_I ( .PADDO(rgbT_c), .rgbT3(rgbT[3]));
  rgbT_2_ \rgbT[2]_I ( .PADDO(rgbT_c), .rgbT2(rgbT[2]));
  rgbT_1_ \rgbT[1]_I ( .PADDO(rgbT_c), .rgbT1(rgbT[1]));
  rgbT_0_ \rgbT[0]_I ( .PADDO(rgbT_c), .rgbT0(rgbT[0]));
  latch latch_I( .PADDO(CNTclk_N_89), .latch(latch));
  NESclk NESclk_I( .PADDO(NESclk_c), .NESclk(NESclk));
  control control_I( .PADDI(control_c), .control(control));
endmodule

module SLICE_0 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_155_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_155_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_155__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_155_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_155__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_153_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_12 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_153_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_13 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_153_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_14 ( input D1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_153_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_15 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/add_153_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_16 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_98_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_98_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_18 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_98_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_19 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_98_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_20 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_98_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_21 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/add_98_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_22 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_152_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_152_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_152_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_25 ( input D1, C1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/add_152_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_26 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/add_152_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i21 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_28 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i30 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i31 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_29 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i19 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_30 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i17 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_31 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i15 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_32 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i13 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_33 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i28 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i29 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_35 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_36 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_38 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i26 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i27 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_39 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_40 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countr__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_41 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i25 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_42 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_43 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_45 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_46 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_47 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_48 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_49 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_50 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_51 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_52 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_53 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_54 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_55 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_56 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_57 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_58 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_156__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_59 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_156_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_156__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_60 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i32 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_61 ( input DI1, DI0, A1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_61_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_61_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_64 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_64_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_64_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_66 ( input DI1, DI0, B1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 SLICE_66_K1( .A(GNDI), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_66_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_68 ( input DI1, DI0, A1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 SLICE_68_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_68_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_70 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 i1238_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 i1241_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x8BAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, C0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 i1236_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 \NES/i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/button_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x8DCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x3A3A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_72 ( input DI1, DI0, D1, C1, B1, A1, D0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 i1237_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 i1239_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/button_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x7722") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_73 ( input DI1, DI0, C1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_73_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_73_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_77 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 \NES/i11_3_lut_adj_59 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 i1235_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/button_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xC5CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40013 \Hola/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 \Hola/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xC8C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40015 \Howdy/i1_2_lut_adj_48 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \Hola/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x0307") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40017 \Hola/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \Hola/col_9__I_0_i20_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xB020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_87 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, output 
    Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40019 \Howdy/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \Howdy/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Howdy/valid_41 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x1110") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40021 \Howdy/i2_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \Howdy/i20_4_lut_adj_34 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_89 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 \NES/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \NES/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40025 \NES/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \NES/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_91 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 \NES/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \NES/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40029 \NES/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \NES/i2_2_lut_adj_52 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40031 \NES.i3_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \NES/i6145_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x2020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0003") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_95 ( input C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40033 \NES/i1_2_lut_adj_55 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \NES/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xEEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40035 \NES/i2_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \NES/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40037 \NES/i4_4_lut_adj_53 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 \NES/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 \NES/i2_3_lut_4_lut_adj_57 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \NES/i1_2_lut_adj_54 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF7") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40041 \NES/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \NES/i5840_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_102 ( input D0, C0, B0, A0, output F0 );

  lut40043 \NES/i3_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_103 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \Howdy/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \Hola/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_104 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40046 \Howdy/i6141_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \Howdy/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x3222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_106 ( input D0, C0, B0, A0, output F0 );

  lut40048 \Hola/i1_4_lut_adj_51 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xAAA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_107 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \Hola/rgb_5__I_28_i18_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \Hola/rgb_5__I_28_i16_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \Hola/col_9__I_0_i18_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \Hola/col_9__I_0_i16_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_111 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \Hola/rgb_5__I_28_i14_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Hola/rgb_5__I_28_i12_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xD4D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \Hola/rgb_5__I_28_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \Hola/rgb_5__I_28_i8_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xD4D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_115 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \Hola/rgb_5__I_28_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \Hola/rgb_5__I_28_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x4D0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \Hola/col_9__I_0_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Hola/col_9__I_0_i12_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_119 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 \Hola/col_9__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Hola/col_9__I_0_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_121 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \Hola/col_9__I_0_i6_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Hola/col_9__I_0_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x4D44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_123 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40060 \Hola/i6139_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \Hola/i6148_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x0202") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40021 \Hola/i5_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \Hola/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40062 \Howdy/i2_3_lut_4_lut_adj_32 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40063 \Howdy/i1_4_lut_adj_47 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_127 ( input D1, C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 \Howdy/i1_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \Howdy/i2_3_lut_adj_49 ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xFFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40066 \Howdy/i3_4_lut_adj_50 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 \Howdy/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_129 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \Howdy/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \Howdy/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_130 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 \Howdy/i2_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \Howdy/i1_4_lut_adj_46 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40071 \Howdy/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 \Howdy/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_133 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40073 \Howdy/i604_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \Howdy/i3_4_lut_adj_29 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xC888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_134 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40075 \Howdy/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 \Howdy/i1_2_lut_adj_45 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_135 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40077 \Howdy/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 \Howdy/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_138 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40079 \Howdy/i1724_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \Howdy/i1_4_lut_adj_33 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xFFC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_140 ( input DI1, D1, C1, B1, A1, D0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40081 \Howdy/i2_4_lut_adj_30 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \Howdy/i1_3_lut_adj_31 ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/hon_40 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xCC88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40071 \Howdy/i17_4_lut_adj_38 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 \Howdy/i13_4_lut_adj_40 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40084 \Howdy/i16_4_lut_adj_36 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 \Howdy/i1_2_lut_adj_39 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_145 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 \NES/i1_2_lut_3_lut_adj_58 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 \NES/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0x0404") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input C1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \NES/i1_2_lut_adj_56 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \NES/i2_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40090 \Howdy/i3_4_lut_adj_41 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \Howdy.i2_2_lut_adj_44 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Howdy/von_39 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_149 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \Howdy/i15_4_lut_adj_37 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \Howdy/i3_2_lut_adj_42 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_152 ( input D0, C0, B0, A0, output F0 );

  lut40094 \Howdy/i14_4_lut_adj_35 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_153 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40095 \Howdy/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \Howdy/i3_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_158 ( input C0, B0, output F0 );
  wire   GNDI;

  lut40097 \Howdy/i871_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_159 ( input DI1, D1, D0, C0, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40098 SLICE_159_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \NES/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/NESclk_68 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_163 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40100 \Howdy/i1_2_lut_adj_43 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_166 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40096 \Howdy/i882_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_177 ( output F0 );
  wire   GNDI;

  lut40101 i6618( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Hi ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B Hi( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module Hello_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \Hello/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.DIVR = "3";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "48.000000";
endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_5_ ( input PADDO, output rgbT5 );
  wire   VCCI;

  BB_B_B \rgbT_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT5) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_4_ ( input PADDO, output rgbT4 );
  wire   VCCI;

  BB_B_B \rgbT_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_3_ ( input PADDO, output rgbT3 );
  wire   VCCI;

  BB_B_B \rgbT_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT3) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_2_ ( input PADDO, output rgbT2 );
  wire   VCCI;

  BB_B_B \rgbT_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT2) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_1_ ( input PADDO, output rgbT1 );
  wire   VCCI;

  BB_B_B \rgbT_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_0_ ( input PADDO, output rgbT0 );
  wire   VCCI;

  BB_B_B \rgbT_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module latch ( input PADDO, output latch );
  wire   VCCI;

  BB_B_B \latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module NESclk ( input PADDO, output NESclk );
  wire   VCCI;

  BB_B_B \NESclk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(NESclk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => NESclk) = (0:0:0,0:0:0);
  endspecify

endmodule

module control ( output PADDI, input control );
  wire   GNDI;

  BB_B_B \control_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(control));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (control => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
