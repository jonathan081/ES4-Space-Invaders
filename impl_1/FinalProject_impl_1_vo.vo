
// Verilog netlist produced by program backanno, Version Radiant (64-bit) 1.0.0.350.6

// backanno -n Verilog -o FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui FinalProject_impl_1.udb 
// Netlist created on Sun Apr 21 18:32:18 2019
// Netlist written on Sun Apr 21 18:32:21 2019
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module topvhd ( control, NESclk, latch, HSYNC, VSYNC, rgbT );
  input  control;
  output NESclk, latch, HSYNC, VSYNC;
  output [5:0] rgbT;
  wire   \NES/n85[4] , \NES/n85[3] , \NES/n3404 , \NES/count[4] , \NES/n2094 , 
         \NES/count[3] , \NES/n1260 , pll_clock, \NES/n2096 , \NES/n85[2] , 
         \NES/n85[1] , \NES/n3401 , \NES/count[2] , \NES/n2092 , 
         \NES/count[1] , \NES/n85[0] , \NES/n3398 , \NES/count[0] , VCC_net, 
         \NES/n85[19] , \NES/n3428 , \NES/n2110 , \NES/count[19] , 
         \NES/n85[18] , \NES/n85[17] , \NES/n3425 , \NES/count[18] , 
         \NES/n2108 , \NES/count[17] , \NES/n85[16] , \NES/n85[15] , 
         \NES/n3422 , \NES/count[16] , \NES/n2106 , \NES/count[15] , 
         \NES/n85[14] , \NES/n85[13] , \NES/n3419 , \NES/count[14] , 
         \NES/n2104 , \NES/count[13] , \NES/n85[12] , \NES/n85[11] , 
         \NES/n3416 , \NES/count[12] , \NES/n2102 , \NES/count[11] , 
         \NES/n85[10] , \NES/n85[9] , \NES/n3413 , \NES/count[10] , 
         \NES/n2100 , \NES/count[9] , \NES/n85[8] , \NES/n85[7] , \NES/n3410 , 
         \NES/count[8] , \NES/n2098 , \NES/count[7] , \NES/n85[6] , 
         \NES/n85[5] , \NES/n3407 , \NES/count[6] , \NES/count[5] , 
         \Howdy/n133[26] , \Howdy/n133[25] , \Howdy/n3467 , \Howdy/countc[26] , 
         \Howdy/n2050 , \Howdy/countc[25] , \Howdy/row_9__N_189 , 
         \Howdy/n2052 , \Howdy/n133[4] , \Howdy/n133[3] , \Howdy/n3434 , 
         \colp[4] , \Howdy/n2028 , \colp[3] , \Howdy/n2030 , \Howdy/n133[8] , 
         \Howdy/n133[7] , \Howdy/n3440 , \colp[8] , \Howdy/n2032 , \colp[7] , 
         \Howdy/n2034 , \Howdy/n133[24] , \Howdy/n133[23] , \Howdy/n3464 , 
         \Howdy/countc[24] , \Howdy/n2048 , \Howdy/countc[23] , 
         \Howdy/n133[22] , \Howdy/n133[21] , \Howdy/n3461 , \Howdy/countc[22] , 
         \Howdy/n2046 , \Howdy/countc[21] , \Howdy/n167[4] , \Howdy/n167[3] , 
         \Howdy/n3374 , \rowp[4] , \Howdy/n2061 , \Howdy/rowp[3] , 
         \Howdy/row_9__N_187 , \Howdy/n2063 , \Howdy/n133[20] , 
         \Howdy/n133[19] , \Howdy/n3458 , \Howdy/countc[20] , \Howdy/n2044 , 
         \Howdy/countc[19] , \Howdy/n167[2] , \Howdy/n167[1] , \Howdy/n3371 , 
         \Howdy/rowp[2] , \Howdy/n2059 , \Howdy/rowp[1] , \Howdy/n167[31] , 
         \Howdy/n3500 , \Howdy/n2089 , \Howdy/countr[31] , \Howdy/n167[0] , 
         \Howdy/n3368 , \Howdy/rowp[0] , \Howdy/n133[18] , \Howdy/n133[17] , 
         \Howdy/n3455 , \Howdy/countc[18] , \Howdy/n2042 , \Howdy/countc[17] , 
         \Howdy/n133[14] , \Howdy/n133[13] , \Howdy/n3449 , \Howdy/countc[14] , 
         \Howdy/n2038 , \Howdy/countc[13] , \Howdy/n2040 , \Howdy/n167[30] , 
         \Howdy/n167[29] , \Howdy/n3497 , \Howdy/countr[30] , \Howdy/n2087 , 
         \Howdy/countr[29] , \Howdy/n167[28] , \Howdy/n167[27] , \Howdy/n3494 , 
         \Howdy/countr[28] , \Howdy/n2085 , \Howdy/countr[27] , 
         \Howdy/n133[12] , \Howdy/n133[11] , \Howdy/n3446 , \Howdy/countc[12] , 
         \Howdy/n2036 , \Howdy/countc[11] , \Howdy/n133[31] , \Howdy/n3476 , 
         \Howdy/n2056 , \Howdy/countc[31] , \Howdy/n133[6] , \Howdy/n133[5] , 
         \Howdy/n3437 , \colp[6] , \colp[5] , \Howdy/n133[0] , \Howdy/n3395 , 
         \colp[0] , \Howdy/n2026 , \Howdy/n167[26] , \Howdy/n167[25] , 
         \Howdy/n3491 , \Howdy/countr[26] , \Howdy/n2083 , \Howdy/countr[25] , 
         \Howdy/n167[24] , \Howdy/n167[23] , \Howdy/n3488 , \Howdy/countr[24] , 
         \Howdy/n2081 , \Howdy/countr[23] , \Howdy/n167[22] , \Howdy/n167[21] , 
         \Howdy/n3485 , \Howdy/countr[22] , \Howdy/n2079 , \Howdy/countr[21] , 
         \Howdy/n133[16] , \Howdy/n133[15] , \Howdy/n3452 , \Howdy/countc[16] , 
         \Howdy/countc[15] , \Howdy/n133[10] , \Howdy/n133[9] , \Howdy/n3443 , 
         \Howdy/countc[10] , \colp[9] , \Howdy/n167[20] , \Howdy/n167[19] , 
         \Howdy/n3482 , \Howdy/countr[20] , \Howdy/n2077 , \Howdy/countr[19] , 
         \Howdy/n133[30] , \Howdy/n133[29] , \Howdy/n3473 , \Howdy/countc[30] , 
         \Howdy/n2054 , \Howdy/countc[29] , \Howdy/n167[18] , \Howdy/n167[17] , 
         \Howdy/n3479 , \Howdy/countr[18] , \Howdy/n2075 , \Howdy/countr[17] , 
         \Howdy/n167[16] , \Howdy/n167[15] , \Howdy/n3392 , \Howdy/countr[16] , 
         \Howdy/n2073 , \Howdy/countr[15] , \Howdy/n133[28] , \Howdy/n133[27] , 
         \Howdy/n3470 , \Howdy/countc[28] , \Howdy/countc[27] , 
         \Howdy/n167[14] , \Howdy/n167[13] , \Howdy/n3389 , \Howdy/countr[14] , 
         \Howdy/n2071 , \Howdy/countr[13] , \Howdy/n167[12] , \Howdy/n167[11] , 
         \Howdy/n3386 , \Howdy/countr[12] , \Howdy/n2069 , \Howdy/countr[11] , 
         \Howdy/n167[10] , \Howdy/n167[9] , \Howdy/n3383 , \Howdy/countr[10] , 
         \Howdy/n2067 , \rowp[9] , \Howdy/n167[8] , \Howdy/n167[7] , 
         \Howdy/n3380 , \Howdy/rowp[8] , \Howdy/n2065 , \Howdy/rowp[7] , 
         \Howdy/n167[6] , \Howdy/n167[5] , \Howdy/n3377 , \Howdy/rowp[6] , 
         \rowp[5] , \Howdy/n133[2] , \Howdy/n133[1] , \Howdy/n3431 , \colp[2] , 
         \colp[1] , \GAMER/posxout_31__N_235[2] , 
         \GAMER/posxout_31__N_235[1]$n0 , \button_sig[7] , \button_sig[6] , 
         \GAMER/n1221 , \rgb_5__N_436[1] , \rgb_5__N_436[3] , 
         \NES/count[18]/sig_001/FeedThruLUT , 
         \NES/count[19]/sig_000/FeedThruLUT , \NES/NEScount[9] , 
         \NES/NEScount[8] , \NES/count[16]/sig_003/FeedThruLUT , 
         \NES/count[17]/sig_002/FeedThruLUT , \NES/NEScount[7] , 
         \NES/NEScount[6] , \NES/count[14]/sig_005/FeedThruLUT , 
         \NES/count[15]/sig_004/FeedThruLUT , \NES/NEScount[5] , 
         \NES/NEScount[4] , \NES/count[12]/sig_007/FeedThruLUT , 
         \NES/count[13]/sig_006/FeedThruLUT , \NES/NEScount[3] , 
         \NES/NEScount[2] , n1261, n1268, n19, control_c, \button_sig[0] , n21, 
         \button_sig[1] , NESclk_c, n1262, n1267, \button_sig[3] , n4, n2697, 
         \button_sig[2] , n1672, n1208, n1263, n1266, \button_sig[5] , n1204, 
         n11, n11_adj_488, \button_sig[4] , n12, n1264, n1265, n2724, n2705, 
         \NES/count[10]/sig_009/FeedThruLUT , 
         \NES/count[11]/sig_008/FeedThruLUT , \NES/NEScount[1] , 
         \NES/NEScount[0] , \NES/count[9]/sig_010/FeedThruLUT , \NES/NESclk , 
         \NES/n18 , \NES/n2728 , \Hola/n7 , n16, \Hola/n9 , n12_adj_491, 
         rgbT_c, n4_adj_490, n2539, \rgb_5__N_436[0] , \Howdy/n1450 , 
         \Howdy/n2871 , \Howdy/n141 , \Howdy/n7 , \GAMER/posxout_31__N_267[0] , 
         \GAMER/posxout_31__N_235[1] , \GAMER/n10 , \NES/n20 , CNTclk_N_89, 
         \NES/n1230 , \NES/n9 , \NES/n12_c , \NES/n32 , \NES/n22 , \NES/n36 , 
         \NES/n34 , \NES/n33 , \NES/n35 , n4_adj_489, n8, n1184, validp, 
         \Hola/n2726 , n1603, n50, \Howdy/n63 , \Howdy/n2407 , \Howdy/n62 , 
         \Howdy/n2395 , \Howdy/n2550 , \Howdy/n1218 , \Howdy/n56 , 
         \Howdy/n2405 , \Howdy/n1599 , \Howdy/n37 , \Howdy/n38 , \Howdy/n35 , 
         \Howdy/n36 , \Howdy/n2874 , \Howdy/n5 , \Howdy/n1193 , \Howdy/n2408 , 
         \Howdy/n2713 , \Howdy/n22 , \Howdy/n34 , \Howdy/n24 , 
         \Howdy/n36_adj_479 , \Howdy/n38_adj_480 , \Howdy/n37_adj_478 , 
         \Howdy/n35_adj_477 , \Howdy/n970 , \Howdy/n58 , \Howdy/n65 , 
         \Howdy/n25 , \Howdy/n22_adj_482 , \Howdy/valid_N_229 , \Howdy/n1627 , 
         \Howdy/n53 , \Howdy/n24_adj_484 , \Howdy/n34_adj_483 , \Howdy/n2406 , 
         VSYNC_c, \Howdy/n991 , \Howdy/n1179 , \Howdy/n4 , HSYNC_c, clk, 
         \Hello/lscc_pll_inst/feedback_w ;

  SLICE_0 SLICE_0( .DI1(\NES/n85[4] ), .DI0(\NES/n85[3] ), .D1(\NES/n3404 ), 
    .C1(\NES/count[4] ), .D0(\NES/n2094 ), .C0(\NES/count[3] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2094 ), .CIN1(\NES/n3404 ), 
    .Q0(\NES/count[3] ), .Q1(\NES/count[4] ), .F0(\NES/n85[3] ), 
    .F1(\NES/n85[4] ), .COUT1(\NES/n2096 ), .COUT0(\NES/n3404 ));
  SLICE_1 SLICE_1( .DI1(\NES/n85[2] ), .DI0(\NES/n85[1] ), .D1(\NES/n3401 ), 
    .C1(\NES/count[2] ), .D0(\NES/n2092 ), .C0(\NES/count[1] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2092 ), .CIN1(\NES/n3401 ), 
    .Q0(\NES/count[1] ), .Q1(\NES/count[2] ), .F0(\NES/n85[1] ), 
    .F1(\NES/n85[2] ), .COUT1(\NES/n2094 ), .COUT0(\NES/n3401 ));
  SLICE_2 SLICE_2( .DI1(\NES/n85[0] ), .D1(\NES/n3398 ), .C1(\NES/count[0] ), 
    .B1(VCC_net), .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN1(\NES/n3398 ), 
    .Q1(\NES/count[0] ), .F1(\NES/n85[0] ), .COUT1(\NES/n2092 ), 
    .COUT0(\NES/n3398 ));
  SLICE_3 SLICE_3( .DI0(\NES/n85[19] ), .D1(\NES/n3428 ), .D0(\NES/n2110 ), 
    .C0(\NES/count[19] ), .LSR(\NES/n1260 ), .CLK(pll_clock), 
    .CIN0(\NES/n2110 ), .CIN1(\NES/n3428 ), .Q0(\NES/count[19] ), 
    .F0(\NES/n85[19] ), .COUT0(\NES/n3428 ));
  SLICE_4 SLICE_4( .DI1(\NES/n85[18] ), .DI0(\NES/n85[17] ), .D1(\NES/n3425 ), 
    .C1(\NES/count[18] ), .D0(\NES/n2108 ), .C0(\NES/count[17] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2108 ), .CIN1(\NES/n3425 ), 
    .Q0(\NES/count[17] ), .Q1(\NES/count[18] ), .F0(\NES/n85[17] ), 
    .F1(\NES/n85[18] ), .COUT1(\NES/n2110 ), .COUT0(\NES/n3425 ));
  SLICE_5 SLICE_5( .DI1(\NES/n85[16] ), .DI0(\NES/n85[15] ), .D1(\NES/n3422 ), 
    .C1(\NES/count[16] ), .D0(\NES/n2106 ), .C0(\NES/count[15] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2106 ), .CIN1(\NES/n3422 ), 
    .Q0(\NES/count[15] ), .Q1(\NES/count[16] ), .F0(\NES/n85[15] ), 
    .F1(\NES/n85[16] ), .COUT1(\NES/n2108 ), .COUT0(\NES/n3422 ));
  SLICE_6 SLICE_6( .DI1(\NES/n85[14] ), .DI0(\NES/n85[13] ), .D1(\NES/n3419 ), 
    .C1(\NES/count[14] ), .D0(\NES/n2104 ), .C0(\NES/count[13] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2104 ), .CIN1(\NES/n3419 ), 
    .Q0(\NES/count[13] ), .Q1(\NES/count[14] ), .F0(\NES/n85[13] ), 
    .F1(\NES/n85[14] ), .COUT1(\NES/n2106 ), .COUT0(\NES/n3419 ));
  SLICE_7 SLICE_7( .DI1(\NES/n85[12] ), .DI0(\NES/n85[11] ), .D1(\NES/n3416 ), 
    .C1(\NES/count[12] ), .D0(\NES/n2102 ), .C0(\NES/count[11] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2102 ), .CIN1(\NES/n3416 ), 
    .Q0(\NES/count[11] ), .Q1(\NES/count[12] ), .F0(\NES/n85[11] ), 
    .F1(\NES/n85[12] ), .COUT1(\NES/n2104 ), .COUT0(\NES/n3416 ));
  SLICE_8 SLICE_8( .DI1(\NES/n85[10] ), .DI0(\NES/n85[9] ), .D1(\NES/n3413 ), 
    .C1(\NES/count[10] ), .D0(\NES/n2100 ), .C0(\NES/count[9] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2100 ), .CIN1(\NES/n3413 ), 
    .Q0(\NES/count[9] ), .Q1(\NES/count[10] ), .F0(\NES/n85[9] ), 
    .F1(\NES/n85[10] ), .COUT1(\NES/n2102 ), .COUT0(\NES/n3413 ));
  SLICE_9 SLICE_9( .DI1(\NES/n85[8] ), .DI0(\NES/n85[7] ), .D1(\NES/n3410 ), 
    .C1(\NES/count[8] ), .D0(\NES/n2098 ), .C0(\NES/count[7] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2098 ), .CIN1(\NES/n3410 ), 
    .Q0(\NES/count[7] ), .Q1(\NES/count[8] ), .F0(\NES/n85[7] ), 
    .F1(\NES/n85[8] ), .COUT1(\NES/n2100 ), .COUT0(\NES/n3410 ));
  SLICE_10 SLICE_10( .DI1(\NES/n85[6] ), .DI0(\NES/n85[5] ), .D1(\NES/n3407 ), 
    .C1(\NES/count[6] ), .D0(\NES/n2096 ), .C0(\NES/count[5] ), 
    .LSR(\NES/n1260 ), .CLK(pll_clock), .CIN0(\NES/n2096 ), .CIN1(\NES/n3407 ), 
    .Q0(\NES/count[5] ), .Q1(\NES/count[6] ), .F0(\NES/n85[5] ), 
    .F1(\NES/n85[6] ), .COUT1(\NES/n2098 ), .COUT0(\NES/n3407 ));
  SLICE_11 SLICE_11( .DI1(\Howdy/n133[26] ), .DI0(\Howdy/n133[25] ), 
    .D1(\Howdy/n3467 ), .C1(\Howdy/countc[26] ), .D0(\Howdy/n2050 ), 
    .C0(\Howdy/countc[25] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2050 ), .CIN1(\Howdy/n3467 ), .Q0(\Howdy/countc[25] ), 
    .Q1(\Howdy/countc[26] ), .F0(\Howdy/n133[25] ), .F1(\Howdy/n133[26] ), 
    .COUT1(\Howdy/n2052 ), .COUT0(\Howdy/n3467 ));
  SLICE_12 SLICE_12( .DI1(\Howdy/n133[4] ), .DI0(\Howdy/n133[3] ), 
    .D1(\Howdy/n3434 ), .C1(\colp[4] ), .D0(\Howdy/n2028 ), .C0(\colp[3] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n2028 ), 
    .CIN1(\Howdy/n3434 ), .Q0(\colp[3] ), .Q1(\colp[4] ), .F0(\Howdy/n133[3] ), 
    .F1(\Howdy/n133[4] ), .COUT1(\Howdy/n2030 ), .COUT0(\Howdy/n3434 ));
  SLICE_13 SLICE_13( .DI1(\Howdy/n133[8] ), .DI0(\Howdy/n133[7] ), 
    .D1(\Howdy/n3440 ), .C1(\colp[8] ), .D0(\Howdy/n2032 ), .C0(\colp[7] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n2032 ), 
    .CIN1(\Howdy/n3440 ), .Q0(\colp[7] ), .Q1(\colp[8] ), .F0(\Howdy/n133[7] ), 
    .F1(\Howdy/n133[8] ), .COUT1(\Howdy/n2034 ), .COUT0(\Howdy/n3440 ));
  SLICE_14 SLICE_14( .DI1(\Howdy/n133[24] ), .DI0(\Howdy/n133[23] ), 
    .D1(\Howdy/n3464 ), .C1(\Howdy/countc[24] ), .D0(\Howdy/n2048 ), 
    .C0(\Howdy/countc[23] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2048 ), .CIN1(\Howdy/n3464 ), .Q0(\Howdy/countc[23] ), 
    .Q1(\Howdy/countc[24] ), .F0(\Howdy/n133[23] ), .F1(\Howdy/n133[24] ), 
    .COUT1(\Howdy/n2050 ), .COUT0(\Howdy/n3464 ));
  SLICE_15 SLICE_15( .DI1(\Howdy/n133[22] ), .DI0(\Howdy/n133[21] ), 
    .D1(\Howdy/n3461 ), .C1(\Howdy/countc[22] ), .D0(\Howdy/n2046 ), 
    .C0(\Howdy/countc[21] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2046 ), .CIN1(\Howdy/n3461 ), .Q0(\Howdy/countc[21] ), 
    .Q1(\Howdy/countc[22] ), .F0(\Howdy/n133[21] ), .F1(\Howdy/n133[22] ), 
    .COUT1(\Howdy/n2048 ), .COUT0(\Howdy/n3461 ));
  SLICE_16 SLICE_16( .DI1(\Howdy/n167[4] ), .DI0(\Howdy/n167[3] ), 
    .D1(\Howdy/n3374 ), .B1(\rowp[4] ), .D0(\Howdy/n2061 ), 
    .B0(\Howdy/rowp[3] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2061 ), 
    .CIN1(\Howdy/n3374 ), .Q0(\Howdy/rowp[3] ), .Q1(\rowp[4] ), 
    .F0(\Howdy/n167[3] ), .F1(\Howdy/n167[4] ), .COUT1(\Howdy/n2063 ), 
    .COUT0(\Howdy/n3374 ));
  SLICE_17 SLICE_17( .DI1(\Howdy/n133[20] ), .DI0(\Howdy/n133[19] ), 
    .D1(\Howdy/n3458 ), .C1(\Howdy/countc[20] ), .D0(\Howdy/n2044 ), 
    .C0(\Howdy/countc[19] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2044 ), .CIN1(\Howdy/n3458 ), .Q0(\Howdy/countc[19] ), 
    .Q1(\Howdy/countc[20] ), .F0(\Howdy/n133[19] ), .F1(\Howdy/n133[20] ), 
    .COUT1(\Howdy/n2046 ), .COUT0(\Howdy/n3458 ));
  SLICE_18 SLICE_18( .DI1(\Howdy/n167[2] ), .DI0(\Howdy/n167[1] ), 
    .D1(\Howdy/n3371 ), .B1(\Howdy/rowp[2] ), .D0(\Howdy/n2059 ), 
    .B0(\Howdy/rowp[1] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2059 ), 
    .CIN1(\Howdy/n3371 ), .Q0(\Howdy/rowp[1] ), .Q1(\Howdy/rowp[2] ), 
    .F0(\Howdy/n167[1] ), .F1(\Howdy/n167[2] ), .COUT1(\Howdy/n2061 ), 
    .COUT0(\Howdy/n3371 ));
  SLICE_19 SLICE_19( .DI0(\Howdy/n167[31] ), .D1(\Howdy/n3500 ), 
    .D0(\Howdy/n2089 ), .B0(\Howdy/countr[31] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2089 ), 
    .CIN1(\Howdy/n3500 ), .Q0(\Howdy/countr[31] ), .F0(\Howdy/n167[31] ), 
    .COUT0(\Howdy/n3500 ));
  SLICE_20 SLICE_20( .DI1(\Howdy/n167[0] ), .D1(\Howdy/n3368 ), .C1(VCC_net), 
    .B1(\Howdy/rowp[0] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN1(\Howdy/n3368 ), 
    .Q1(\Howdy/rowp[0] ), .F1(\Howdy/n167[0] ), .COUT1(\Howdy/n2059 ), 
    .COUT0(\Howdy/n3368 ));
  SLICE_21 SLICE_21( .DI1(\Howdy/n133[18] ), .DI0(\Howdy/n133[17] ), 
    .D1(\Howdy/n3455 ), .C1(\Howdy/countc[18] ), .D0(\Howdy/n2042 ), 
    .C0(\Howdy/countc[17] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2042 ), .CIN1(\Howdy/n3455 ), .Q0(\Howdy/countc[17] ), 
    .Q1(\Howdy/countc[18] ), .F0(\Howdy/n133[17] ), .F1(\Howdy/n133[18] ), 
    .COUT1(\Howdy/n2044 ), .COUT0(\Howdy/n3455 ));
  SLICE_22 SLICE_22( .DI1(\Howdy/n133[14] ), .DI0(\Howdy/n133[13] ), 
    .D1(\Howdy/n3449 ), .C1(\Howdy/countc[14] ), .D0(\Howdy/n2038 ), 
    .C0(\Howdy/countc[13] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2038 ), .CIN1(\Howdy/n3449 ), .Q0(\Howdy/countc[13] ), 
    .Q1(\Howdy/countc[14] ), .F0(\Howdy/n133[13] ), .F1(\Howdy/n133[14] ), 
    .COUT1(\Howdy/n2040 ), .COUT0(\Howdy/n3449 ));
  SLICE_23 SLICE_23( .DI1(\Howdy/n167[30] ), .DI0(\Howdy/n167[29] ), 
    .D1(\Howdy/n3497 ), .B1(\Howdy/countr[30] ), .D0(\Howdy/n2087 ), 
    .B0(\Howdy/countr[29] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2087 ), 
    .CIN1(\Howdy/n3497 ), .Q0(\Howdy/countr[29] ), .Q1(\Howdy/countr[30] ), 
    .F0(\Howdy/n167[29] ), .F1(\Howdy/n167[30] ), .COUT1(\Howdy/n2089 ), 
    .COUT0(\Howdy/n3497 ));
  SLICE_24 SLICE_24( .DI1(\Howdy/n167[28] ), .DI0(\Howdy/n167[27] ), 
    .D1(\Howdy/n3494 ), .B1(\Howdy/countr[28] ), .D0(\Howdy/n2085 ), 
    .B0(\Howdy/countr[27] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2085 ), 
    .CIN1(\Howdy/n3494 ), .Q0(\Howdy/countr[27] ), .Q1(\Howdy/countr[28] ), 
    .F0(\Howdy/n167[27] ), .F1(\Howdy/n167[28] ), .COUT1(\Howdy/n2087 ), 
    .COUT0(\Howdy/n3494 ));
  SLICE_25 SLICE_25( .DI1(\Howdy/n133[12] ), .DI0(\Howdy/n133[11] ), 
    .D1(\Howdy/n3446 ), .C1(\Howdy/countc[12] ), .D0(\Howdy/n2036 ), 
    .C0(\Howdy/countc[11] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2036 ), .CIN1(\Howdy/n3446 ), .Q0(\Howdy/countc[11] ), 
    .Q1(\Howdy/countc[12] ), .F0(\Howdy/n133[11] ), .F1(\Howdy/n133[12] ), 
    .COUT1(\Howdy/n2038 ), .COUT0(\Howdy/n3446 ));
  SLICE_26 SLICE_26( .DI0(\Howdy/n133[31] ), .D1(\Howdy/n3476 ), 
    .D0(\Howdy/n2056 ), .C0(\Howdy/countc[31] ), .LSR(\Howdy/row_9__N_189 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n2056 ), .CIN1(\Howdy/n3476 ), 
    .Q0(\Howdy/countc[31] ), .F0(\Howdy/n133[31] ), .COUT0(\Howdy/n3476 ));
  SLICE_27 SLICE_27( .DI1(\Howdy/n133[6] ), .DI0(\Howdy/n133[5] ), 
    .D1(\Howdy/n3437 ), .C1(\colp[6] ), .D0(\Howdy/n2030 ), .C0(\colp[5] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n2030 ), 
    .CIN1(\Howdy/n3437 ), .Q0(\colp[5] ), .Q1(\colp[6] ), .F0(\Howdy/n133[5] ), 
    .F1(\Howdy/n133[6] ), .COUT1(\Howdy/n2032 ), .COUT0(\Howdy/n3437 ));
  SLICE_28 SLICE_28( .DI1(\Howdy/n133[0] ), .D1(\Howdy/n3395 ), .C1(\colp[0] ), 
    .B1(VCC_net), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN1(\Howdy/n3395 ), .Q1(\colp[0] ), .F1(\Howdy/n133[0] ), 
    .COUT1(\Howdy/n2026 ), .COUT0(\Howdy/n3395 ));
  SLICE_29 SLICE_29( .DI1(\Howdy/n167[26] ), .DI0(\Howdy/n167[25] ), 
    .D1(\Howdy/n3491 ), .B1(\Howdy/countr[26] ), .D0(\Howdy/n2083 ), 
    .B0(\Howdy/countr[25] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2083 ), 
    .CIN1(\Howdy/n3491 ), .Q0(\Howdy/countr[25] ), .Q1(\Howdy/countr[26] ), 
    .F0(\Howdy/n167[25] ), .F1(\Howdy/n167[26] ), .COUT1(\Howdy/n2085 ), 
    .COUT0(\Howdy/n3491 ));
  SLICE_30 SLICE_30( .DI1(\Howdy/n167[24] ), .DI0(\Howdy/n167[23] ), 
    .D1(\Howdy/n3488 ), .B1(\Howdy/countr[24] ), .D0(\Howdy/n2081 ), 
    .B0(\Howdy/countr[23] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2081 ), 
    .CIN1(\Howdy/n3488 ), .Q0(\Howdy/countr[23] ), .Q1(\Howdy/countr[24] ), 
    .F0(\Howdy/n167[23] ), .F1(\Howdy/n167[24] ), .COUT1(\Howdy/n2083 ), 
    .COUT0(\Howdy/n3488 ));
  SLICE_31 SLICE_31( .DI1(\Howdy/n167[22] ), .DI0(\Howdy/n167[21] ), 
    .D1(\Howdy/n3485 ), .B1(\Howdy/countr[22] ), .D0(\Howdy/n2079 ), 
    .B0(\Howdy/countr[21] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2079 ), 
    .CIN1(\Howdy/n3485 ), .Q0(\Howdy/countr[21] ), .Q1(\Howdy/countr[22] ), 
    .F0(\Howdy/n167[21] ), .F1(\Howdy/n167[22] ), .COUT1(\Howdy/n2081 ), 
    .COUT0(\Howdy/n3485 ));
  SLICE_32 SLICE_32( .DI1(\Howdy/n133[16] ), .DI0(\Howdy/n133[15] ), 
    .D1(\Howdy/n3452 ), .C1(\Howdy/countc[16] ), .D0(\Howdy/n2040 ), 
    .C0(\Howdy/countc[15] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2040 ), .CIN1(\Howdy/n3452 ), .Q0(\Howdy/countc[15] ), 
    .Q1(\Howdy/countc[16] ), .F0(\Howdy/n133[15] ), .F1(\Howdy/n133[16] ), 
    .COUT1(\Howdy/n2042 ), .COUT0(\Howdy/n3452 ));
  SLICE_33 SLICE_33( .DI1(\Howdy/n133[10] ), .DI0(\Howdy/n133[9] ), 
    .D1(\Howdy/n3443 ), .C1(\Howdy/countc[10] ), .D0(\Howdy/n2034 ), 
    .C0(\colp[9] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2034 ), .CIN1(\Howdy/n3443 ), .Q0(\colp[9] ), 
    .Q1(\Howdy/countc[10] ), .F0(\Howdy/n133[9] ), .F1(\Howdy/n133[10] ), 
    .COUT1(\Howdy/n2036 ), .COUT0(\Howdy/n3443 ));
  SLICE_34 SLICE_34( .DI1(\Howdy/n167[20] ), .DI0(\Howdy/n167[19] ), 
    .D1(\Howdy/n3482 ), .B1(\Howdy/countr[20] ), .D0(\Howdy/n2077 ), 
    .B0(\Howdy/countr[19] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2077 ), 
    .CIN1(\Howdy/n3482 ), .Q0(\Howdy/countr[19] ), .Q1(\Howdy/countr[20] ), 
    .F0(\Howdy/n167[19] ), .F1(\Howdy/n167[20] ), .COUT1(\Howdy/n2079 ), 
    .COUT0(\Howdy/n3482 ));
  SLICE_35 SLICE_35( .DI1(\Howdy/n133[30] ), .DI0(\Howdy/n133[29] ), 
    .D1(\Howdy/n3473 ), .C1(\Howdy/countc[30] ), .D0(\Howdy/n2054 ), 
    .C0(\Howdy/countc[29] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2054 ), .CIN1(\Howdy/n3473 ), .Q0(\Howdy/countc[29] ), 
    .Q1(\Howdy/countc[30] ), .F0(\Howdy/n133[29] ), .F1(\Howdy/n133[30] ), 
    .COUT1(\Howdy/n2056 ), .COUT0(\Howdy/n3473 ));
  SLICE_36 SLICE_36( .DI1(\Howdy/n167[18] ), .DI0(\Howdy/n167[17] ), 
    .D1(\Howdy/n3479 ), .B1(\Howdy/countr[18] ), .D0(\Howdy/n2075 ), 
    .B0(\Howdy/countr[17] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2075 ), 
    .CIN1(\Howdy/n3479 ), .Q0(\Howdy/countr[17] ), .Q1(\Howdy/countr[18] ), 
    .F0(\Howdy/n167[17] ), .F1(\Howdy/n167[18] ), .COUT1(\Howdy/n2077 ), 
    .COUT0(\Howdy/n3479 ));
  SLICE_37 SLICE_37( .DI1(\Howdy/n167[16] ), .DI0(\Howdy/n167[15] ), 
    .D1(\Howdy/n3392 ), .B1(\Howdy/countr[16] ), .D0(\Howdy/n2073 ), 
    .B0(\Howdy/countr[15] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2073 ), 
    .CIN1(\Howdy/n3392 ), .Q0(\Howdy/countr[15] ), .Q1(\Howdy/countr[16] ), 
    .F0(\Howdy/n167[15] ), .F1(\Howdy/n167[16] ), .COUT1(\Howdy/n2075 ), 
    .COUT0(\Howdy/n3392 ));
  SLICE_38 SLICE_38( .DI1(\Howdy/n133[28] ), .DI0(\Howdy/n133[27] ), 
    .D1(\Howdy/n3470 ), .C1(\Howdy/countc[28] ), .D0(\Howdy/n2052 ), 
    .C0(\Howdy/countc[27] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n2052 ), .CIN1(\Howdy/n3470 ), .Q0(\Howdy/countc[27] ), 
    .Q1(\Howdy/countc[28] ), .F0(\Howdy/n133[27] ), .F1(\Howdy/n133[28] ), 
    .COUT1(\Howdy/n2054 ), .COUT0(\Howdy/n3470 ));
  SLICE_39 SLICE_39( .DI1(\Howdy/n167[14] ), .DI0(\Howdy/n167[13] ), 
    .D1(\Howdy/n3389 ), .B1(\Howdy/countr[14] ), .D0(\Howdy/n2071 ), 
    .B0(\Howdy/countr[13] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2071 ), 
    .CIN1(\Howdy/n3389 ), .Q0(\Howdy/countr[13] ), .Q1(\Howdy/countr[14] ), 
    .F0(\Howdy/n167[13] ), .F1(\Howdy/n167[14] ), .COUT1(\Howdy/n2073 ), 
    .COUT0(\Howdy/n3389 ));
  SLICE_40 SLICE_40( .DI1(\Howdy/n167[12] ), .DI0(\Howdy/n167[11] ), 
    .D1(\Howdy/n3386 ), .B1(\Howdy/countr[12] ), .D0(\Howdy/n2069 ), 
    .B0(\Howdy/countr[11] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2069 ), 
    .CIN1(\Howdy/n3386 ), .Q0(\Howdy/countr[11] ), .Q1(\Howdy/countr[12] ), 
    .F0(\Howdy/n167[11] ), .F1(\Howdy/n167[12] ), .COUT1(\Howdy/n2071 ), 
    .COUT0(\Howdy/n3386 ));
  SLICE_41 SLICE_41( .DI1(\Howdy/n167[10] ), .DI0(\Howdy/n167[9] ), 
    .D1(\Howdy/n3383 ), .B1(\Howdy/countr[10] ), .D0(\Howdy/n2067 ), 
    .B0(\rowp[9] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n2067 ), .CIN1(\Howdy/n3383 ), 
    .Q0(\rowp[9] ), .Q1(\Howdy/countr[10] ), .F0(\Howdy/n167[9] ), 
    .F1(\Howdy/n167[10] ), .COUT1(\Howdy/n2069 ), .COUT0(\Howdy/n3383 ));
  SLICE_42 SLICE_42( .DI1(\Howdy/n167[8] ), .DI0(\Howdy/n167[7] ), 
    .D1(\Howdy/n3380 ), .B1(\Howdy/rowp[8] ), .D0(\Howdy/n2065 ), 
    .B0(\Howdy/rowp[7] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n2065 ), 
    .CIN1(\Howdy/n3380 ), .Q0(\Howdy/rowp[7] ), .Q1(\Howdy/rowp[8] ), 
    .F0(\Howdy/n167[7] ), .F1(\Howdy/n167[8] ), .COUT1(\Howdy/n2067 ), 
    .COUT0(\Howdy/n3380 ));
  SLICE_43 SLICE_43( .DI1(\Howdy/n167[6] ), .DI0(\Howdy/n167[5] ), 
    .D1(\Howdy/n3377 ), .B1(\Howdy/rowp[6] ), .D0(\Howdy/n2063 ), 
    .B0(\rowp[5] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n2063 ), .CIN1(\Howdy/n3377 ), 
    .Q0(\rowp[5] ), .Q1(\Howdy/rowp[6] ), .F0(\Howdy/n167[5] ), 
    .F1(\Howdy/n167[6] ), .COUT1(\Howdy/n2065 ), .COUT0(\Howdy/n3377 ));
  SLICE_44 SLICE_44( .DI1(\Howdy/n133[2] ), .DI0(\Howdy/n133[1] ), 
    .D1(\Howdy/n3431 ), .C1(\colp[2] ), .D0(\Howdy/n2026 ), .C0(\colp[1] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n2026 ), 
    .CIN1(\Howdy/n3431 ), .Q0(\colp[1] ), .Q1(\colp[2] ), .F0(\Howdy/n133[1] ), 
    .F1(\Howdy/n133[2] ), .COUT1(\Howdy/n2028 ), .COUT0(\Howdy/n3431 ));
  SLICE_46 SLICE_46( .DI1(\GAMER/posxout_31__N_235[2] ), 
    .DI0(\GAMER/posxout_31__N_235[1]$n0 ), .C1(\button_sig[7] ), 
    .B1(\button_sig[6] ), .A1(\GAMER/n1221 ), .D0(\button_sig[7] ), 
    .C0(\button_sig[6] ), .B0(\GAMER/n1221 ), .CLK(pll_clock), 
    .Q0(\rgb_5__N_436[1] ), .Q1(\rgb_5__N_436[3] ), 
    .F0(\GAMER/posxout_31__N_235[1]$n0 ), .F1(\GAMER/posxout_31__N_235[2] ));
  SLICE_48 SLICE_48( .DI1(\NES/count[18]/sig_001/FeedThruLUT ), 
    .DI0(\NES/count[19]/sig_000/FeedThruLUT ), .D1(\NES/count[18] ), 
    .A0(\NES/count[19] ), .CLK(pll_clock), .Q0(\NES/NEScount[9] ), 
    .Q1(\NES/NEScount[8] ), .F0(\NES/count[19]/sig_000/FeedThruLUT ), 
    .F1(\NES/count[18]/sig_001/FeedThruLUT ));
  SLICE_50 SLICE_50( .DI1(\NES/count[16]/sig_003/FeedThruLUT ), 
    .DI0(\NES/count[17]/sig_002/FeedThruLUT ), .C1(\NES/count[16] ), 
    .D0(\NES/count[17] ), .CLK(pll_clock), .Q0(\NES/NEScount[7] ), 
    .Q1(\NES/NEScount[6] ), .F0(\NES/count[17]/sig_002/FeedThruLUT ), 
    .F1(\NES/count[16]/sig_003/FeedThruLUT ));
  SLICE_52 SLICE_52( .DI1(\NES/count[14]/sig_005/FeedThruLUT ), 
    .DI0(\NES/count[15]/sig_004/FeedThruLUT ), .A1(\NES/count[14] ), 
    .A0(\NES/count[15] ), .CLK(pll_clock), .Q0(\NES/NEScount[5] ), 
    .Q1(\NES/NEScount[4] ), .F0(\NES/count[15]/sig_004/FeedThruLUT ), 
    .F1(\NES/count[14]/sig_005/FeedThruLUT ));
  SLICE_54 SLICE_54( .DI1(\NES/count[12]/sig_007/FeedThruLUT ), 
    .DI0(\NES/count[13]/sig_006/FeedThruLUT ), .A1(\NES/count[12] ), 
    .D0(\NES/count[13] ), .CLK(pll_clock), .Q0(\NES/NEScount[3] ), 
    .Q1(\NES/NEScount[2] ), .F0(\NES/count[13]/sig_006/FeedThruLUT ), 
    .F1(\NES/count[12]/sig_007/FeedThruLUT ));
  SLICE_56 SLICE_56( .DI1(n1261), .DI0(n1268), .D1(n19), .C1(control_c), 
    .B1(\button_sig[0] ), .D0(n21), .C0(\button_sig[1] ), .B0(control_c), 
    .A0(n19), .CLK(NESclk_c), .Q0(\button_sig[1] ), .Q1(\button_sig[0] ), 
    .F0(n1268), .F1(n1261));
  SLICE_57 SLICE_57( .DI1(n1262), .DI0(n1267), .D1(\button_sig[3] ), .C1(n4), 
    .B1(n2697), .A1(control_c), .D0(\button_sig[2] ), .C0(n1672), 
    .B0(control_c), .A0(n1208), .CLK(NESclk_c), .Q0(\button_sig[2] ), 
    .Q1(\button_sig[3] ), .F0(n1267), .F1(n1262));
  SLICE_58 SLICE_58( .DI1(n1263), .DI0(n1266), .D1(\button_sig[5] ), 
    .C1(control_c), .B1(n1204), .A1(n11), .D0(n11_adj_488), 
    .C0(\button_sig[4] ), .B0(control_c), .A0(n12), .CLK(NESclk_c), 
    .Q0(\button_sig[4] ), .Q1(\button_sig[5] ), .F0(n1266), .F1(n1263));
  SLICE_59 SLICE_59( .DI1(n1264), .DI0(n1265), .D1(n1672), .C1(control_c), 
    .B1(n1204), .A1(\button_sig[6] ), .D0(control_c), .C0(\button_sig[7] ), 
    .B0(n2724), .A0(n2705), .CLK(NESclk_c), .Q0(\button_sig[7] ), 
    .Q1(\button_sig[6] ), .F0(n1265), .F1(n1264));
  SLICE_64 SLICE_64( .DI1(\NES/count[10]/sig_009/FeedThruLUT ), 
    .DI0(\NES/count[11]/sig_008/FeedThruLUT ), .D1(\NES/count[10] ), 
    .B0(\NES/count[11] ), .CLK(pll_clock), .Q0(\NES/NEScount[1] ), 
    .Q1(\NES/NEScount[0] ), .F0(\NES/count[11]/sig_008/FeedThruLUT ), 
    .F1(\NES/count[10]/sig_009/FeedThruLUT ));
  SLICE_66 SLICE_66( .DI0(\NES/count[9]/sig_010/FeedThruLUT ), 
    .D0(\NES/count[9] ), .CLK(pll_clock), .Q0(\NES/NESclk ), 
    .F0(\NES/count[9]/sig_010/FeedThruLUT ));
  SLICE_70 SLICE_70( .D1(\NES/NEScount[1] ), .C1(n1208), 
    .B1(\NES/NEScount[0] ), .D0(\NES/NEScount[2] ), .C0(\NES/n18 ), 
    .B0(\NES/NEScount[3] ), .A0(\NES/NEScount[4] ), .F0(n1208), .F1(n21));
  SLICE_71 SLICE_71( .D0(n21), .C0(\NES/n2728 ), .B0(\NES/NEScount[8] ), 
    .A0(\NES/NEScount[0] ), .F0(n4));
  SLICE_72 SLICE_72( .D1(\Hola/n7 ), .C1(n16), .B1(\colp[8] ), .A1(\Hola/n9 ), 
    .D0(\rgb_5__N_436[3] ), .C0(n12_adj_491), .B0(\colp[7] ), .A0(\colp[6] ), 
    .F0(n16), .F1(rgbT_c));
  SLICE_73 SLICE_73( .D1(\colp[2] ), .C1(n4_adj_490), .B1(n2539), 
    .A1(\rgb_5__N_436[3] ), .D0(\colp[1] ), .C0(\rgb_5__N_436[1] ), 
    .B0(\colp[0] ), .A0(\rgb_5__N_436[0] ), .F0(n4_adj_490), .F1(n12_adj_491));
  SLICE_74 SLICE_74( .D1(\Howdy/n1450 ), .C1(\Howdy/n2871 ), .B1(\colp[7] ), 
    .A1(\colp[0] ), .D0(\colp[6] ), .C0(\Howdy/n1450 ), .B0(\Howdy/n141 ), 
    .A0(\colp[5] ), .F0(\Howdy/n2871 ), .F1(\Howdy/n7 ));
  SLICE_76 SLICE_76( .DI1(\GAMER/posxout_31__N_267[0] ), .D1(\button_sig[7] ), 
    .B1(\button_sig[6] ), .A1(\GAMER/n1221 ), .C0(\GAMER/n1221 ), 
    .B0(\button_sig[7] ), .A0(\button_sig[6] ), 
    .LSR(\GAMER/posxout_31__N_235[1] ), .CLK(pll_clock), 
    .Q1(\rgb_5__N_436[0] ), .F0(\GAMER/posxout_31__N_235[1] ), 
    .F1(\GAMER/posxout_31__N_267[0] ));
  SLICE_77 SLICE_77( .D1(\button_sig[2] ), .C1(\GAMER/n10 ), 
    .A1(\button_sig[3] ), .D0(\button_sig[1] ), .C0(\button_sig[5] ), 
    .B0(\button_sig[4] ), .A0(\button_sig[0] ), .F0(\GAMER/n10 ), 
    .F1(\GAMER/n1221 ));
  SLICE_78 SLICE_78( .D1(\NES/NEScount[7] ), .C1(\NES/n20 ), 
    .B1(\NES/NEScount[6] ), .D0(\NES/NEScount[5] ), .C0(\NES/NEScount[8] ), 
    .A0(\NES/NEScount[9] ), .F0(\NES/n20 ), .F1(\NES/n18 ));
  SLICE_79 SLICE_79( .D1(CNTclk_N_89), .C1(\NES/n1230 ), .B1(\NES/n9 ), 
    .A1(\NES/NESclk ), .D0(\NES/NEScount[7] ), .C0(\NES/NEScount[4] ), 
    .B0(\NES/NEScount[6] ), .A0(\NES/n20 ), .F0(\NES/n1230 ), .F1(NESclk_c));
  SLICE_80 SLICE_80( .D1(\NES/NEScount[5] ), .C1(\NES/n12_c ), 
    .B1(\NES/NEScount[2] ), .A1(\NES/NEScount[9] ), .D0(\NES/NEScount[3] ), 
    .A0(\NES/NEScount[4] ), .F0(\NES/n12_c ), .F1(\NES/n2728 ));
  SLICE_82 SLICE_82( .D1(\NES/n12_c ), .C1(n19), .B1(\NES/NEScount[2] ), 
    .A1(\NES/n18 ), .C0(\NES/NEScount[1] ), .B0(n1208), .A0(\NES/NEScount[0] ), 
    .F0(n19), .F1(n1204));
  SLICE_84 SLICE_84( .C1(n2697), .B1(\NES/NEScount[0] ), .A1(n1208), 
    .C0(\NES/NEScount[6] ), .B0(\NES/NEScount[7] ), .A0(\NES/NEScount[1] ), 
    .F0(n2697), .F1(n11_adj_488));
  SLICE_87 SLICE_87( .D1(\NES/NEScount[2] ), .C1(\NES/NEScount[3] ), 
    .B1(\NES/NEScount[0] ), .A1(\NES/NEScount[1] ), .D0(\NES/NEScount[3] ), 
    .C0(\NES/NEScount[2] ), .B0(\NES/n18 ), .A0(\NES/NEScount[0] ), .F0(n2724), 
    .F1(\NES/n9 ));
  SLICE_88 SLICE_88( .D1(\NES/count[18] ), .C1(\NES/n32 ), .B1(\NES/count[6] ), 
    .A1(\NES/n22 ), .D0(\NES/count[16] ), .C0(\NES/count[1] ), 
    .B0(\NES/count[13] ), .A0(\NES/count[19] ), .F0(\NES/n32 ), .F1(\NES/n36 ));
  SLICE_91 SLICE_91( .C1(\NES/NEScount[4] ), .A1(\NES/NEScount[1] ), 
    .D0(\NES/NEScount[1] ), .C0(n1208), .A0(\NES/NEScount[0] ), 
    .F0(CNTclk_N_89), .F1(n2705));
  SLICE_92 SLICE_92( .D1(\NES/n34 ), .C1(\NES/n33 ), .B1(\NES/n36 ), 
    .A1(\NES/n35 ), .D0(\NES/count[0] ), .C0(\NES/count[10] ), 
    .B0(\NES/count[3] ), .A0(\NES/count[9] ), .F0(\NES/n33 ), .F1(\NES/n1260 ));
  SLICE_93 SLICE_93( .C1(\NES/count[14] ), .B1(\NES/count[7] ), 
    .D0(\NES/count[11] ), .C0(\NES/count[5] ), .B0(\NES/count[8] ), 
    .A0(\NES/count[17] ), .F0(\NES/n34 ), .F1(\NES/n22 ));
  SLICE_94 SLICE_94( .D1(\rgb_5__N_436[3] ), .C1(n4_adj_489), .B1(\colp[3] ), 
    .A1(\colp[2] ), .D0(\colp[0] ), .C0(\rgb_5__N_436[1] ), 
    .B0(\rgb_5__N_436[0] ), .A0(\colp[1] ), .F0(n4_adj_489), .F1(n8));
  SLICE_95 SLICE_95( .D1(\colp[4] ), .C1(\colp[3] ), .B1(\rgb_5__N_436[3] ), 
    .A1(\colp[5] ), .D0(n1184), .C0(n8), .B0(validp), .A0(\colp[4] ), 
    .F0(\Hola/n9 ), .F1(n2539));
  SLICE_97 SLICE_97( .D1(\rowp[4] ), .C1(\Hola/n2726 ), .B1(\Howdy/rowp[2] ), 
    .A1(\Howdy/rowp[3] ), .D0(\rowp[5] ), .C0(n1603), .B0(\colp[9] ), 
    .A0(\rowp[9] ), .F0(\Hola/n2726 ), .F1(\Hola/n7 ));
  SLICE_99 SLICE_99( .D1(n50), .C1(n1603), .B1(\rowp[5] ), .A1(\rowp[4] ), 
    .D0(\Howdy/rowp[8] ), .B0(\Howdy/rowp[7] ), .A0(\Howdy/rowp[6] ), 
    .F0(n1603), .F1(\Howdy/n63 ));
  SLICE_100 SLICE_100( .C1(\Howdy/n141 ), .B1(\colp[4] ), .A1(\colp[0] ), 
    .D0(\colp[2] ), .C0(\colp[1] ), .B0(\colp[3] ), .F0(\Howdy/n141 ), 
    .F1(\Howdy/n2407 ));
  SLICE_102 SLICE_102( .C1(\Howdy/n62 ), .A1(\Howdy/countc[31] ), .D0(n1184), 
    .C0(\Howdy/n2395 ), .B0(\Howdy/n2550 ), .A0(\Howdy/n1218 ), 
    .F0(\Howdy/n62 ), .F1(\Howdy/row_9__N_189 ));
  SLICE_103 SLICE_103( .D1(\Howdy/countc[31] ), .C1(\Howdy/n56 ), 
    .B1(\Howdy/countr[31] ), .A1(\Howdy/n62 ), .D0(\rowp[9] ), 
    .C0(\Howdy/n2405 ), .B0(\Howdy/n1599 ), .F0(\Howdy/n56 ), 
    .F1(\Howdy/row_9__N_187 ));
  SLICE_104 SLICE_104( .C1(\Howdy/n1218 ), .B1(\colp[8] ), .A1(\colp[9] ), 
    .D0(\Howdy/n37 ), .C0(\Howdy/n38 ), .B0(\Howdy/n35 ), .A0(\Howdy/n36 ), 
    .F0(\Howdy/n1218 ), .F1(\Howdy/n1450 ));
  SLICE_105 SLICE_105( .D1(\Howdy/countc[31] ), .C1(\Howdy/n2874 ), 
    .B1(\Howdy/n7 ), .A1(\colp[4] ), .D0(\colp[6] ), .C0(\colp[5] ), 
    .B0(\colp[7] ), .A0(\Howdy/n1450 ), .F0(\Howdy/n2874 ), .F1(\Howdy/n5 ));
  SLICE_106 SLICE_106( .C1(\Howdy/n1193 ), .B1(\colp[4] ), .A1(\colp[0] ), 
    .D0(\colp[1] ), .C0(\colp[2] ), .B0(\colp[3] ), .F0(\Howdy/n1193 ), 
    .F1(\Howdy/n2395 ));
  SLICE_109 SLICE_109( .D1(\Howdy/n2408 ), .C1(\Howdy/n2550 ), 
    .B1(\Howdy/n1218 ), .A1(\Howdy/countr[31] ), .D0(\colp[8] ), 
    .C0(\colp[9] ), .F0(\Howdy/n2550 ), .F1(\Howdy/n2713 ));
  SLICE_110 SLICE_110( .D1(\Howdy/countc[22] ), .C1(\Howdy/n22 ), 
    .B1(\Howdy/countc[26] ), .A1(\Howdy/countc[30] ), .C0(\Howdy/countc[20] ), 
    .B0(\Howdy/countc[12] ), .F0(\Howdy/n22 ), .F1(\Howdy/n37 ));
  SLICE_112 SLICE_112( .D1(\Howdy/countc[18] ), .C1(\Howdy/n34 ), 
    .B1(\Howdy/countc[16] ), .A1(\Howdy/n24 ), .D0(\Howdy/countc[14] ), 
    .C0(\Howdy/countc[11] ), .B0(\Howdy/countc[10] ), .A0(\Howdy/countc[15] ), 
    .F0(\Howdy/n34 ), .F1(\Howdy/n38 ));
  SLICE_113 SLICE_113( .C0(\Howdy/countc[19] ), .A0(\Howdy/countc[29] ), 
    .F0(\Howdy/n24 ));
  SLICE_114 SLICE_114( .D1(\colp[4] ), .C1(n1184), .B1(\Howdy/n1193 ), 
    .A1(\colp[0] ), .C0(\colp[7] ), .B0(\colp[6] ), .A0(\colp[5] ), .F0(n1184), 
    .F1(\Howdy/n2408 ));
  SLICE_116 SLICE_116( .D1(\Howdy/countr[31] ), .C1(\Howdy/n1599 ), 
    .B1(\Howdy/n2405 ), .A1(\rowp[9] ), .D0(\Howdy/n36_adj_479 ), 
    .C0(\Howdy/n38_adj_480 ), .B0(\Howdy/n37_adj_478 ), 
    .A0(\Howdy/n35_adj_477 ), .F0(\Howdy/n1599 ), .F1(\Howdy/n970 ));
  SLICE_117 SLICE_117( .D1(\Howdy/rowp[3] ), .C1(\Howdy/n58 ), 
    .B1(\Howdy/rowp[2] ), .A1(\rowp[5] ), .D0(\Howdy/rowp[8] ), 
    .C0(\Howdy/rowp[6] ), .B0(\Howdy/rowp[7] ), .A0(\rowp[4] ), 
    .F0(\Howdy/n58 ), .F1(\Howdy/n2405 ));
  SLICE_118 SLICE_118( .D1(\Howdy/countr[31] ), .C1(\Howdy/n65 ), 
    .B1(\Howdy/n1599 ), .A1(\rowp[9] ), .D0(\Howdy/rowp[1] ), .C0(\Howdy/n63 ), 
    .F0(\Howdy/n65 ), .F1(\Howdy/n25 ));
  SLICE_122 SLICE_122( .D1(\Howdy/countr[30] ), .C1(\Howdy/n22_adj_482 ), 
    .B1(\Howdy/countr[13] ), .A1(\Howdy/countr[22] ), .D0(\Howdy/countr[17] ), 
    .B0(\Howdy/countr[12] ), .F0(\Howdy/n22_adj_482 ), 
    .F1(\Howdy/n37_adj_478 ));
  SLICE_124 SLICE_124( .C0(\Howdy/rowp[3] ), .A0(\Howdy/rowp[2] ), .F0(n50));
  SLICE_125 SLICE_125( .DI1(\Howdy/valid_N_229 ), .D1(\Howdy/n5 ), 
    .C1(\Howdy/n1627 ), .B1(\Howdy/n53 ), .A1(\Howdy/n2713 ), .D0(\rowp[5] ), 
    .C0(n1603), .B0(n50), .A0(\rowp[4] ), .LSR(\Howdy/n25 ), .CLK(pll_clock), 
    .Q1(validp), .F0(\Howdy/n1627 ), .F1(\Howdy/valid_N_229 ));
  SLICE_126 SLICE_126( .D1(\Howdy/n24_adj_484 ), .C1(\Howdy/n34_adj_483 ), 
    .B1(\Howdy/countr[29] ), .A1(\Howdy/countr[16] ), .D0(\Howdy/countr[18] ), 
    .C0(\Howdy/countr[25] ), .B0(\Howdy/countr[20] ), .A0(\Howdy/countr[15] ), 
    .F0(\Howdy/n34_adj_483 ), .F1(\Howdy/n38_adj_480 ));
  SLICE_127 SLICE_127( .C0(\Howdy/countr[11] ), .A0(\Howdy/countr[10] ), 
    .F0(\Howdy/n24_adj_484 ));
  SLICE_131 SLICE_131( .D0(\NES/NEScount[3] ), .C0(\NES/n20 ), 
    .B0(\NES/NEScount[2] ), .A0(\NES/NEScount[4] ), .F0(n12));
  SLICE_132 SLICE_132( .D0(\Howdy/countr[23] ), .C0(\Howdy/countr[26] ), 
    .B0(\Howdy/countr[24] ), .A0(\Howdy/countr[19] ), .F0(\Howdy/n36_adj_479 ));
  SLICE_134 SLICE_134( .D0(\Howdy/countr[14] ), .C0(\Howdy/countr[27] ), 
    .B0(\Howdy/countr[28] ), .A0(\Howdy/countr[21] ), .F0(\Howdy/n35_adj_477 ));
  SLICE_135 SLICE_135( .DI1(\Howdy/n2406 ), .D1(\Howdy/rowp[1] ), 
    .C1(\Howdy/n53 ), .B1(\Howdy/n63 ), .A1(\Howdy/rowp[0] ), .D0(\rowp[9] ), 
    .A0(\Howdy/n1599 ), .LSR(\Howdy/n970 ), .CLK(pll_clock), .Q1(VSYNC_c), 
    .F0(\Howdy/n53 ), .F1(\Howdy/n2406 ));
  SLICE_136 SLICE_136( .D0(\Howdy/countc[13] ), .C0(\Howdy/countc[23] ), 
    .B0(\Howdy/countc[21] ), .A0(\Howdy/countc[24] ), .F0(\Howdy/n36 ));
  SLICE_137 SLICE_137( .D0(\Howdy/countc[17] ), .C0(\Howdy/countc[28] ), 
    .B0(\Howdy/countc[25] ), .A0(\Howdy/countc[27] ), .F0(\Howdy/n35 ));
  SLICE_138 SLICE_138( .D0(\NES/count[2] ), .C0(\NES/count[4] ), 
    .B0(\NES/count[12] ), .A0(\NES/count[15] ), .F0(\NES/n35 ));
  SLICE_142 SLICE_142( .B0(\Howdy/countc[31] ), .A0(\Howdy/n62 ), 
    .F0(\Howdy/n991 ));
  SLICE_144 SLICE_144( .F0(VCC_net));
  SLICE_148 SLICE_148( .D1(\NES/NEScount[0] ), .A1(\NES/NEScount[1] ), 
    .B0(\NES/NEScount[1] ), .A0(\NES/NEScount[0] ), .F0(n11), .F1(n1672));
  SLICE_152 SLICE_152( .DI1(\Howdy/n1179 ), .D1(\Howdy/n2407 ), 
    .C1(\Howdy/n4 ), .B1(\Howdy/n1450 ), .A1(\colp[7] ), .D0(\colp[5] ), 
    .B0(\colp[6] ), .LSR(\Howdy/n991 ), .CLK(pll_clock), .Q1(HSYNC_c), 
    .F0(\Howdy/n4 ), .F1(\Howdy/n1179 ));
  Hello_lscc_pll_inst_u_PLL_B \Hello.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk), .FEEDBACK(\Hello/lscc_pll_inst/feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\Hello/lscc_pll_inst/feedback_w ), 
    .OUTGLOBAL(pll_clock));
  Hi Hi( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  control control_I( .PADDI(control_c), .control(control));
  NESclk NESclk_I( .PADDO(NESclk_c), .NESclk(NESclk));
  latch latch_I( .PADDO(CNTclk_N_89), .latch(latch));
  rgbT_0_ \rgbT[0]_I ( .PADDO(rgbT_c), .rgbT0(rgbT[0]));
  rgbT_1_ \rgbT[1]_I ( .PADDO(rgbT_c), .rgbT1(rgbT[1]));
  rgbT_2_ \rgbT[2]_I ( .PADDO(rgbT_c), .rgbT2(rgbT[2]));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
  VSYNC VSYNC_I( .PADDO(VSYNC_c), .VSYNC(VSYNC));
  rgbT_5_ \rgbT[5]_I ( .PADDO(rgbT_c), .rgbT5(rgbT[5]));
  rgbT_4_ \rgbT[4]_I ( .PADDO(rgbT_c), .rgbT4(rgbT[4]));
  rgbT_3_ \rgbT[3]_I ( .PADDO(rgbT_c), .rgbT3(rgbT[3]));
endmodule

module SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_124_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_124_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_124_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_124__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_124__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_16 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_17 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_18 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_19 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i32 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_20 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countr__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_21 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_22 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_23 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i30 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i31 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_24 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i28 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i29 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_26 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_28 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_29 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i26 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i27 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_30 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i25 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_31 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_32 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_33 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i21 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_35 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_36 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i19 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_37 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i17 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_38 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_39 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i15 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_40 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i13 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_41 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_42 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_43 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_125_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_125__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_125__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_46 ( input DI1, DI0, C1, B1, A1, D0, C0, B0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \GAMER/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_46_K0( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \GAMER/posxout_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \GAMER/posxout_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x0030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_48 ( input DI1, DI0, D1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_48_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_48_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_50 ( input DI1, DI0, C1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 SLICE_50_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 SLICE_50_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_52 ( input DI1, DI0, A1, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_52_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 SLICE_52_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_54 ( input DI1, DI0, A1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40006 SLICE_54_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 SLICE_54_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_56 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 i932_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i939_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/button_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xF072") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_57 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40009 i933_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 i938_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xDF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xBF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_58 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40011 i934_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 i937_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xEF01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x72F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_59 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40013 i935_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 i936_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x8BAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xE0F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_64 ( input DI1, DI0, D1, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 SLICE_64_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 SLICE_64_K0( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_66 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40005 SLICE_66_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/NESclk_68 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \NES/i1_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \NES/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_71 ( input D0, C0, B0, A0, output F0 );

  lut40018 \NES/i1_4_lut_adj_60 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40019 \Hola/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 i1353_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x3110") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40021 i682_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 LessThan_115_i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x5475") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x20F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40023 \Howdy/i15_4_lut_adj_38 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 \Howdy/i2285_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFBC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_76 ( input DI1, D1, B1, A1, C0, B0, A0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40025 \GAMER/i2387_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \GAMER/i473_1_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20027 \GAMER/posxout_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x1100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x0202") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20027 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_77 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40028 \GAMER/i5_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \GAMER/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_78 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 \NES/i4_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 \NES/i2_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40032 \NES/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \NES.i1_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0002") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40034 \NES/i2176_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \NES/i1_2_lut_adj_59 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40036 \NES/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 \NES/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40038 \NES/i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 \NES/i2146_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x0808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_87 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40040 \NES/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 \NES/i2172_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40042 \NES/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \NES/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_91 ( input C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \NES/i2154_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \NES/i2385_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x0005") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_92 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40046 \NES/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \NES/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_93 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \NES/i2_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \NES/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xC0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_94 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40050 LessThan_118_i8_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 LessThan_118_i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xC8EC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x2B0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_95 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \Hola/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xCC80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40054 \Hola.i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \Hola/i2174_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x010F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \Howdy/i3_4_lut_adj_54 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \Howdy/i2_3_lut_adj_47 ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_100 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40058 \Howdy/i2_3_lut_adj_33 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Howdy/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_102 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40060 \Howdy/i1345_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \Howdy/i1_4_lut_adj_32 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_103 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40062 \Howdy.i2_3_lut_adj_55 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \Howdy/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xFCCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_104 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 \Howdy/i2_3_lut_adj_34 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \Howdy/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40066 \Howdy/i1_4_lut_adj_36 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \Howdy/i2287_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x00D8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_106 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40068 \Howdy/i2_3_lut_adj_35 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \Howdy/i2_3_lut_adj_43 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x8080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40070 \Howdy/i2162_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \Howdy/i1_2_lut_adj_39 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_110 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40072 \Howdy/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \Howdy/i1_2_lut_adj_37 ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_112 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40074 \Howdy/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \Howdy/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_113 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40076 \Howdy/i3_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_114 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40077 \Howdy/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 \Howdy/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_116 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 \Howdy/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \Howdy/i20_4_lut_adj_42 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40081 \Howdy/i2_4_lut_adj_58 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \Howdy.i1_2_lut_adj_44 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_118 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40083 \Howdy/i1_4_lut_adj_40 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 \Howdy/i1_2_lut_adj_41 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0x00EC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_122 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40085 \Howdy/i16_4_lut_adj_46 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 \Howdy/i1_2_lut_adj_53 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40076 \Howdy/i1_2_lut_adj_48 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_125 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40087 \Howdy/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 \Howdy/i1301_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Howdy/valid_41 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0x5400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xFEF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40089 \Howdy/i17_4_lut_adj_52 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 \Howdy/i13_4_lut_adj_56 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_127 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40091 \Howdy/i3_2_lut_adj_57 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_131 ( input D0, C0, B0, A0, output F0 );

  lut40092 \NES/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input D0, C0, B0, A0, output F0 );

  lut40080 \Howdy/i15_4_lut_adj_49 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_134 ( input D0, C0, B0, A0, output F0 );

  lut40017 \Howdy/i14_4_lut_adj_45 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_135 ( input DI1, D1, C1, B1, A1, D0, A0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40093 \Howdy/i2_4_lut_adj_50 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \Howdy/i1_2_lut_adj_51 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/von_39 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_136 ( input D0, C0, B0, A0, output F0 );

  lut40094 \Howdy/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_137 ( input D0, C0, B0, A0, output F0 );

  lut40095 \Howdy/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_138 ( input D0, C0, B0, A0, output F0 );

  lut40096 \NES/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_142 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40097 \Howdy/i668_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( output F0 );
  wire   GNDI;

  lut40098 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input D1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40099 \NES/i1346_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \NES/NEScount_9__I_0_79_i11_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xBBBB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_152 ( input DI1, D1, C1, B1, A1, D0, B0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40101 \Howdy/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40102 \Howdy/i1_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/hon_40 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Hello_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \Hello/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.DIVR = "3";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "48.000000";
endmodule

module Hi ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B Hi( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module control ( output PADDI, input control );
  wire   GNDI;

  BB_B_B \control_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(control));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (control => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module NESclk ( input PADDO, output NESclk );
  wire   VCCI;

  BB_B_B \NESclk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(NESclk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => NESclk) = (0:0:0,0:0:0);
  endspecify

endmodule

module latch ( input PADDO, output latch );
  wire   VCCI;

  BB_B_B \latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_0_ ( input PADDO, output rgbT0 );
  wire   VCCI;

  BB_B_B \rgbT_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_1_ ( input PADDO, output rgbT1 );
  wire   VCCI;

  BB_B_B \rgbT_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_2_ ( input PADDO, output rgbT2 );
  wire   VCCI;

  BB_B_B \rgbT_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT2) = (0:0:0,0:0:0);
  endspecify

endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_5_ ( input PADDO, output rgbT5 );
  wire   VCCI;

  BB_B_B \rgbT_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT5) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_4_ ( input PADDO, output rgbT4 );
  wire   VCCI;

  BB_B_B \rgbT_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_3_ ( input PADDO, output rgbT3 );
  wire   VCCI;

  BB_B_B \rgbT_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT3) = (0:0:0,0:0:0);
  endspecify

endmodule
