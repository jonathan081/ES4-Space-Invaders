
// Verilog netlist produced by program backanno, Version Radiant (64-bit) 1.0.0.350.6

// backanno -n Verilog -o FinalProject_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui FinalProject_impl_1.udb 
// Netlist created on Sun Apr 21 17:53:12 2019
// Netlist written on Sun Apr 21 17:53:16 2019
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module topvhd ( HSYNC, VSYNC, rgbT, latch, NESclk, control );
  input  control;
  output HSYNC, VSYNC;
  output [5:0] rgbT;
  output latch, NESclk;
  wire   \NES/n85[18] , \NES/n85[17] , \NES/n7712 , \NES/count[18] , 
         \NES/n4413 , \NES/count[17] , \NES/n2901 , pll_clock, \NES/n4415 , 
         \NES/n85[16] , \NES/n85[15] , \NES/n7709 , \NES/count[16] , 
         \NES/n4411 , \NES/count[15] , \NES/n85[14] , \NES/n85[13] , 
         \NES/n7706 , \NES/count[14] , \NES/n4409 , \NES/count[13] , 
         \NES/n85[12] , \NES/n85[11] , \NES/n7703 , \NES/count[12] , 
         \NES/n4407 , \NES/count[11] , \NES/n85[10] , \NES/n85[9] , 
         \NES/n7700 , \NES/count[10] , \NES/n4405 , \NES/count[9] , 
         \NES/n85[8] , \NES/n85[7] , \NES/n7697 , \NES/count[8] , \NES/n4403 , 
         \NES/count[7] , \NES/n85[6] , \NES/n85[5] , \NES/n7694 , 
         \NES/count[6] , \NES/n4401 , \NES/count[5] , \NES/n85[4] , 
         \NES/n85[3] , \NES/n7691 , \NES/count[4] , \NES/n4399 , 
         \NES/count[3] , \NES/n85[2] , \NES/n85[1] , \NES/n7688 , 
         \NES/count[2] , \NES/n4397 , \NES/count[1] , \NES/n85[0] , 
         \NES/n7442 , \NES/count[0] , VCC_net, \NES/n85[19] , \NES/n7715 , 
         \NES/count[19] , \Hola/n7631 , \Hola/n4361 , \Hola/ship_x[31] , 
         \rgb_5__N_242[31] , \Hola/n7619 , \Hola/ship_x[30] , \Hola/n4359 , 
         \Hola/ship_x[29] , \Hola/rgb_5__N_242[29] , \Hola/rgb_5__N_242[30] , 
         \Hola/n7607 , \Hola/ship_x[28] , \Hola/n4357 , \Hola/ship_x[27] , 
         \Hola/rgb_5__N_242[27] , \Hola/rgb_5__N_242[28] , \Hola/n7595 , 
         \Hola/ship_x[26] , \Hola/n4355 , \Hola/ship_x[25] , 
         \Hola/rgb_5__N_242[25] , \Hola/rgb_5__N_242[26] , \Hola/n7583 , 
         \Hola/ship_x[24] , \Hola/n4353 , \Hola/ship_x[23] , 
         \Hola/rgb_5__N_242[23] , \Hola/rgb_5__N_242[24] , \Hola/n7571 , 
         \Hola/ship_x[22] , \Hola/n4351 , \Hola/ship_x[21] , 
         \Hola/rgb_5__N_242[21] , \Hola/rgb_5__N_242[22] , \Hola/n7559 , 
         \Hola/ship_x[20] , \Hola/n4349 , \Hola/ship_x[19] , 
         \Hola/rgb_5__N_242[19] , \Hola/rgb_5__N_242[20] , \Hola/n7547 , 
         \Hola/ship_x[18] , \Hola/n4347 , \Hola/ship_x[17] , 
         \Hola/rgb_5__N_242[17] , \Hola/rgb_5__N_242[18] , \Hola/n7535 , 
         \Hola/ship_x[16] , \Hola/n4345 , \Hola/ship_x[15] , 
         \Hola/rgb_5__N_242[15] , \Hola/rgb_5__N_242[16] , \Hola/n7523 , 
         \Hola/ship_x[14] , \Hola/n4343 , \Hola/ship_x[13] , 
         \Hola/rgb_5__N_242[13] , \Hola/rgb_5__N_242[14] , \Hola/n7511 , 
         \Hola/ship_x[12] , \Hola/n4341 , \Hola/ship_x[11] , 
         \Hola/rgb_5__N_242[11] , \Hola/rgb_5__N_242[12] , \Hola/n7499 , 
         \Hola/ship_x[10] , \Hola/n4339 , \Hola/ship_x[9] , 
         \Hola/rgb_5__N_242[9] , \Hola/rgb_5__N_242[10] , \Hola/n7487 , 
         \Hola/ship_x[8] , \Hola/n4337 , \Hola/ship_x[7] , 
         \Hola/rgb_5__N_242[7] , \Hola/rgb_5__N_242[8] , \Hola/n7475 , 
         \Hola/ship_x[6] , \Hola/n4335 , \Hola/ship_x[5] , 
         \Hola/rgb_5__N_242[5] , \Hola/rgb_5__N_242[6] , \Hola/n7463 , 
         \Hola/ship_x[4] , \Hola/n4333 , \Hola/ship_x[3] , 
         \Hola/rgb_5__N_242[3] , \Hola/rgb_5__N_242[4] , \Hola/n7445 , 
         \Hola/ship_x[2] , \Hola/rgb_5__N_242[2] , \Hola/n7685 , \Hola/n4330 , 
         \Hola/rgb_5__N_275[31] , \Hola/n7634 , \Hola/n4266 , 
         \Hola/ship_x_31__N_371 , \Hola/n7682 , \Hola/n4328 , 
         \Hola/rgb_5__N_275[29] , \Hola/rgb_5__N_275[30] , \Hola/n7622 , 
         \Hola/n4264 , \Hola/n7679 , \Hola/n4326 , \Hola/rgb_5__N_275[27] , 
         \Hola/rgb_5__N_275[28] , \Hola/n7610 , \Hola/n4262 , \Hola/n7676 , 
         \Hola/n4324 , \Hola/rgb_5__N_275[25] , \Hola/rgb_5__N_275[26] , 
         \Hola/n7598 , \Hola/n4260 , \Hola/n7586 , \Hola/n4258 , \Hola/n7673 , 
         \Hola/n4322 , \Hola/rgb_5__N_275[23] , \Hola/rgb_5__N_275[24] , 
         \Hola/n7574 , \Hola/n4256 , \Hola/n7670 , \Hola/n4320 , 
         \Hola/rgb_5__N_275[21] , \Hola/rgb_5__N_275[22] , \Hola/n7562 , 
         \Hola/n4254 , \Hola/n7667 , \Hola/n4318 , \Hola/rgb_5__N_275[19] , 
         \Hola/rgb_5__N_275[20] , \Hola/n7664 , \Hola/n4316 , 
         \Hola/rgb_5__N_275[17] , \Hola/rgb_5__N_275[18] , \Hola/n7661 , 
         \Hola/n4314 , \Hola/rgb_5__N_275[15] , \Hola/rgb_5__N_275[16] , 
         \Hola/n7658 , \Hola/n4312 , \Hola/rgb_5__N_275[13] , 
         \Hola/rgb_5__N_275[14] , \Hola/n7550 , \Hola/n4252 , \Hola/n7538 , 
         \Hola/n4250 , \Hola/n7655 , \Hola/n4310 , \Hola/rgb_5__N_275[11] , 
         \Hola/rgb_5__N_275[12] , \Hola/n7652 , \Hola/n4308 , 
         \Hola/rgb_5__N_275[9] , \Hola/rgb_5__N_275[10] , \Hola/n7526 , 
         \Hola/n4248 , \Hola/n7649 , \Hola/n4306 , \Hola/rgb_5__N_275[7] , 
         \Hola/rgb_5__N_275[8] , \Hola/n7514 , \Hola/n4246 , \Hola/n7646 , 
         \Hola/n4304 , \Hola/rgb_5__N_275[5] , \Hola/rgb_5__N_275[6] , 
         \Hola/n7502 , \Hola/n4244 , \Hola/n7490 , \Hola/n4242 , \Hola/n7478 , 
         \Hola/n4240 , \Hola/n7643 , \Hola/n4302 , \Hola/rgb_5__N_275[3] , 
         \Hola/rgb_5__N_275[4] , \Hola/n7640 , \Hola/rgb_5__N_275[2] , 
         \Hola/n7466 , \Hola/n4238 , \Hola/n7454 , \Hola/n4236 , 
         \Hola/rgb_5__N_275[1] , \Hola/n7448 , \Hola/n433[0] , 
         \Hola/rgb_5__N_275[0] , \Howdy/n167[30] , \Howdy/n167[29] , 
         \Howdy/n7808 , \Howdy/countr[30] , \Howdy/n4297 , \Howdy/countr[29] , 
         \Howdy/row_9__N_189 , \Howdy/row_9__N_187 , \Howdy/n4299 , 
         \Howdy/n167[28] , \Howdy/n167[27] , \Howdy/n7805 , \Howdy/countr[28] , 
         \Howdy/n4295 , \Howdy/countr[27] , \Howdy/n167[26] , \Howdy/n167[25] , 
         \Howdy/n7802 , \Howdy/countr[26] , \Howdy/n4293 , \Howdy/countr[25] , 
         \Howdy/n167[24] , \Howdy/n167[23] , \Howdy/n7799 , \Howdy/countr[24] , 
         \Howdy/n4291 , \Howdy/countr[23] , \Howdy/n133[22] , \Howdy/n133[21] , 
         \Howdy/n7748 , \Howdy/countc[22] , \Howdy/n4384 , \Howdy/countc[21] , 
         \Howdy/n4386 , \Howdy/n133[20] , \Howdy/n133[19] , \Howdy/n7745 , 
         \Howdy/countc[20] , \Howdy/n4382 , \Howdy/countc[19] , 
         \Howdy/n167[22] , \Howdy/n167[21] , \Howdy/n7796 , \Howdy/countr[22] , 
         \Howdy/n4289 , \Howdy/countr[21] , \Howdy/n133[18] , \Howdy/n133[17] , 
         \Howdy/n7742 , \Howdy/countc[18] , \Howdy/n4380 , \Howdy/countc[17] , 
         \Howdy/n133[16] , \Howdy/n133[15] , \Howdy/n7739 , \Howdy/countc[16] , 
         \Howdy/n4378 , \Howdy/countc[15] , \Howdy/n133[14] , \Howdy/n133[13] , 
         \Howdy/n7736 , \Howdy/countc[14] , \Howdy/n4376 , \Howdy/countc[13] , 
         \Howdy/n167[20] , \Howdy/n167[19] , \Howdy/n7793 , \Howdy/countr[20] , 
         \Howdy/n4287 , \Howdy/countr[19] , \Howdy/n167[18] , \Howdy/n167[17] , 
         \Howdy/n7790 , \Howdy/countr[18] , \Howdy/n4285 , \Howdy/countr[17] , 
         \Howdy/n133[12] , \Howdy/n133[11] , \Howdy/n7733 , \Howdy/countc[12] , 
         \Howdy/n4374 , \Howdy/countc[11] , \Howdy/n167[16] , \Howdy/n167[15] , 
         \Howdy/n7787 , \Howdy/countr[16] , \Howdy/n4283 , \Howdy/countr[15] , 
         \Howdy/n167[14] , \Howdy/n167[13] , \Howdy/n7784 , \Howdy/countr[14] , 
         \Howdy/n4281 , \Howdy/countr[13] , \Howdy/n167[12] , \Howdy/n167[11] , 
         \Howdy/n7781 , \Howdy/countr[12] , \Howdy/n4279 , \Howdy/countr[11] , 
         \Howdy/n167[10] , \Howdy/n167[9] , \Howdy/n7778 , \Howdy/countr[10] , 
         \Howdy/n4277 , \Howdy/rowp[9] , \Howdy/n133[10] , \Howdy/n133[9] , 
         \Howdy/n7730 , \Howdy/countc[10] , \Howdy/n4372 , \colp[9] , 
         \Howdy/n167[8] , \Howdy/n167[7] , \Howdy/n7775 , \Howdy/rowp[8] , 
         \Howdy/n4275 , \Howdy/rowp[7] , \Howdy/n133[8] , \Howdy/n133[7] , 
         \Howdy/n7727 , \colp[8] , \Howdy/n4370 , \colp[7] , \Howdy/n133[31] , 
         \Howdy/n7763 , \Howdy/n4394 , \Howdy/countc[31] , \Howdy/n167[6] , 
         \Howdy/n167[5] , \Howdy/n7772 , \Howdy/rowp[6] , \Howdy/n4273 , 
         \Howdy/rowp[5] , \Howdy/n133[30] , \Howdy/n133[29] , \Howdy/n7760 , 
         \Howdy/countc[30] , \Howdy/n4392 , \Howdy/countc[29] , 
         \Howdy/n167[4] , \Howdy/n167[3] , \Howdy/n7769 , \Howdy/rowp[4] , 
         \Howdy/n4271 , \rowp[3] , \Howdy/n167[2] , \Howdy/n167[1] , 
         \Howdy/n7766 , \rowp[2] , \Howdy/n4269 , \rowp[1] , \Howdy/n133[6] , 
         \Howdy/n133[5] , \Howdy/n7724 , \colp[6] , \Howdy/n4368 , \colp[5] , 
         \Howdy/n167[0] , \Howdy/n7436 , \rowp[0] , \Howdy/n133[4] , 
         \Howdy/n133[3] , \Howdy/n7721 , \colp[4] , \Howdy/n4366 , \colp[3] , 
         \Howdy/n133[28] , \Howdy/n133[27] , \Howdy/n7757 , \Howdy/countc[28] , 
         \Howdy/n4390 , \Howdy/countc[27] , \Howdy/n133[2] , \Howdy/n133[1] , 
         \Howdy/n7718 , \colp[2] , \Howdy/n4364 , \colp[1] , \Howdy/n133[26] , 
         \Howdy/n133[25] , \Howdy/n7754 , \Howdy/countc[26] , \Howdy/n4388 , 
         \Howdy/countc[25] , \Howdy/n133[0] , \Howdy/n7439 , \colp[0] , 
         \Howdy/n167[31] , \Howdy/n7811 , \Howdy/countr[31] , \Howdy/n133[24] , 
         \Howdy/n133[23] , \Howdy/n7751 , \Howdy/countc[24] , 
         \Howdy/countc[23] , \NES/n5344 , n2908, \button_sig[7] , 
         \NEScount[2] , \NES/n3216 , control_c, \NEScount[0] , \button_sig[6] , 
         n5421, NESclk_c, n2903, n2907, \button_sig[4] , n4, \button_sig[5] , 
         n2904, n2906, \button_sig[2] , n4103, \button_sig[3] , n53, n4067, 
         \NES/count[19]/sig_000/FeedThruLUT , \NES/NEScount[9]_2 , n2902, 
         n2905, \button_sig[0] , n19, \button_sig[1] , 
         \NES/count[18]/sig_001/FeedThruLUT , \NES/NEScount[8]_2 , 
         \NES/count[17]/sig_002/FeedThruLUT , \NES/NEScount[7]_2 , 
         \NES/count[14]/sig_005/FeedThruLUT , \NES/NEScount[4]_2 , 
         \NES/count[10]/sig_009/FeedThruLUT , 
         \NES/count[12]/sig_007/FeedThruLUT , \NES/NEScount[1]_2 , 
         \NES/NEScount[3]_2 , \NES/n43 , \NES/n6 , \NES/n5 , 
         \NES/count[9]/sig_010/FeedThruLUT , \NES/NESclk , \NES/n11 , 
         \NES/n10 , \NES/NEScount[5]_2 , latch_c, \NES/NEScount[6]_2 , 
         \NES/n34 , \NES/n33 , \NES/n36 , \NES/n35 , \NES/n22 , \NES/n32 , 
         \Hola/n42_c , \Hola/n5839 , \Hola/n5837 , \Hola/n5849 , \Hola/n34 , 
         n41, \Howdy/n12 , \Howdy/n14 , \Howdy/n6 , \Hola/n20 , 
         \Hola/n18_adj_433 , n4_adj_441, \Howdy/n10 , n37, n42, n38, 
         \Hola/n40 , \Hola/n34_adj_430 , \Hola/n36 , \Hola/n26 , \Hola/n18 , 
         \Hola/n16 , \Hola/n14 , \Hola/n12 , \Hola/n10 , \Hola/n8 , \Hola/n6 , 
         \Hola/n4_adj_432 , \Hola/n5841 , \Hola/n5829 , \Hola/n16_adj_434 , 
         \Hola/n14_adj_435 , \Hola/n12_adj_436 , \Hola/n10_adj_437 , 
         \Hola/n8_adj_438 , \Hola/n6_adj_439 , \Hola/n4_adj_440 , \Hola/n2357 , 
         validp, \Hola/n5835 , \Howdy/n5213 , \Howdy/n2331 , \Howdy/n51 , 
         \Howdy/n2028 , VSYNC_c, \Howdy/n5200 , \Howdy/n2379 , 
         \Howdy/n42_adj_419 , \Howdy/valid_N_234 , \Howdy/n2347 , 
         \Howdy/n5418 , \Howdy/n4_adj_416 , \Howdy/n5420 , \Howdy/n62_adj_407 , 
         \Howdy/n5191 , \Howdy/n2382 , \Howdy/n62 , \Howdy/n2085 , \Howdy/n5 , 
         \Howdy/n37_adj_421 , \Howdy/n38_adj_422 , \Howdy/n36 , \Howdy/n35 , 
         \Howdy/n2333 , \Howdy/n2339 , \Howdy/n16 , \Howdy/n2388 , \Howdy/n8 , 
         \Howdy/n36_adj_425 , \Howdy/n38_adj_426 , \Howdy/n37_adj_424 , 
         \Howdy/n35_adj_423 , \Howdy/n2342 , \Howdy/n2385 , \Howdy/n5209 , 
         \Howdy/n4_adj_420 , HSYNC_c, \Howdy/n22 , \Howdy/n34 , \Howdy/n24 , 
         \Howdy/n34_adj_428 , \Howdy/n24_adj_429 , \Howdy/n22_adj_427 , 
         \NES/count[13]/sig_006/FeedThruLUT , \Howdy/valid_N_229 , rgbT_c, 
         \NES/count[15]/sig_004/FeedThruLUT , 
         \NES/count[16]/sig_003/FeedThruLUT , 
         \NES/count[11]/sig_008/FeedThruLUT , clk, 
         \Hello/lscc_pll_inst/feedback_w ;

  SLICE_0 SLICE_0( .DI1(\NES/n85[18] ), .DI0(\NES/n85[17] ), .D1(\NES/n7712 ), 
    .C1(\NES/count[18] ), .D0(\NES/n4413 ), .C0(\NES/count[17] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4413 ), .CIN1(\NES/n7712 ), 
    .Q0(\NES/count[17] ), .Q1(\NES/count[18] ), .F0(\NES/n85[17] ), 
    .F1(\NES/n85[18] ), .COUT1(\NES/n4415 ), .COUT0(\NES/n7712 ));
  SLICE_1 SLICE_1( .DI1(\NES/n85[16] ), .DI0(\NES/n85[15] ), .D1(\NES/n7709 ), 
    .C1(\NES/count[16] ), .D0(\NES/n4411 ), .C0(\NES/count[15] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4411 ), .CIN1(\NES/n7709 ), 
    .Q0(\NES/count[15] ), .Q1(\NES/count[16] ), .F0(\NES/n85[15] ), 
    .F1(\NES/n85[16] ), .COUT1(\NES/n4413 ), .COUT0(\NES/n7709 ));
  SLICE_2 SLICE_2( .DI1(\NES/n85[14] ), .DI0(\NES/n85[13] ), .D1(\NES/n7706 ), 
    .C1(\NES/count[14] ), .D0(\NES/n4409 ), .C0(\NES/count[13] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4409 ), .CIN1(\NES/n7706 ), 
    .Q0(\NES/count[13] ), .Q1(\NES/count[14] ), .F0(\NES/n85[13] ), 
    .F1(\NES/n85[14] ), .COUT1(\NES/n4411 ), .COUT0(\NES/n7706 ));
  SLICE_3 SLICE_3( .DI1(\NES/n85[12] ), .DI0(\NES/n85[11] ), .D1(\NES/n7703 ), 
    .C1(\NES/count[12] ), .D0(\NES/n4407 ), .C0(\NES/count[11] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4407 ), .CIN1(\NES/n7703 ), 
    .Q0(\NES/count[11] ), .Q1(\NES/count[12] ), .F0(\NES/n85[11] ), 
    .F1(\NES/n85[12] ), .COUT1(\NES/n4409 ), .COUT0(\NES/n7703 ));
  SLICE_4 SLICE_4( .DI1(\NES/n85[10] ), .DI0(\NES/n85[9] ), .D1(\NES/n7700 ), 
    .C1(\NES/count[10] ), .D0(\NES/n4405 ), .C0(\NES/count[9] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4405 ), .CIN1(\NES/n7700 ), 
    .Q0(\NES/count[9] ), .Q1(\NES/count[10] ), .F0(\NES/n85[9] ), 
    .F1(\NES/n85[10] ), .COUT1(\NES/n4407 ), .COUT0(\NES/n7700 ));
  SLICE_5 SLICE_5( .DI1(\NES/n85[8] ), .DI0(\NES/n85[7] ), .D1(\NES/n7697 ), 
    .C1(\NES/count[8] ), .D0(\NES/n4403 ), .C0(\NES/count[7] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4403 ), .CIN1(\NES/n7697 ), 
    .Q0(\NES/count[7] ), .Q1(\NES/count[8] ), .F0(\NES/n85[7] ), 
    .F1(\NES/n85[8] ), .COUT1(\NES/n4405 ), .COUT0(\NES/n7697 ));
  SLICE_6 SLICE_6( .DI1(\NES/n85[6] ), .DI0(\NES/n85[5] ), .D1(\NES/n7694 ), 
    .C1(\NES/count[6] ), .D0(\NES/n4401 ), .C0(\NES/count[5] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4401 ), .CIN1(\NES/n7694 ), 
    .Q0(\NES/count[5] ), .Q1(\NES/count[6] ), .F0(\NES/n85[5] ), 
    .F1(\NES/n85[6] ), .COUT1(\NES/n4403 ), .COUT0(\NES/n7694 ));
  SLICE_7 SLICE_7( .DI1(\NES/n85[4] ), .DI0(\NES/n85[3] ), .D1(\NES/n7691 ), 
    .C1(\NES/count[4] ), .D0(\NES/n4399 ), .C0(\NES/count[3] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4399 ), .CIN1(\NES/n7691 ), 
    .Q0(\NES/count[3] ), .Q1(\NES/count[4] ), .F0(\NES/n85[3] ), 
    .F1(\NES/n85[4] ), .COUT1(\NES/n4401 ), .COUT0(\NES/n7691 ));
  SLICE_8 SLICE_8( .DI1(\NES/n85[2] ), .DI0(\NES/n85[1] ), .D1(\NES/n7688 ), 
    .C1(\NES/count[2] ), .D0(\NES/n4397 ), .C0(\NES/count[1] ), 
    .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN0(\NES/n4397 ), .CIN1(\NES/n7688 ), 
    .Q0(\NES/count[1] ), .Q1(\NES/count[2] ), .F0(\NES/n85[1] ), 
    .F1(\NES/n85[2] ), .COUT1(\NES/n4399 ), .COUT0(\NES/n7688 ));
  SLICE_9 SLICE_9( .DI1(\NES/n85[0] ), .D1(\NES/n7442 ), .C1(\NES/count[0] ), 
    .B1(VCC_net), .LSR(\NES/n2901 ), .CLK(pll_clock), .CIN1(\NES/n7442 ), 
    .Q1(\NES/count[0] ), .F1(\NES/n85[0] ), .COUT1(\NES/n4397 ), 
    .COUT0(\NES/n7442 ));
  SLICE_10 SLICE_10( .DI0(\NES/n85[19] ), .D1(\NES/n7715 ), .D0(\NES/n4415 ), 
    .C0(\NES/count[19] ), .LSR(\NES/n2901 ), .CLK(pll_clock), 
    .CIN0(\NES/n4415 ), .CIN1(\NES/n7715 ), .Q0(\NES/count[19] ), 
    .F0(\NES/n85[19] ), .COUT0(\NES/n7715 ));
  SLICE_11 SLICE_11( .D1(\Hola/n7631 ), .D0(\Hola/n4361 ), 
    .B0(\Hola/ship_x[31] ), .CIN0(\Hola/n4361 ), .CIN1(\Hola/n7631 ), 
    .F0(\rgb_5__N_242[31] ), .COUT0(\Hola/n7631 ));
  SLICE_12 SLICE_12( .D1(\Hola/n7619 ), .B1(\Hola/ship_x[30] ), 
    .D0(\Hola/n4359 ), .B0(\Hola/ship_x[29] ), .CIN0(\Hola/n4359 ), 
    .CIN1(\Hola/n7619 ), .F0(\Hola/rgb_5__N_242[29] ), 
    .F1(\Hola/rgb_5__N_242[30] ), .COUT1(\Hola/n4361 ), .COUT0(\Hola/n7619 ));
  SLICE_13 SLICE_13( .D1(\Hola/n7607 ), .B1(\Hola/ship_x[28] ), 
    .D0(\Hola/n4357 ), .B0(\Hola/ship_x[27] ), .CIN0(\Hola/n4357 ), 
    .CIN1(\Hola/n7607 ), .F0(\Hola/rgb_5__N_242[27] ), 
    .F1(\Hola/rgb_5__N_242[28] ), .COUT1(\Hola/n4359 ), .COUT0(\Hola/n7607 ));
  SLICE_14 SLICE_14( .D1(\Hola/n7595 ), .B1(\Hola/ship_x[26] ), 
    .D0(\Hola/n4355 ), .B0(\Hola/ship_x[25] ), .CIN0(\Hola/n4355 ), 
    .CIN1(\Hola/n7595 ), .F0(\Hola/rgb_5__N_242[25] ), 
    .F1(\Hola/rgb_5__N_242[26] ), .COUT1(\Hola/n4357 ), .COUT0(\Hola/n7595 ));
  SLICE_15 SLICE_15( .D1(\Hola/n7583 ), .B1(\Hola/ship_x[24] ), 
    .D0(\Hola/n4353 ), .B0(\Hola/ship_x[23] ), .CIN0(\Hola/n4353 ), 
    .CIN1(\Hola/n7583 ), .F0(\Hola/rgb_5__N_242[23] ), 
    .F1(\Hola/rgb_5__N_242[24] ), .COUT1(\Hola/n4355 ), .COUT0(\Hola/n7583 ));
  SLICE_16 SLICE_16( .D1(\Hola/n7571 ), .B1(\Hola/ship_x[22] ), 
    .D0(\Hola/n4351 ), .B0(\Hola/ship_x[21] ), .CIN0(\Hola/n4351 ), 
    .CIN1(\Hola/n7571 ), .F0(\Hola/rgb_5__N_242[21] ), 
    .F1(\Hola/rgb_5__N_242[22] ), .COUT1(\Hola/n4353 ), .COUT0(\Hola/n7571 ));
  SLICE_17 SLICE_17( .D1(\Hola/n7559 ), .B1(\Hola/ship_x[20] ), 
    .D0(\Hola/n4349 ), .B0(\Hola/ship_x[19] ), .CIN0(\Hola/n4349 ), 
    .CIN1(\Hola/n7559 ), .F0(\Hola/rgb_5__N_242[19] ), 
    .F1(\Hola/rgb_5__N_242[20] ), .COUT1(\Hola/n4351 ), .COUT0(\Hola/n7559 ));
  SLICE_18 SLICE_18( .D1(\Hola/n7547 ), .B1(\Hola/ship_x[18] ), 
    .D0(\Hola/n4347 ), .B0(\Hola/ship_x[17] ), .CIN0(\Hola/n4347 ), 
    .CIN1(\Hola/n7547 ), .F0(\Hola/rgb_5__N_242[17] ), 
    .F1(\Hola/rgb_5__N_242[18] ), .COUT1(\Hola/n4349 ), .COUT0(\Hola/n7547 ));
  SLICE_19 SLICE_19( .D1(\Hola/n7535 ), .B1(\Hola/ship_x[16] ), 
    .D0(\Hola/n4345 ), .B0(\Hola/ship_x[15] ), .CIN0(\Hola/n4345 ), 
    .CIN1(\Hola/n7535 ), .F0(\Hola/rgb_5__N_242[15] ), 
    .F1(\Hola/rgb_5__N_242[16] ), .COUT1(\Hola/n4347 ), .COUT0(\Hola/n7535 ));
  SLICE_20 SLICE_20( .D1(\Hola/n7523 ), .B1(\Hola/ship_x[14] ), 
    .D0(\Hola/n4343 ), .B0(\Hola/ship_x[13] ), .CIN0(\Hola/n4343 ), 
    .CIN1(\Hola/n7523 ), .F0(\Hola/rgb_5__N_242[13] ), 
    .F1(\Hola/rgb_5__N_242[14] ), .COUT1(\Hola/n4345 ), .COUT0(\Hola/n7523 ));
  SLICE_21 SLICE_21( .D1(\Hola/n7511 ), .B1(\Hola/ship_x[12] ), 
    .D0(\Hola/n4341 ), .B0(\Hola/ship_x[11] ), .CIN0(\Hola/n4341 ), 
    .CIN1(\Hola/n7511 ), .F0(\Hola/rgb_5__N_242[11] ), 
    .F1(\Hola/rgb_5__N_242[12] ), .COUT1(\Hola/n4343 ), .COUT0(\Hola/n7511 ));
  SLICE_22 SLICE_22( .D1(\Hola/n7499 ), .B1(\Hola/ship_x[10] ), 
    .D0(\Hola/n4339 ), .B0(\Hola/ship_x[9] ), .CIN0(\Hola/n4339 ), 
    .CIN1(\Hola/n7499 ), .F0(\Hola/rgb_5__N_242[9] ), 
    .F1(\Hola/rgb_5__N_242[10] ), .COUT1(\Hola/n4341 ), .COUT0(\Hola/n7499 ));
  SLICE_23 SLICE_23( .D1(\Hola/n7487 ), .B1(\Hola/ship_x[8] ), 
    .D0(\Hola/n4337 ), .B0(\Hola/ship_x[7] ), .CIN0(\Hola/n4337 ), 
    .CIN1(\Hola/n7487 ), .F0(\Hola/rgb_5__N_242[7] ), 
    .F1(\Hola/rgb_5__N_242[8] ), .COUT1(\Hola/n4339 ), .COUT0(\Hola/n7487 ));
  SLICE_24 SLICE_24( .D1(\Hola/n7475 ), .B1(\Hola/ship_x[6] ), 
    .D0(\Hola/n4335 ), .B0(\Hola/ship_x[5] ), .CIN0(\Hola/n4335 ), 
    .CIN1(\Hola/n7475 ), .F0(\Hola/rgb_5__N_242[5] ), 
    .F1(\Hola/rgb_5__N_242[6] ), .COUT1(\Hola/n4337 ), .COUT0(\Hola/n7475 ));
  SLICE_25 SLICE_25( .D1(\Hola/n7463 ), .C1(VCC_net), .B1(\Hola/ship_x[4] ), 
    .D0(\Hola/n4333 ), .B0(\Hola/ship_x[3] ), .CIN0(\Hola/n4333 ), 
    .CIN1(\Hola/n7463 ), .F0(\Hola/rgb_5__N_242[3] ), 
    .F1(\Hola/rgb_5__N_242[4] ), .COUT1(\Hola/n4335 ), .COUT0(\Hola/n7463 ));
  SLICE_26 SLICE_26( .D1(\Hola/n7445 ), .C1(VCC_net), .B1(\Hola/ship_x[2] ), 
    .CIN1(\Hola/n7445 ), .F1(\Hola/rgb_5__N_242[2] ), .COUT1(\Hola/n4333 ), 
    .COUT0(\Hola/n7445 ));
  SLICE_27 SLICE_27( .D1(\Hola/n7685 ), .D0(\Hola/n4330 ), .C0(VCC_net), 
    .B0(\Hola/ship_x[31] ), .CIN0(\Hola/n4330 ), .CIN1(\Hola/n7685 ), 
    .F0(\Hola/rgb_5__N_275[31] ), .COUT0(\Hola/n7685 ));
  SLICE_28 SLICE_28( .D1(\Hola/n7634 ), .D0(\Hola/n4266 ), 
    .C0(\Hola/ship_x_31__N_371 ), .B0(\Hola/ship_x[31] ), .CIN0(\Hola/n4266 ), 
    .CIN1(\Hola/n7634 ), .F0(\Hola/ship_x[31] ), .COUT0(\Hola/n7634 ));
  SLICE_29 SLICE_29( .D1(\Hola/n7682 ), .C1(VCC_net), .B1(\Hola/ship_x[30] ), 
    .D0(\Hola/n4328 ), .C0(VCC_net), .B0(\Hola/ship_x[29] ), 
    .CIN0(\Hola/n4328 ), .CIN1(\Hola/n7682 ), .F0(\Hola/rgb_5__N_275[29] ), 
    .F1(\Hola/rgb_5__N_275[30] ), .COUT1(\Hola/n4330 ), .COUT0(\Hola/n7682 ));
  SLICE_30 SLICE_30( .D1(\Hola/n7622 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[30] ), .D0(\Hola/n4264 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[29] ), .CIN0(\Hola/n4264 ), .CIN1(\Hola/n7622 ), 
    .F0(\Hola/ship_x[29] ), .F1(\Hola/ship_x[30] ), .COUT1(\Hola/n4266 ), 
    .COUT0(\Hola/n7622 ));
  SLICE_31 SLICE_31( .D1(\Hola/n7679 ), .C1(VCC_net), .B1(\Hola/ship_x[28] ), 
    .D0(\Hola/n4326 ), .C0(VCC_net), .B0(\Hola/ship_x[27] ), 
    .CIN0(\Hola/n4326 ), .CIN1(\Hola/n7679 ), .F0(\Hola/rgb_5__N_275[27] ), 
    .F1(\Hola/rgb_5__N_275[28] ), .COUT1(\Hola/n4328 ), .COUT0(\Hola/n7679 ));
  SLICE_32 SLICE_32( .D1(\Hola/n7610 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[28] ), .D0(\Hola/n4262 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[27] ), .CIN0(\Hola/n4262 ), .CIN1(\Hola/n7610 ), 
    .F0(\Hola/ship_x[27] ), .F1(\Hola/ship_x[28] ), .COUT1(\Hola/n4264 ), 
    .COUT0(\Hola/n7610 ));
  SLICE_33 SLICE_33( .D1(\Hola/n7676 ), .C1(VCC_net), .B1(\Hola/ship_x[26] ), 
    .D0(\Hola/n4324 ), .C0(VCC_net), .B0(\Hola/ship_x[25] ), 
    .CIN0(\Hola/n4324 ), .CIN1(\Hola/n7676 ), .F0(\Hola/rgb_5__N_275[25] ), 
    .F1(\Hola/rgb_5__N_275[26] ), .COUT1(\Hola/n4326 ), .COUT0(\Hola/n7676 ));
  SLICE_34 SLICE_34( .D1(\Hola/n7598 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[26] ), .D0(\Hola/n4260 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[25] ), .CIN0(\Hola/n4260 ), .CIN1(\Hola/n7598 ), 
    .F0(\Hola/ship_x[25] ), .F1(\Hola/ship_x[26] ), .COUT1(\Hola/n4262 ), 
    .COUT0(\Hola/n7598 ));
  SLICE_35 SLICE_35( .D1(\Hola/n7586 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[24] ), .D0(\Hola/n4258 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[23] ), .CIN0(\Hola/n4258 ), .CIN1(\Hola/n7586 ), 
    .F0(\Hola/ship_x[23] ), .F1(\Hola/ship_x[24] ), .COUT1(\Hola/n4260 ), 
    .COUT0(\Hola/n7586 ));
  SLICE_36 SLICE_36( .D1(\Hola/n7673 ), .C1(VCC_net), .B1(\Hola/ship_x[24] ), 
    .D0(\Hola/n4322 ), .C0(VCC_net), .B0(\Hola/ship_x[23] ), 
    .CIN0(\Hola/n4322 ), .CIN1(\Hola/n7673 ), .F0(\Hola/rgb_5__N_275[23] ), 
    .F1(\Hola/rgb_5__N_275[24] ), .COUT1(\Hola/n4324 ), .COUT0(\Hola/n7673 ));
  SLICE_37 SLICE_37( .D1(\Hola/n7574 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[22] ), .D0(\Hola/n4256 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[21] ), .CIN0(\Hola/n4256 ), .CIN1(\Hola/n7574 ), 
    .F0(\Hola/ship_x[21] ), .F1(\Hola/ship_x[22] ), .COUT1(\Hola/n4258 ), 
    .COUT0(\Hola/n7574 ));
  SLICE_38 SLICE_38( .D1(\Hola/n7670 ), .C1(VCC_net), .B1(\Hola/ship_x[22] ), 
    .D0(\Hola/n4320 ), .C0(VCC_net), .B0(\Hola/ship_x[21] ), 
    .CIN0(\Hola/n4320 ), .CIN1(\Hola/n7670 ), .F0(\Hola/rgb_5__N_275[21] ), 
    .F1(\Hola/rgb_5__N_275[22] ), .COUT1(\Hola/n4322 ), .COUT0(\Hola/n7670 ));
  SLICE_39 SLICE_39( .D1(\Hola/n7562 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[20] ), .D0(\Hola/n4254 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[19] ), .CIN0(\Hola/n4254 ), .CIN1(\Hola/n7562 ), 
    .F0(\Hola/ship_x[19] ), .F1(\Hola/ship_x[20] ), .COUT1(\Hola/n4256 ), 
    .COUT0(\Hola/n7562 ));
  SLICE_40 SLICE_40( .D1(\Hola/n7667 ), .C1(VCC_net), .B1(\Hola/ship_x[20] ), 
    .D0(\Hola/n4318 ), .C0(VCC_net), .B0(\Hola/ship_x[19] ), 
    .CIN0(\Hola/n4318 ), .CIN1(\Hola/n7667 ), .F0(\Hola/rgb_5__N_275[19] ), 
    .F1(\Hola/rgb_5__N_275[20] ), .COUT1(\Hola/n4320 ), .COUT0(\Hola/n7667 ));
  SLICE_41 SLICE_41( .D1(\Hola/n7664 ), .C1(VCC_net), .B1(\Hola/ship_x[18] ), 
    .D0(\Hola/n4316 ), .C0(VCC_net), .B0(\Hola/ship_x[17] ), 
    .CIN0(\Hola/n4316 ), .CIN1(\Hola/n7664 ), .F0(\Hola/rgb_5__N_275[17] ), 
    .F1(\Hola/rgb_5__N_275[18] ), .COUT1(\Hola/n4318 ), .COUT0(\Hola/n7664 ));
  SLICE_42 SLICE_42( .D1(\Hola/n7661 ), .C1(VCC_net), .B1(\Hola/ship_x[16] ), 
    .D0(\Hola/n4314 ), .C0(VCC_net), .B0(\Hola/ship_x[15] ), 
    .CIN0(\Hola/n4314 ), .CIN1(\Hola/n7661 ), .F0(\Hola/rgb_5__N_275[15] ), 
    .F1(\Hola/rgb_5__N_275[16] ), .COUT1(\Hola/n4316 ), .COUT0(\Hola/n7661 ));
  SLICE_43 SLICE_43( .D1(\Hola/n7658 ), .C1(VCC_net), .B1(\Hola/ship_x[14] ), 
    .D0(\Hola/n4312 ), .C0(VCC_net), .B0(\Hola/ship_x[13] ), 
    .CIN0(\Hola/n4312 ), .CIN1(\Hola/n7658 ), .F0(\Hola/rgb_5__N_275[13] ), 
    .F1(\Hola/rgb_5__N_275[14] ), .COUT1(\Hola/n4314 ), .COUT0(\Hola/n7658 ));
  SLICE_44 SLICE_44( .D1(\Hola/n7550 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[18] ), .D0(\Hola/n4252 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[17] ), .CIN0(\Hola/n4252 ), .CIN1(\Hola/n7550 ), 
    .F0(\Hola/ship_x[17] ), .F1(\Hola/ship_x[18] ), .COUT1(\Hola/n4254 ), 
    .COUT0(\Hola/n7550 ));
  SLICE_45 SLICE_45( .D1(\Hola/n7538 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[16] ), .D0(\Hola/n4250 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[15] ), .CIN0(\Hola/n4250 ), .CIN1(\Hola/n7538 ), 
    .F0(\Hola/ship_x[15] ), .F1(\Hola/ship_x[16] ), .COUT1(\Hola/n4252 ), 
    .COUT0(\Hola/n7538 ));
  SLICE_46 SLICE_46( .D1(\Hola/n7655 ), .C1(VCC_net), .B1(\Hola/ship_x[12] ), 
    .D0(\Hola/n4310 ), .C0(VCC_net), .B0(\Hola/ship_x[11] ), 
    .CIN0(\Hola/n4310 ), .CIN1(\Hola/n7655 ), .F0(\Hola/rgb_5__N_275[11] ), 
    .F1(\Hola/rgb_5__N_275[12] ), .COUT1(\Hola/n4312 ), .COUT0(\Hola/n7655 ));
  SLICE_47 SLICE_47( .D1(\Hola/n7652 ), .C1(VCC_net), .B1(\Hola/ship_x[10] ), 
    .D0(\Hola/n4308 ), .C0(VCC_net), .B0(\Hola/ship_x[9] ), 
    .CIN0(\Hola/n4308 ), .CIN1(\Hola/n7652 ), .F0(\Hola/rgb_5__N_275[9] ), 
    .F1(\Hola/rgb_5__N_275[10] ), .COUT1(\Hola/n4310 ), .COUT0(\Hola/n7652 ));
  SLICE_48 SLICE_48( .D1(\Hola/n7526 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[14] ), .D0(\Hola/n4248 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[13] ), .CIN0(\Hola/n4248 ), .CIN1(\Hola/n7526 ), 
    .F0(\Hola/ship_x[13] ), .F1(\Hola/ship_x[14] ), .COUT1(\Hola/n4250 ), 
    .COUT0(\Hola/n7526 ));
  SLICE_49 SLICE_49( .D1(\Hola/n7649 ), .C1(VCC_net), .B1(\Hola/ship_x[8] ), 
    .D0(\Hola/n4306 ), .C0(VCC_net), .B0(\Hola/ship_x[7] ), 
    .CIN0(\Hola/n4306 ), .CIN1(\Hola/n7649 ), .F0(\Hola/rgb_5__N_275[7] ), 
    .F1(\Hola/rgb_5__N_275[8] ), .COUT1(\Hola/n4308 ), .COUT0(\Hola/n7649 ));
  SLICE_50 SLICE_50( .D1(\Hola/n7514 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[12] ), .D0(\Hola/n4246 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[11] ), .CIN0(\Hola/n4246 ), .CIN1(\Hola/n7514 ), 
    .F0(\Hola/ship_x[11] ), .F1(\Hola/ship_x[12] ), .COUT1(\Hola/n4248 ), 
    .COUT0(\Hola/n7514 ));
  SLICE_51 SLICE_51( .D1(\Hola/n7646 ), .C1(VCC_net), .B1(\Hola/ship_x[6] ), 
    .D0(\Hola/n4304 ), .C0(VCC_net), .B0(\Hola/ship_x[5] ), 
    .CIN0(\Hola/n4304 ), .CIN1(\Hola/n7646 ), .F0(\Hola/rgb_5__N_275[5] ), 
    .F1(\Hola/rgb_5__N_275[6] ), .COUT1(\Hola/n4306 ), .COUT0(\Hola/n7646 ));
  SLICE_52 SLICE_52( .D1(\Hola/n7502 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[10] ), .D0(\Hola/n4244 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[9] ), .CIN0(\Hola/n4244 ), .CIN1(\Hola/n7502 ), 
    .F0(\Hola/ship_x[9] ), .F1(\Hola/ship_x[10] ), .COUT1(\Hola/n4246 ), 
    .COUT0(\Hola/n7502 ));
  SLICE_53 SLICE_53( .D1(\Hola/n7490 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[8] ), .D0(\Hola/n4242 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[7] ), .CIN0(\Hola/n4242 ), .CIN1(\Hola/n7490 ), 
    .F0(\Hola/ship_x[7] ), .F1(\Hola/ship_x[8] ), .COUT1(\Hola/n4244 ), 
    .COUT0(\Hola/n7490 ));
  SLICE_54 SLICE_54( .D1(\Hola/n7478 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[6] ), .D0(\Hola/n4240 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[5] ), .CIN0(\Hola/n4240 ), .CIN1(\Hola/n7478 ), 
    .F0(\Hola/ship_x[5] ), .F1(\Hola/ship_x[6] ), .COUT1(\Hola/n4242 ), 
    .COUT0(\Hola/n7478 ));
  SLICE_55 SLICE_55( .D1(\Hola/n7643 ), .B1(\Hola/ship_x[4] ), 
    .D0(\Hola/n4302 ), .C0(VCC_net), .B0(\Hola/ship_x[3] ), 
    .CIN0(\Hola/n4302 ), .CIN1(\Hola/n7643 ), .F0(\Hola/rgb_5__N_275[3] ), 
    .F1(\Hola/rgb_5__N_275[4] ), .COUT1(\Hola/n4304 ), .COUT0(\Hola/n7643 ));
  SLICE_56 SLICE_56( .D1(\Hola/n7640 ), .C1(VCC_net), .B1(\Hola/ship_x[2] ), 
    .CIN1(\Hola/n7640 ), .F1(\Hola/rgb_5__N_275[2] ), .COUT1(\Hola/n4302 ), 
    .COUT0(\Hola/n7640 ));
  SLICE_57 SLICE_57( .D1(\Hola/n7466 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[4] ), .D0(\Hola/n4238 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/ship_x[3] ), .CIN0(\Hola/n4238 ), .CIN1(\Hola/n7466 ), 
    .F0(\Hola/ship_x[3] ), .F1(\Hola/ship_x[4] ), .COUT1(\Hola/n4240 ), 
    .COUT0(\Hola/n7466 ));
  SLICE_58 SLICE_58( .D1(\Hola/n7454 ), .C1(\Hola/ship_x_31__N_371 ), 
    .B1(\Hola/ship_x[2] ), .D0(\Hola/n4236 ), .C0(\Hola/ship_x_31__N_371 ), 
    .B0(\Hola/rgb_5__N_275[1] ), .CIN0(\Hola/n4236 ), .CIN1(\Hola/n7454 ), 
    .F0(\Hola/rgb_5__N_275[1] ), .F1(\Hola/ship_x[2] ), .COUT1(\Hola/n4238 ), 
    .COUT0(\Hola/n7454 ));
  SLICE_59 SLICE_59( .D1(\Hola/n7448 ), .C1(\Hola/n433[0] ), 
    .B1(\Hola/rgb_5__N_275[0] ), .CIN1(\Hola/n7448 ), 
    .F1(\Hola/rgb_5__N_275[0] ), .COUT1(\Hola/n4236 ), .COUT0(\Hola/n7448 ));
  SLICE_60 SLICE_60( .DI1(\Howdy/n167[30] ), .DI0(\Howdy/n167[29] ), 
    .D1(\Howdy/n7808 ), .B1(\Howdy/countr[30] ), .D0(\Howdy/n4297 ), 
    .B0(\Howdy/countr[29] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4297 ), 
    .CIN1(\Howdy/n7808 ), .Q0(\Howdy/countr[29] ), .Q1(\Howdy/countr[30] ), 
    .F0(\Howdy/n167[29] ), .F1(\Howdy/n167[30] ), .COUT1(\Howdy/n4299 ), 
    .COUT0(\Howdy/n7808 ));
  SLICE_61 SLICE_61( .DI1(\Howdy/n167[28] ), .DI0(\Howdy/n167[27] ), 
    .D1(\Howdy/n7805 ), .B1(\Howdy/countr[28] ), .D0(\Howdy/n4295 ), 
    .B0(\Howdy/countr[27] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4295 ), 
    .CIN1(\Howdy/n7805 ), .Q0(\Howdy/countr[27] ), .Q1(\Howdy/countr[28] ), 
    .F0(\Howdy/n167[27] ), .F1(\Howdy/n167[28] ), .COUT1(\Howdy/n4297 ), 
    .COUT0(\Howdy/n7805 ));
  SLICE_62 SLICE_62( .DI1(\Howdy/n167[26] ), .DI0(\Howdy/n167[25] ), 
    .D1(\Howdy/n7802 ), .B1(\Howdy/countr[26] ), .D0(\Howdy/n4293 ), 
    .B0(\Howdy/countr[25] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4293 ), 
    .CIN1(\Howdy/n7802 ), .Q0(\Howdy/countr[25] ), .Q1(\Howdy/countr[26] ), 
    .F0(\Howdy/n167[25] ), .F1(\Howdy/n167[26] ), .COUT1(\Howdy/n4295 ), 
    .COUT0(\Howdy/n7802 ));
  SLICE_63 SLICE_63( .DI1(\Howdy/n167[24] ), .DI0(\Howdy/n167[23] ), 
    .D1(\Howdy/n7799 ), .B1(\Howdy/countr[24] ), .D0(\Howdy/n4291 ), 
    .B0(\Howdy/countr[23] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4291 ), 
    .CIN1(\Howdy/n7799 ), .Q0(\Howdy/countr[23] ), .Q1(\Howdy/countr[24] ), 
    .F0(\Howdy/n167[23] ), .F1(\Howdy/n167[24] ), .COUT1(\Howdy/n4293 ), 
    .COUT0(\Howdy/n7799 ));
  SLICE_64 SLICE_64( .DI1(\Howdy/n133[22] ), .DI0(\Howdy/n133[21] ), 
    .D1(\Howdy/n7748 ), .C1(\Howdy/countc[22] ), .D0(\Howdy/n4384 ), 
    .C0(\Howdy/countc[21] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4384 ), .CIN1(\Howdy/n7748 ), .Q0(\Howdy/countc[21] ), 
    .Q1(\Howdy/countc[22] ), .F0(\Howdy/n133[21] ), .F1(\Howdy/n133[22] ), 
    .COUT1(\Howdy/n4386 ), .COUT0(\Howdy/n7748 ));
  SLICE_65 SLICE_65( .DI1(\Howdy/n133[20] ), .DI0(\Howdy/n133[19] ), 
    .D1(\Howdy/n7745 ), .C1(\Howdy/countc[20] ), .D0(\Howdy/n4382 ), 
    .C0(\Howdy/countc[19] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4382 ), .CIN1(\Howdy/n7745 ), .Q0(\Howdy/countc[19] ), 
    .Q1(\Howdy/countc[20] ), .F0(\Howdy/n133[19] ), .F1(\Howdy/n133[20] ), 
    .COUT1(\Howdy/n4384 ), .COUT0(\Howdy/n7745 ));
  SLICE_66 SLICE_66( .DI1(\Howdy/n167[22] ), .DI0(\Howdy/n167[21] ), 
    .D1(\Howdy/n7796 ), .B1(\Howdy/countr[22] ), .D0(\Howdy/n4289 ), 
    .B0(\Howdy/countr[21] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4289 ), 
    .CIN1(\Howdy/n7796 ), .Q0(\Howdy/countr[21] ), .Q1(\Howdy/countr[22] ), 
    .F0(\Howdy/n167[21] ), .F1(\Howdy/n167[22] ), .COUT1(\Howdy/n4291 ), 
    .COUT0(\Howdy/n7796 ));
  SLICE_67 SLICE_67( .DI1(\Howdy/n133[18] ), .DI0(\Howdy/n133[17] ), 
    .D1(\Howdy/n7742 ), .C1(\Howdy/countc[18] ), .D0(\Howdy/n4380 ), 
    .C0(\Howdy/countc[17] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4380 ), .CIN1(\Howdy/n7742 ), .Q0(\Howdy/countc[17] ), 
    .Q1(\Howdy/countc[18] ), .F0(\Howdy/n133[17] ), .F1(\Howdy/n133[18] ), 
    .COUT1(\Howdy/n4382 ), .COUT0(\Howdy/n7742 ));
  SLICE_68 SLICE_68( .DI1(\Howdy/n133[16] ), .DI0(\Howdy/n133[15] ), 
    .D1(\Howdy/n7739 ), .C1(\Howdy/countc[16] ), .D0(\Howdy/n4378 ), 
    .C0(\Howdy/countc[15] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4378 ), .CIN1(\Howdy/n7739 ), .Q0(\Howdy/countc[15] ), 
    .Q1(\Howdy/countc[16] ), .F0(\Howdy/n133[15] ), .F1(\Howdy/n133[16] ), 
    .COUT1(\Howdy/n4380 ), .COUT0(\Howdy/n7739 ));
  SLICE_69 SLICE_69( .DI1(\Howdy/n133[14] ), .DI0(\Howdy/n133[13] ), 
    .D1(\Howdy/n7736 ), .C1(\Howdy/countc[14] ), .D0(\Howdy/n4376 ), 
    .C0(\Howdy/countc[13] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4376 ), .CIN1(\Howdy/n7736 ), .Q0(\Howdy/countc[13] ), 
    .Q1(\Howdy/countc[14] ), .F0(\Howdy/n133[13] ), .F1(\Howdy/n133[14] ), 
    .COUT1(\Howdy/n4378 ), .COUT0(\Howdy/n7736 ));
  SLICE_70 SLICE_70( .DI1(\Howdy/n167[20] ), .DI0(\Howdy/n167[19] ), 
    .D1(\Howdy/n7793 ), .B1(\Howdy/countr[20] ), .D0(\Howdy/n4287 ), 
    .B0(\Howdy/countr[19] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4287 ), 
    .CIN1(\Howdy/n7793 ), .Q0(\Howdy/countr[19] ), .Q1(\Howdy/countr[20] ), 
    .F0(\Howdy/n167[19] ), .F1(\Howdy/n167[20] ), .COUT1(\Howdy/n4289 ), 
    .COUT0(\Howdy/n7793 ));
  SLICE_71 SLICE_71( .DI1(\Howdy/n167[18] ), .DI0(\Howdy/n167[17] ), 
    .D1(\Howdy/n7790 ), .B1(\Howdy/countr[18] ), .D0(\Howdy/n4285 ), 
    .B0(\Howdy/countr[17] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4285 ), 
    .CIN1(\Howdy/n7790 ), .Q0(\Howdy/countr[17] ), .Q1(\Howdy/countr[18] ), 
    .F0(\Howdy/n167[17] ), .F1(\Howdy/n167[18] ), .COUT1(\Howdy/n4287 ), 
    .COUT0(\Howdy/n7790 ));
  SLICE_72 SLICE_72( .DI1(\Howdy/n133[12] ), .DI0(\Howdy/n133[11] ), 
    .D1(\Howdy/n7733 ), .C1(\Howdy/countc[12] ), .D0(\Howdy/n4374 ), 
    .C0(\Howdy/countc[11] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4374 ), .CIN1(\Howdy/n7733 ), .Q0(\Howdy/countc[11] ), 
    .Q1(\Howdy/countc[12] ), .F0(\Howdy/n133[11] ), .F1(\Howdy/n133[12] ), 
    .COUT1(\Howdy/n4376 ), .COUT0(\Howdy/n7733 ));
  SLICE_73 SLICE_73( .DI1(\Howdy/n167[16] ), .DI0(\Howdy/n167[15] ), 
    .D1(\Howdy/n7787 ), .B1(\Howdy/countr[16] ), .D0(\Howdy/n4283 ), 
    .B0(\Howdy/countr[15] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4283 ), 
    .CIN1(\Howdy/n7787 ), .Q0(\Howdy/countr[15] ), .Q1(\Howdy/countr[16] ), 
    .F0(\Howdy/n167[15] ), .F1(\Howdy/n167[16] ), .COUT1(\Howdy/n4285 ), 
    .COUT0(\Howdy/n7787 ));
  SLICE_74 SLICE_74( .DI1(\Howdy/n167[14] ), .DI0(\Howdy/n167[13] ), 
    .D1(\Howdy/n7784 ), .B1(\Howdy/countr[14] ), .D0(\Howdy/n4281 ), 
    .B0(\Howdy/countr[13] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4281 ), 
    .CIN1(\Howdy/n7784 ), .Q0(\Howdy/countr[13] ), .Q1(\Howdy/countr[14] ), 
    .F0(\Howdy/n167[13] ), .F1(\Howdy/n167[14] ), .COUT1(\Howdy/n4283 ), 
    .COUT0(\Howdy/n7784 ));
  SLICE_75 SLICE_75( .DI1(\Howdy/n167[12] ), .DI0(\Howdy/n167[11] ), 
    .D1(\Howdy/n7781 ), .B1(\Howdy/countr[12] ), .D0(\Howdy/n4279 ), 
    .B0(\Howdy/countr[11] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4279 ), 
    .CIN1(\Howdy/n7781 ), .Q0(\Howdy/countr[11] ), .Q1(\Howdy/countr[12] ), 
    .F0(\Howdy/n167[11] ), .F1(\Howdy/n167[12] ), .COUT1(\Howdy/n4281 ), 
    .COUT0(\Howdy/n7781 ));
  SLICE_76 SLICE_76( .DI1(\Howdy/n167[10] ), .DI0(\Howdy/n167[9] ), 
    .D1(\Howdy/n7778 ), .B1(\Howdy/countr[10] ), .D0(\Howdy/n4277 ), 
    .B0(\Howdy/rowp[9] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4277 ), 
    .CIN1(\Howdy/n7778 ), .Q0(\Howdy/rowp[9] ), .Q1(\Howdy/countr[10] ), 
    .F0(\Howdy/n167[9] ), .F1(\Howdy/n167[10] ), .COUT1(\Howdy/n4279 ), 
    .COUT0(\Howdy/n7778 ));
  SLICE_77 SLICE_77( .DI1(\Howdy/n133[10] ), .DI0(\Howdy/n133[9] ), 
    .D1(\Howdy/n7730 ), .C1(\Howdy/countc[10] ), .D0(\Howdy/n4372 ), 
    .C0(\colp[9] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4372 ), .CIN1(\Howdy/n7730 ), .Q0(\colp[9] ), 
    .Q1(\Howdy/countc[10] ), .F0(\Howdy/n133[9] ), .F1(\Howdy/n133[10] ), 
    .COUT1(\Howdy/n4374 ), .COUT0(\Howdy/n7730 ));
  SLICE_78 SLICE_78( .DI1(\Howdy/n167[8] ), .DI0(\Howdy/n167[7] ), 
    .D1(\Howdy/n7775 ), .B1(\Howdy/rowp[8] ), .D0(\Howdy/n4275 ), 
    .B0(\Howdy/rowp[7] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4275 ), 
    .CIN1(\Howdy/n7775 ), .Q0(\Howdy/rowp[7] ), .Q1(\Howdy/rowp[8] ), 
    .F0(\Howdy/n167[7] ), .F1(\Howdy/n167[8] ), .COUT1(\Howdy/n4277 ), 
    .COUT0(\Howdy/n7775 ));
  SLICE_79 SLICE_79( .DI1(\Howdy/n133[8] ), .DI0(\Howdy/n133[7] ), 
    .D1(\Howdy/n7727 ), .C1(\colp[8] ), .D0(\Howdy/n4370 ), .C0(\colp[7] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4370 ), 
    .CIN1(\Howdy/n7727 ), .Q0(\colp[7] ), .Q1(\colp[8] ), .F0(\Howdy/n133[7] ), 
    .F1(\Howdy/n133[8] ), .COUT1(\Howdy/n4372 ), .COUT0(\Howdy/n7727 ));
  SLICE_80 SLICE_80( .DI0(\Howdy/n133[31] ), .D1(\Howdy/n7763 ), 
    .D0(\Howdy/n4394 ), .C0(\Howdy/countc[31] ), .LSR(\Howdy/row_9__N_189 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n4394 ), .CIN1(\Howdy/n7763 ), 
    .Q0(\Howdy/countc[31] ), .F0(\Howdy/n133[31] ), .COUT0(\Howdy/n7763 ));
  SLICE_81 SLICE_81( .DI1(\Howdy/n167[6] ), .DI0(\Howdy/n167[5] ), 
    .D1(\Howdy/n7772 ), .B1(\Howdy/rowp[6] ), .D0(\Howdy/n4273 ), 
    .B0(\Howdy/rowp[5] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4273 ), 
    .CIN1(\Howdy/n7772 ), .Q0(\Howdy/rowp[5] ), .Q1(\Howdy/rowp[6] ), 
    .F0(\Howdy/n167[5] ), .F1(\Howdy/n167[6] ), .COUT1(\Howdy/n4275 ), 
    .COUT0(\Howdy/n7772 ));
  SLICE_82 SLICE_82( .DI1(\Howdy/n133[30] ), .DI0(\Howdy/n133[29] ), 
    .D1(\Howdy/n7760 ), .C1(\Howdy/countc[30] ), .D0(\Howdy/n4392 ), 
    .C0(\Howdy/countc[29] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4392 ), .CIN1(\Howdy/n7760 ), .Q0(\Howdy/countc[29] ), 
    .Q1(\Howdy/countc[30] ), .F0(\Howdy/n133[29] ), .F1(\Howdy/n133[30] ), 
    .COUT1(\Howdy/n4394 ), .COUT0(\Howdy/n7760 ));
  SLICE_83 SLICE_83( .DI1(\Howdy/n167[4] ), .DI0(\Howdy/n167[3] ), 
    .D1(\Howdy/n7769 ), .B1(\Howdy/rowp[4] ), .D0(\Howdy/n4271 ), 
    .B0(\rowp[3] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN0(\Howdy/n4271 ), .CIN1(\Howdy/n7769 ), 
    .Q0(\rowp[3] ), .Q1(\Howdy/rowp[4] ), .F0(\Howdy/n167[3] ), 
    .F1(\Howdy/n167[4] ), .COUT1(\Howdy/n4273 ), .COUT0(\Howdy/n7769 ));
  SLICE_84 SLICE_84( .DI1(\Howdy/n167[2] ), .DI0(\Howdy/n167[1] ), 
    .D1(\Howdy/n7766 ), .B1(\rowp[2] ), .D0(\Howdy/n4269 ), .B0(\rowp[1] ), 
    .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4269 ), .CIN1(\Howdy/n7766 ), .Q0(\rowp[1] ), .Q1(\rowp[2] ), 
    .F0(\Howdy/n167[1] ), .F1(\Howdy/n167[2] ), .COUT1(\Howdy/n4271 ), 
    .COUT0(\Howdy/n7766 ));
  SLICE_85 SLICE_85( .DI1(\Howdy/n133[6] ), .DI0(\Howdy/n133[5] ), 
    .D1(\Howdy/n7724 ), .C1(\colp[6] ), .D0(\Howdy/n4368 ), .C0(\colp[5] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4368 ), 
    .CIN1(\Howdy/n7724 ), .Q0(\colp[5] ), .Q1(\colp[6] ), .F0(\Howdy/n133[5] ), 
    .F1(\Howdy/n133[6] ), .COUT1(\Howdy/n4370 ), .COUT0(\Howdy/n7724 ));
  SLICE_86 SLICE_86( .DI1(\Howdy/n167[0] ), .D1(\Howdy/n7436 ), .C1(VCC_net), 
    .B1(\rowp[0] ), .CE(\Howdy/row_9__N_189 ), .LSR(\Howdy/row_9__N_187 ), 
    .CLK(pll_clock), .CIN1(\Howdy/n7436 ), .Q1(\rowp[0] ), 
    .F1(\Howdy/n167[0] ), .COUT1(\Howdy/n4269 ), .COUT0(\Howdy/n7436 ));
  SLICE_87 SLICE_87( .DI1(\Howdy/n133[4] ), .DI0(\Howdy/n133[3] ), 
    .D1(\Howdy/n7721 ), .C1(\colp[4] ), .D0(\Howdy/n4366 ), .C0(\colp[3] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4366 ), 
    .CIN1(\Howdy/n7721 ), .Q0(\colp[3] ), .Q1(\colp[4] ), .F0(\Howdy/n133[3] ), 
    .F1(\Howdy/n133[4] ), .COUT1(\Howdy/n4368 ), .COUT0(\Howdy/n7721 ));
  SLICE_88 SLICE_88( .DI1(\Howdy/n133[28] ), .DI0(\Howdy/n133[27] ), 
    .D1(\Howdy/n7757 ), .C1(\Howdy/countc[28] ), .D0(\Howdy/n4390 ), 
    .C0(\Howdy/countc[27] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4390 ), .CIN1(\Howdy/n7757 ), .Q0(\Howdy/countc[27] ), 
    .Q1(\Howdy/countc[28] ), .F0(\Howdy/n133[27] ), .F1(\Howdy/n133[28] ), 
    .COUT1(\Howdy/n4392 ), .COUT0(\Howdy/n7757 ));
  SLICE_89 SLICE_89( .DI1(\Howdy/n133[2] ), .DI0(\Howdy/n133[1] ), 
    .D1(\Howdy/n7718 ), .C1(\colp[2] ), .D0(\Howdy/n4364 ), .C0(\colp[1] ), 
    .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), .CIN0(\Howdy/n4364 ), 
    .CIN1(\Howdy/n7718 ), .Q0(\colp[1] ), .Q1(\colp[2] ), .F0(\Howdy/n133[1] ), 
    .F1(\Howdy/n133[2] ), .COUT1(\Howdy/n4366 ), .COUT0(\Howdy/n7718 ));
  SLICE_90 SLICE_90( .DI1(\Howdy/n133[26] ), .DI0(\Howdy/n133[25] ), 
    .D1(\Howdy/n7754 ), .C1(\Howdy/countc[26] ), .D0(\Howdy/n4388 ), 
    .C0(\Howdy/countc[25] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4388 ), .CIN1(\Howdy/n7754 ), .Q0(\Howdy/countc[25] ), 
    .Q1(\Howdy/countc[26] ), .F0(\Howdy/n133[25] ), .F1(\Howdy/n133[26] ), 
    .COUT1(\Howdy/n4390 ), .COUT0(\Howdy/n7754 ));
  SLICE_91 SLICE_91( .DI1(\Howdy/n133[0] ), .D1(\Howdy/n7439 ), .C1(\colp[0] ), 
    .B1(VCC_net), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN1(\Howdy/n7439 ), .Q1(\colp[0] ), .F1(\Howdy/n133[0] ), 
    .COUT1(\Howdy/n4364 ), .COUT0(\Howdy/n7439 ));
  SLICE_92 SLICE_92( .DI0(\Howdy/n167[31] ), .D1(\Howdy/n7811 ), 
    .D0(\Howdy/n4299 ), .B0(\Howdy/countr[31] ), .CE(\Howdy/row_9__N_189 ), 
    .LSR(\Howdy/row_9__N_187 ), .CLK(pll_clock), .CIN0(\Howdy/n4299 ), 
    .CIN1(\Howdy/n7811 ), .Q0(\Howdy/countr[31] ), .F0(\Howdy/n167[31] ), 
    .COUT0(\Howdy/n7811 ));
  SLICE_93 SLICE_93( .DI1(\Howdy/n133[24] ), .DI0(\Howdy/n133[23] ), 
    .D1(\Howdy/n7751 ), .C1(\Howdy/countc[24] ), .D0(\Howdy/n4386 ), 
    .C0(\Howdy/countc[23] ), .LSR(\Howdy/row_9__N_189 ), .CLK(pll_clock), 
    .CIN0(\Howdy/n4386 ), .CIN1(\Howdy/n7751 ), .Q0(\Howdy/countc[23] ), 
    .Q1(\Howdy/countc[24] ), .F0(\Howdy/n133[23] ), .F1(\Howdy/n133[24] ), 
    .COUT1(\Howdy/n4388 ), .COUT0(\Howdy/n7751 ));
  SLICE_94 SLICE_94( .DI1(\NES/n5344 ), .DI0(n2908), .D1(\button_sig[7] ), 
    .C1(\NEScount[2] ), .B1(\NES/n3216 ), .A1(control_c), .D0(\NEScount[0] ), 
    .C0(\button_sig[6] ), .B0(control_c), .A0(n5421), .CLK(NESclk_c), 
    .Q0(\button_sig[6] ), .Q1(\button_sig[7] ), .F0(n2908), .F1(\NES/n5344 ));
  SLICE_95 SLICE_95( .DI1(n2903), .DI0(n2907), .D1(control_c), 
    .C1(\button_sig[4] ), .B1(n4), .A1(\NEScount[2] ), .D0(n5421), 
    .C0(\button_sig[5] ), .B0(\NEScount[0] ), .A0(control_c), .CLK(NESclk_c), 
    .Q0(\button_sig[5] ), .Q1(\button_sig[4] ), .F0(n2907), .F1(n2903));
  SLICE_96 SLICE_96( .DI1(n2904), .DI0(n2906), .D1(\button_sig[2] ), 
    .C1(n4103), .B1(\NEScount[0] ), .A1(control_c), .D0(\button_sig[3] ), 
    .C0(n53), .B0(control_c), .A0(n4067), .CLK(NESclk_c), .Q0(\button_sig[3] ), 
    .Q1(\button_sig[2] ), .F0(n2906), .F1(n2904));
  SLICE_97 SLICE_97( .DI0(\NES/count[19]/sig_000/FeedThruLUT ), 
    .D0(\NES/count[19] ), .CLK(pll_clock), .Q0(\NES/NEScount[9]_2 ), 
    .F0(\NES/count[19]/sig_000/FeedThruLUT ));
  SLICE_98 SLICE_98( .DI1(n2902), .DI0(n2905), .D1(\button_sig[0] ), .C1(n19), 
    .B1(control_c), .D0(\button_sig[1] ), .C0(\NEScount[0] ), .B0(n4103), 
    .A0(control_c), .CLK(NESclk_c), .Q0(\button_sig[1] ), .Q1(\button_sig[0] ), 
    .F0(n2905), .F1(n2902));
  SLICE_99 SLICE_99( .DI0(\NES/count[18]/sig_001/FeedThruLUT ), 
    .A0(\NES/count[18] ), .CLK(pll_clock), .Q0(\NES/NEScount[8]_2 ), 
    .F0(\NES/count[18]/sig_001/FeedThruLUT ));
  SLICE_101 SLICE_101( .DI0(\NES/count[17]/sig_002/FeedThruLUT ), 
    .A0(\NES/count[17] ), .CLK(pll_clock), .Q0(\NES/NEScount[7]_2 ), 
    .F0(\NES/count[17]/sig_002/FeedThruLUT ));
  SLICE_106 SLICE_106( .DI0(\NES/count[14]/sig_005/FeedThruLUT ), 
    .D0(\NES/count[14] ), .CLK(pll_clock), .Q0(\NES/NEScount[4]_2 ), 
    .F0(\NES/count[14]/sig_005/FeedThruLUT ));
  SLICE_108 SLICE_108( .DI1(\NES/count[10]/sig_009/FeedThruLUT ), 
    .DI0(\NES/count[12]/sig_007/FeedThruLUT ), .D1(\NES/count[10] ), 
    .C0(\NES/count[12] ), .CLK(pll_clock), .Q0(\NEScount[2] ), 
    .Q1(\NEScount[0] ), .F0(\NES/count[12]/sig_007/FeedThruLUT ), 
    .F1(\NES/count[10]/sig_009/FeedThruLUT ));
  SLICE_116 SLICE_116( .D1(\NES/NEScount[1]_2 ), .B1(\NEScount[0] ), .D0(n53), 
    .C0(\NES/NEScount[3]_2 ), .B0(n19), .A0(\NES/n43 ), .F0(\NES/n3216 ), 
    .F1(n53));
  SLICE_117 SLICE_117( .D1(\NEScount[2] ), .C1(n19), .B1(\NES/NEScount[3]_2 ), 
    .A1(\NES/n43 ), .D0(\NEScount[0] ), .C0(\NES/n43 ), .B0(\NES/n6 ), 
    .A0(\NES/NEScount[3]_2 ), .F0(n19), .F1(n4067));
  SLICE_118 SLICE_118( .D1(\NES/n43 ), .C1(\NES/NEScount[3]_2 ), 
    .B1(\NES/NEScount[1]_2 ), .A1(\NEScount[2] ), .D0(\NEScount[2] ), 
    .C0(\NEScount[0] ), .B0(\NES/NEScount[3]_2 ), .A0(\NES/NEScount[1]_2 ), 
    .F0(\NES/n5 ), .F1(n4103));
  SLICE_119 SLICE_119( .DI1(\NES/count[9]/sig_010/FeedThruLUT ), 
    .C1(\NES/count[9] ), .D0(\NES/n5 ), .C0(\NES/NESclk ), .A0(\NES/n43 ), 
    .CLK(pll_clock), .Q1(\NES/NESclk ), .F0(NESclk_c), 
    .F1(\NES/count[9]/sig_010/FeedThruLUT ));
  SLICE_120 SLICE_120( .D1(\NEScount[0] ), .C1(\NES/n11 ), 
    .B1(\NES/NEScount[1]_2 ), .A1(\NEScount[2] ), .D0(\NES/n10 ), 
    .C0(\NES/NEScount[8]_2 ), .B0(\NES/NEScount[3]_2 ), 
    .A0(\NES/NEScount[5]_2 ), .F0(\NES/n11 ), .F1(latch_c));
  SLICE_122 SLICE_122( .D1(\NES/NEScount[8]_2 ), .C1(\NES/n10 ), 
    .B1(\NES/NEScount[5]_2 ), .D0(\NES/NEScount[6]_2 ), 
    .C0(\NES/NEScount[9]_2 ), .B0(\NES/NEScount[4]_2 ), 
    .A0(\NES/NEScount[7]_2 ), .F0(\NES/n10 ), .F1(\NES/n43 ));
  SLICE_124 SLICE_124( .C0(n4067), .A0(\NES/NEScount[1]_2 ), .F0(n5421));
  SLICE_126 SLICE_126( .D1(\NES/n34 ), .C1(\NES/n33 ), .B1(\NES/n36 ), 
    .A1(\NES/n35 ), .D0(\NES/count[9] ), .C0(\NES/count[11] ), 
    .B0(\NES/count[0] ), .A0(\NES/count[3] ), .F0(\NES/n33 ), .F1(\NES/n2901 ));
  SLICE_127 SLICE_127( .D1(\NES/n22 ), .C1(\NES/n32 ), .B1(\NES/count[5] ), 
    .A1(\NES/count[17] ), .D0(\NES/count[12] ), .C0(\NES/count[18] ), 
    .B0(\NES/count[7] ), .A0(\NES/count[19] ), .F0(\NES/n32 ), .F1(\NES/n36 ));
  SLICE_128 SLICE_128( .D1(\Hola/rgb_5__N_275[31] ), .C1(\Hola/n42_c ), 
    .B1(\Hola/n5839 ), .A1(\Hola/n5837 ), .D0(\Hola/n5849 ), .C0(\Hola/n34 ), 
    .B0(\Hola/rgb_5__N_275[30] ), .A0(\Hola/rgb_5__N_275[22] ), 
    .F0(\Hola/n42_c ), .F1(n41));
  SLICE_129 SLICE_129( .D1(\Howdy/rowp[8] ), .C1(\Howdy/rowp[7] ), 
    .B1(\Howdy/rowp[4] ), .A1(\Howdy/rowp[6] ), .D0(\Howdy/rowp[6] ), 
    .C0(\Howdy/n12 ), .B0(\Howdy/rowp[7] ), .A0(n41), .F0(\Howdy/n14 ), 
    .F1(\Howdy/n6 ));
  SLICE_131 SLICE_131( .D1(\Hola/rgb_5__N_275[17] ), .C1(\Hola/n20 ), 
    .B1(\Hola/rgb_5__N_275[13] ), .A1(\Hola/rgb_5__N_275[21] ), 
    .D0(\Hola/rgb_5__N_275[9] ), .C0(\Hola/n18_adj_433 ), .B0(\colp[9] ), 
    .F0(\Hola/n20 ), .F1(\Hola/n34 ));
  SLICE_132 SLICE_132( .D1(\Howdy/rowp[4] ), .C1(n4_adj_441), 
    .B1(\Howdy/rowp[5] ), .A1(\Howdy/rowp[8] ), .D0(\rowp[1] ), .C0(\rowp[2] ), 
    .B0(\rowp[3] ), .A0(\rowp[0] ), .F0(n4_adj_441), .F1(\Howdy/n10 ));
  SLICE_134 SLICE_134( .D0(\Hola/rgb_5__N_242[25] ), 
    .C0(\Hola/rgb_5__N_242[26] ), .B0(\Hola/rgb_5__N_242[29] ), 
    .A0(\Hola/rgb_5__N_242[30] ), .F0(n37));
  SLICE_135 SLICE_135( .D1(\Howdy/rowp[9] ), .C1(n42), .B1(n38), .A1(n37), 
    .D0(\Hola/rgb_5__N_242[20] ), .C0(\Hola/n40 ), .B0(\Hola/n34_adj_430 ), 
    .A0(\Hola/rgb_5__N_242[28] ), .F0(n42), .F1(\Howdy/n12 ));
  SLICE_137 SLICE_137( .D1(\Hola/rgb_5__N_242[16] ), 
    .C1(\Hola/rgb_5__N_242[13] ), .B1(\Hola/rgb_5__N_242[14] ), 
    .A1(\Hola/rgb_5__N_242[23] ), .D0(\Hola/rgb_5__N_242[19] ), 
    .C0(\Hola/rgb_5__N_242[15] ), .B0(\Hola/rgb_5__N_242[11] ), 
    .A0(\Hola/rgb_5__N_242[17] ), .F0(\Hola/n34_adj_430 ), .F1(\Hola/n36 ));
  SLICE_138 SLICE_138( .D1(\Hola/rgb_5__N_242[18] ), .C1(\Hola/n26 ), 
    .B1(\Hola/rgb_5__N_242[27] ), .A1(\Hola/n36 ), .D0(\Hola/rgb_5__N_242[9] ), 
    .C0(\Hola/n18 ), .B0(\colp[9] ), .A0(\Hola/rgb_5__N_242[10] ), 
    .F0(\Hola/n26 ), .F1(\Hola/n40 ));
  SLICE_140 SLICE_140( .D1(\Hola/rgb_5__N_242[8] ), .C1(\Hola/n16 ), 
    .B1(\colp[8] ), .D0(\Hola/rgb_5__N_242[7] ), .C0(\Hola/n14 ), 
    .A0(\colp[7] ), .F0(\Hola/n16 ), .F1(\Hola/n18 ));
  SLICE_142 SLICE_142( .D1(\colp[6] ), .C1(\Hola/n12 ), 
    .A1(\Hola/rgb_5__N_242[6] ), .D0(\colp[5] ), .C0(\Hola/n10 ), 
    .B0(\Hola/rgb_5__N_242[5] ), .F0(\Hola/n12 ), .F1(\Hola/n14 ));
  SLICE_144 SLICE_144( .C1(\Hola/n8 ), .B1(\Hola/rgb_5__N_242[4] ), 
    .A1(\colp[4] ), .D0(\colp[3] ), .C0(\Hola/n6 ), 
    .A0(\Hola/rgb_5__N_242[3] ), .F0(\Hola/n8 ), .F1(\Hola/n10 ));
  SLICE_146 SLICE_146( .C1(\Hola/n4_adj_432 ), .B1(\colp[2] ), 
    .A1(\Hola/rgb_5__N_242[2] ), .D0(\colp[1] ), .C0(\Hola/rgb_5__N_275[0] ), 
    .B0(\colp[0] ), .A0(\Hola/rgb_5__N_275[1] ), .F0(\Hola/n4_adj_432 ), 
    .F1(\Hola/n6 ));
  SLICE_148 SLICE_148( .D1(\Hola/rgb_5__N_275[19] ), .C1(\Hola/n5841 ), 
    .B1(\Hola/rgb_5__N_275[20] ), .A1(\Hola/n5829 ), 
    .D0(\Hola/rgb_5__N_275[12] ), .C0(\Hola/rgb_5__N_275[15] ), 
    .B0(\Hola/rgb_5__N_275[18] ), .A0(\Hola/rgb_5__N_275[16] ), 
    .F0(\Hola/n5841 ), .F1(\Hola/n5849 ));
  SLICE_149 SLICE_149( .D0(\Hola/rgb_5__N_275[29] ), 
    .C0(\Hola/rgb_5__N_275[11] ), .F0(\Hola/n5829 ));
  SLICE_151 SLICE_151( .C1(\Hola/n16_adj_434 ), .B1(\colp[8] ), 
    .A1(\Hola/rgb_5__N_275[8] ), .D0(\Hola/rgb_5__N_275[7] ), 
    .C0(\Hola/n14_adj_435 ), .B0(\colp[7] ), .F0(\Hola/n16_adj_434 ), 
    .F1(\Hola/n18_adj_433 ));
  SLICE_153 SLICE_153( .C1(\Hola/n12_adj_436 ), .B1(\Hola/rgb_5__N_275[6] ), 
    .A1(\colp[6] ), .D0(\Hola/rgb_5__N_275[5] ), .C0(\Hola/n10_adj_437 ), 
    .A0(\colp[5] ), .F0(\Hola/n12_adj_436 ), .F1(\Hola/n14_adj_435 ));
  SLICE_155 SLICE_155( .D1(\colp[4] ), .C1(\Hola/n8_adj_438 ), 
    .A1(\Hola/rgb_5__N_275[4] ), .D0(\colp[3] ), .C0(\Hola/n6_adj_439 ), 
    .B0(\Hola/rgb_5__N_275[3] ), .F0(\Hola/n8_adj_438 ), 
    .F1(\Hola/n10_adj_437 ));
  SLICE_157 SLICE_157( .D1(\Hola/rgb_5__N_275[2] ), .C1(\Hola/n4_adj_440 ), 
    .B1(\colp[2] ), .D0(\colp[0] ), .C0(\Hola/rgb_5__N_275[0] ), 
    .B0(\colp[1] ), .A0(\Hola/rgb_5__N_275[1] ), .F0(\Hola/n4_adj_440 ), 
    .F1(\Hola/n6_adj_439 ));
  SLICE_158 SLICE_158( .D1(\button_sig[6] ), .C1(\Hola/n2357 ), 
    .A1(\button_sig[7] ), .D0(\button_sig[7] ), .C0(\Hola/n2357 ), 
    .A0(\button_sig[6] ), .F0(\Hola/ship_x_31__N_371 ), .F1(\Hola/n433[0] ));
  SLICE_159 SLICE_159( .D1(validp), .C1(\Hola/n5835 ), .B1(\button_sig[3] ), 
    .A1(\button_sig[2] ), .D0(\button_sig[5] ), .C0(\button_sig[0] ), 
    .B0(\button_sig[1] ), .A0(\button_sig[4] ), .F0(\Hola/n5835 ), 
    .F1(\Hola/n2357 ));
  SLICE_160 SLICE_160( .DI1(\Howdy/n5213 ), .D1(\Howdy/n2331 ), 
    .C1(\Howdy/n51 ), .B1(\rowp[0] ), .A1(\rowp[1] ), .D0(\rowp[2] ), 
    .C0(\Howdy/rowp[5] ), .B0(\rowp[3] ), .A0(\Howdy/rowp[4] ), 
    .LSR(\Howdy/n2028 ), .CLK(pll_clock), .Q1(VSYNC_c), .F0(\Howdy/n51 ), 
    .F1(\Howdy/n5213 ));
  SLICE_161 SLICE_161( .D1(\Howdy/rowp[9] ), .C1(\Howdy/n5200 ), 
    .B1(\Howdy/n2379 ), .A1(\Howdy/countr[31] ), .D0(\rowp[1] ), 
    .B0(\Howdy/n42_adj_419 ), .A0(\Howdy/n51 ), .F0(\Howdy/n5200 ), 
    .F1(\Howdy/valid_N_234 ));
  SLICE_162 SLICE_162( .D1(\colp[4] ), .C1(\Howdy/n2347 ), .B1(\Howdy/n5418 ), 
    .A1(\Howdy/n4_adj_416 ), .D0(\colp[6] ), .C0(\colp[5] ), .B0(\colp[7] ), 
    .F0(\Howdy/n2347 ), .F1(\Howdy/n5420 ));
  SLICE_163 SLICE_163( .D1(\Howdy/countc[31] ), .C1(\Howdy/n62_adj_407 ), 
    .D0(\Howdy/n2347 ), .C0(\Howdy/n5191 ), .B0(\Howdy/n2382 ), 
    .A0(\Howdy/n5418 ), .F0(\Howdy/n62_adj_407 ), .F1(\Howdy/row_9__N_189 ));
  SLICE_164 SLICE_164( .D1(\Howdy/n62_adj_407 ), .B1(\Howdy/countc[31] ), 
    .D0(\Howdy/countr[31] ), .C0(\Howdy/n62 ), .B0(\Howdy/countc[31] ), 
    .A0(\Howdy/n62_adj_407 ), .F0(\Howdy/row_9__N_187 ), .F1(\Howdy/n2085 ));
  SLICE_165 SLICE_165( .D1(\Howdy/rowp[9] ), .C1(\Howdy/n2379 ), 
    .B1(\Howdy/n6 ), .A1(\Howdy/n5 ), .D0(\Howdy/n37_adj_421 ), 
    .C0(\Howdy/n38_adj_422 ), .B0(\Howdy/n36 ), .A0(\Howdy/n35 ), 
    .F0(\Howdy/n2379 ), .F1(\Howdy/n62 ));
  SLICE_166 SLICE_166( .D1(\Howdy/countr[31] ), .C1(\Howdy/n2333 ), 
    .B1(\Howdy/n2339 ), .A1(\Howdy/n16 ), .D0(\Howdy/n2388 ), 
    .C0(\Howdy/n2331 ), .A0(\Howdy/rowp[5] ), .F0(\Howdy/n2333 ), 
    .F1(\Howdy/n8 ));
  SLICE_167 SLICE_167( .D1(\colp[9] ), .C1(\Howdy/n2382 ), .A1(\colp[8] ), 
    .D0(\Howdy/n36_adj_425 ), .C0(\Howdy/n38_adj_426 ), 
    .B0(\Howdy/n37_adj_424 ), .A0(\Howdy/n35_adj_423 ), .F0(\Howdy/n2382 ), 
    .F1(\Howdy/n2339 ));
  SLICE_169 SLICE_169( .C1(\Howdy/n4_adj_416 ), .A1(\colp[4] ), .D0(\colp[3] ), 
    .C0(\colp[1] ), .B0(\colp[0] ), .A0(\colp[2] ), .F0(\Howdy/n4_adj_416 ), 
    .F1(\Howdy/n5191 ));
  SLICE_170 SLICE_170( .D1(\colp[3] ), .C1(\colp[0] ), .B1(\colp[1] ), 
    .A1(\colp[2] ), .D0(\colp[7] ), .C0(\Howdy/n2342 ), .B0(\Howdy/n2385 ), 
    .A0(\colp[4] ), .F0(\Howdy/n16 ), .F1(\Howdy/n2342 ));
  SLICE_171 SLICE_171( .D0(\colp[6] ), .A0(\colp[5] ), .F0(\Howdy/n2385 ));
  SLICE_173 SLICE_173( .D1(\Howdy/rowp[9] ), .C1(\Howdy/n42_adj_419 ), 
    .B1(\Howdy/n2379 ), .C0(\Howdy/rowp[6] ), .B0(\Howdy/rowp[7] ), 
    .A0(\Howdy/rowp[8] ), .F0(\Howdy/n42_adj_419 ), .F1(\Howdy/n2331 ));
  SLICE_177 SLICE_177( .DI1(\Howdy/n5209 ), .D1(\colp[6] ), 
    .C1(\Howdy/n4_adj_420 ), .B1(\Howdy/n2339 ), .A1(\colp[7] ), 
    .C0(\Howdy/n2342 ), .B0(\colp[4] ), .A0(\colp[5] ), .LSR(\Howdy/n2085 ), 
    .CLK(pll_clock), .Q1(HSYNC_c), .F0(\Howdy/n4_adj_420 ), .F1(\Howdy/n5209 ));
  SLICE_178 SLICE_178( .D1(\Howdy/countr[22] ), .C1(\Howdy/n22 ), 
    .B1(\Howdy/countr[30] ), .A1(\Howdy/countr[26] ), .C0(\Howdy/countr[12] ), 
    .B0(\Howdy/countr[20] ), .F0(\Howdy/n22 ), .F1(\Howdy/n37_adj_421 ));
  SLICE_180 SLICE_180( .D1(\Howdy/countr[18] ), .C1(\Howdy/n34 ), 
    .B1(\Howdy/countr[16] ), .A1(\Howdy/n24 ), .D0(\Howdy/countr[15] ), 
    .C0(\Howdy/countr[11] ), .B0(\Howdy/countr[14] ), .A0(\Howdy/countr[10] ), 
    .F0(\Howdy/n34 ), .F1(\Howdy/n38_adj_422 ));
  SLICE_181 SLICE_181( .C0(\Howdy/countr[29] ), .A0(\Howdy/countr[19] ), 
    .F0(\Howdy/n24 ));
  SLICE_183 SLICE_183( .D1(\Howdy/countc[17] ), .C1(\Howdy/n34_adj_428 ), 
    .B1(\Howdy/countc[19] ), .A1(\Howdy/n24_adj_429 ), .D0(\Howdy/countc[12] ), 
    .C0(\Howdy/countc[15] ), .B0(\Howdy/countc[11] ), .A0(\Howdy/countc[16] ), 
    .F0(\Howdy/n34_adj_428 ), .F1(\Howdy/n38_adj_426 ));
  SLICE_184 SLICE_184( .D1(\Howdy/countc[27] ), .C1(\Howdy/n22_adj_427 ), 
    .B1(\Howdy/countc[10] ), .A1(\Howdy/countc[23] ), .B0(\Howdy/countc[22] ), 
    .A0(\Howdy/countc[13] ), .F0(\Howdy/n22_adj_427 ), 
    .F1(\Howdy/n37_adj_424 ));
  SLICE_187 SLICE_187( .DI1(\NES/count[13]/sig_006/FeedThruLUT ), 
    .A1(\NES/count[13] ), .D0(\NES/NEScount[1]_2 ), .C0(\NEScount[0] ), 
    .B0(\NES/NEScount[3]_2 ), .A0(\NES/n43 ), .CLK(pll_clock), 
    .Q1(\NES/NEScount[3]_2 ), .F0(n4), 
    .F1(\NES/count[13]/sig_006/FeedThruLUT ));
  SLICE_190 SLICE_190( .D1(\Howdy/countc[25] ), .C1(\Howdy/countc[24] ), 
    .B1(\Howdy/countc[21] ), .A1(\Howdy/countc[14] ), .B0(\Howdy/countc[20] ), 
    .A0(\Howdy/countc[30] ), .F0(\Howdy/n24_adj_429 ), 
    .F1(\Howdy/n36_adj_425 ));
  SLICE_192 SLICE_192( .D0(\Howdy/countr[23] ), .C0(\Howdy/countr[24] ), 
    .B0(\Howdy/countr[13] ), .A0(\Howdy/countr[21] ), .F0(\Howdy/n36 ));
  SLICE_193 SLICE_193( .D0(\Howdy/countr[27] ), .C0(\Howdy/countr[28] ), 
    .B0(\Howdy/countr[25] ), .A0(\Howdy/countr[17] ), .F0(\Howdy/n35 ));
  SLICE_194 SLICE_194( .D0(\Hola/rgb_5__N_275[23] ), 
    .C0(\Hola/rgb_5__N_275[24] ), .B0(\Hola/rgb_5__N_275[14] ), 
    .A0(\Hola/rgb_5__N_275[26] ), .F0(\Hola/n5837 ));
  SLICE_195 SLICE_195( .D0(\Hola/rgb_5__N_275[27] ), 
    .C0(\Hola/rgb_5__N_275[25] ), .B0(\Hola/rgb_5__N_275[28] ), 
    .A0(\Hola/rgb_5__N_275[10] ), .F0(\Hola/n5839 ));
  SLICE_196 SLICE_196( .DI1(\Howdy/valid_N_229 ), .D1(\Howdy/n5420 ), 
    .C1(\Howdy/countc[31] ), .B1(\Howdy/n8 ), .A1(\Howdy/n2382 ), .D0(validp), 
    .C0(\Howdy/n10 ), .B0(\rgb_5__N_242[31] ), .A0(\Howdy/n14 ), 
    .LSR(\Howdy/valid_N_234 ), .CLK(pll_clock), .Q1(validp), .F0(rgbT_c), 
    .F1(\Howdy/valid_N_229 ));
  SLICE_197 SLICE_197( .D1(\rowp[2] ), .C1(\Howdy/rowp[4] ), .A1(\rowp[3] ), 
    .C0(\Howdy/rowp[5] ), .B0(\rowp[3] ), .A0(\rowp[2] ), .F0(\Howdy/n5 ), 
    .F1(\Howdy/n2388 ));
  SLICE_198 SLICE_198( .C0(\NES/count[10] ), .A0(\NES/count[6] ), 
    .F0(\NES/n22 ));
  SLICE_202 SLICE_202( .DI1(\NES/count[15]/sig_004/FeedThruLUT ), 
    .C1(\NES/count[15] ), .D0(\NES/count[4] ), .C0(\NES/count[1] ), 
    .B0(\NES/count[15] ), .A0(\NES/count[14] ), .CLK(pll_clock), 
    .Q1(\NES/NEScount[5]_2 ), .F0(\NES/n34 ), 
    .F1(\NES/count[15]/sig_004/FeedThruLUT ));
  SLICE_203 SLICE_203( .DI1(\NES/count[16]/sig_003/FeedThruLUT ), 
    .C1(\NES/count[16] ), .D0(\NES/count[16] ), .C0(\NES/count[13] ), 
    .B0(\NES/count[8] ), .A0(\NES/count[2] ), .CLK(pll_clock), 
    .Q1(\NES/NEScount[6]_2 ), .F0(\NES/n35 ), 
    .F1(\NES/count[16]/sig_003/FeedThruLUT ));
  SLICE_206 SLICE_206( .D0(\Howdy/n62 ), .B0(\Howdy/countr[31] ), 
    .F0(\Howdy/n2028 ));
  SLICE_208 SLICE_208( .D1(\Hola/rgb_5__N_242[12] ), 
    .C1(\Hola/rgb_5__N_242[24] ), .B1(\Hola/rgb_5__N_242[22] ), 
    .A1(\Hola/rgb_5__N_242[21] ), .B0(\colp[8] ), .A0(\colp[9] ), 
    .F0(\Howdy/n5418 ), .F1(n38));
  SLICE_212 SLICE_212( .DI1(\NES/count[11]/sig_008/FeedThruLUT ), 
    .C1(\NES/count[11] ), .B0(\NEScount[2] ), .A0(\NES/NEScount[1]_2 ), 
    .CLK(pll_clock), .Q1(\NES/NEScount[1]_2 ), .F0(\NES/n6 ), 
    .F1(\NES/count[11]/sig_008/FeedThruLUT ));
  SLICE_218 SLICE_218( .D0(\Howdy/countc[26] ), .C0(\Howdy/countc[28] ), 
    .B0(\Howdy/countc[18] ), .A0(\Howdy/countc[29] ), .F0(\Howdy/n35_adj_423 ));
  SLICE_220 SLICE_220( .F0(VCC_net));
  Hi Hi( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  Hello_lscc_pll_inst_u_PLL_B \Hello.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk), .FEEDBACK(\Hello/lscc_pll_inst/feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\Hello/lscc_pll_inst/feedback_w ), 
    .OUTGLOBAL(pll_clock));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
  VSYNC VSYNC_I( .PADDO(VSYNC_c), .VSYNC(VSYNC));
  rgbT_5_ \rgbT[5]_I ( .PADDO(rgbT_c), .rgbT5(rgbT[5]));
  rgbT_4_ \rgbT[4]_I ( .PADDO(rgbT_c), .rgbT4(rgbT[4]));
  rgbT_3_ \rgbT[3]_I ( .PADDO(rgbT_c), .rgbT3(rgbT[3]));
  rgbT_2_ \rgbT[2]_I ( .PADDO(rgbT_c), .rgbT2(rgbT[2]));
  rgbT_1_ \rgbT[1]_I ( .PADDO(rgbT_c), .rgbT1(rgbT[1]));
  rgbT_0_ \rgbT[0]_I ( .PADDO(rgbT_c), .rgbT0(rgbT[0]));
  latch latch_I( .PADDO(latch_c), .latch(latch));
  NESclk NESclk_I( .PADDO(NESclk_c), .NESclk(NESclk));
  control control_I( .PADDI(control_c), .control(control));
endmodule

module SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \NES/count_265_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_265_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/count_265__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \NES/count_265_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/count_265__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_12 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_13 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_18 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_19 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_20 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_24 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_25 ( input D1, C1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_26 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/ship_x_31__I_0_36_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_31 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_28 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_33 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_29 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_29 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_30 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_31 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_31 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_27 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_32 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_29 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_33 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_25 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_34 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_27 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_35 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_25 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_36 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_23 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_23 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_38 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_21 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_39 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_21 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_40 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_19 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_41 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_42 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_43 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_19 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_45 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_17 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_46 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_15 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_49 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_50 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_53 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_55 ( input D1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \Hola/ship_x_31__I_0_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_56 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/ship_x_31__I_0_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \Hola/add_188_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_59 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \Hola/add_188_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i30 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i31 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_61 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i28 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i29 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_62 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i26 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i27 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_63 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i24 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i25 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_64 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_65 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_66 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i22 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i23 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_67 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_68 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_69 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_70 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i20 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i21 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_71 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i18 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i19 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_72 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_73 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i16 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i17 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_74 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i14 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i15 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_75 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i13 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_77 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_78 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_79 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_80 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i32 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_81 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_83 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_84 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \Howdy/countr__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_85 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_86 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countr__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_87 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_88 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_89 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_91 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_92 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \Howdy/add_11_add_4_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countr__i32 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_93 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \Howdy/countc_266_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/countc_266__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \Howdy/countc_266__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_94 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \NES/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 i2124_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFD01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xB1F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_95 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 i2119_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40003 i2123_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x70F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF0D1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40004 i2120_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 i2122_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/button_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x7F40") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFB01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_97 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40006 SLICE_97_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/NEScount_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_98 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, A0, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40007 i2118_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i2121_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/button_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/button_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xF303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xF704") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( input DI0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40009 SLICE_99_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/NEScount_i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_101 ( input DI0, A0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40009 SLICE_101_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/NEScount_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_106 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40006 SLICE_106_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \NES/NEScount_i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_108 ( input DI1, DI0, D1, C0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40010 SLICE_108_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 SLICE_108_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \NES/NEScount_i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_116 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \NES/i1_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \NES/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xFFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_117 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40014 \NES/i2_3_lut_4_lut_adj_61 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \NES/i4_4_lut_adj_62 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_118 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40016 \NES/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 \NES/i22_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x3336") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_119 ( input DI1, C1, D0, C0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40018 SLICE_119_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \NES/i4866_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/NESclk_68 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x5000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40020 \NES/i4869_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40021 \NES.i1_2_lut_adj_60 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_122 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40022 \NES/i5_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \NES/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40024 \NES/i1_2_lut_adj_59 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xF5F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40025 \NES/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \NES/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 \NES/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \NES/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 \Hola/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \Hola/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xFF10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \Howdy.i2_2_lut_adj_51 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \Howdy/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_131 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40033 \Hola/i12_4_lut_adj_56 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \Hola/rgb_5__I_29_i20_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40035 \Howdy/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \Hola/i1_4_lut_adj_54 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xA888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_134 ( input D0, C0, B0, A0, output F0 );

  lut40037 \Hola/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_135 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 \Howdy/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 \Hola/i20_4_lut_adj_55 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x00FE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_137 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40040 \Hola/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 \Hola/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_138 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40042 \Hola/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \Hola/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFBBA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_140 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40044 \Hola/rgb_5__I_28_i18_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \Hola/rgb_5__I_28_i16_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_142 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40046 \Hola/rgb_5__I_28_i14_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \Hola/rgb_5__I_28_i12_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \Hola/rgb_5__I_28_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \Hola/rgb_5__I_28_i8_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xD4D4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \Hola/rgb_5__I_28_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \Hola/rgb_5__I_28_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xB2B2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x20BA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 \Hola/i4346_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \Hola/i4338_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_149 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40053 \Hola/i4326_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_151 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40047 \Hola/rgb_5__I_29_i18_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \Hola/rgb_5__I_29_i16_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_153 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \Hola/rgb_5__I_29_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \Hola/rgb_5__I_29_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_155 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40054 \Hola/rgb_5__I_29_i10_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 \Hola/rgb_5__I_29_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xF550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xF330") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_157 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \Hola/rgb_5__I_29_i6_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \Hola/rgb_5__I_29_i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xC0FC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x4D44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_158 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 \Hola.i1_4_lut_adj_58 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Hola/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x50A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x00A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40060 \Hola/i1_4_lut_adj_57 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \Hola/i4332_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_160 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40062 \Howdy/i2_4_lut_adj_46 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \Howdy/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Howdy/von_39 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_161 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 \Howdy/i4864_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \Howdy/i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0x5444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40066 \Howdy/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \Howdy/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_163 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \Howdy/i2705_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \Howdy/i1_4_lut_adj_36 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_164 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \Howdy/i1499_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \Howdy/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40071 \Howdy/i1_4_lut_adj_49 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 \Howdy/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xFEF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_166 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \Howdy/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \Howdy/i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x00E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_167 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 \Howdy/i2_3_lut_adj_32 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \Howdy/i20_4_lut_adj_37 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_169 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40077 \Howdy/i2_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \Howdy/i1_4_lut_adj_48 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 \Howdy/i3_4_lut_adj_31 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \Howdy/i1084_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0xEC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_171 ( input D0, A0, output F0 );
  wire   GNDI;

  lut40081 \Howdy/i1_2_lut_adj_47 ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_173 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 \Howdy/i2_3_lut_adj_53 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \Howdy/i2_3_lut_adj_52 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_177 ( input DI1, D1, C1, B1, A1, C0, B0, A0, LSR, CLK, output Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40084 \Howdy/i2_4_lut_adj_33 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 \Howdy/i1_3_lut_adj_34 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \Howdy/hon_40 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xA8A8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_178 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40086 \Howdy/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 \Howdy/i1_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40088 \Howdy/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 \Howdy/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_181 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40090 \Howdy/i3_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 \Howdy/i17_4_lut_adj_41 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \Howdy/i13_4_lut_adj_43 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_184 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40092 \Howdy/i16_4_lut_adj_39 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \Howdy/i1_2_lut_adj_42 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_187 ( input DI1, A1, D0, C0, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40094 SLICE_187_K1( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \NES/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_190 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \Howdy/i15_4_lut_adj_40 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \Howdy/i3_2_lut_adj_44 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_192 ( input D0, C0, B0, A0, output F0 );

  lut40072 \Howdy/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_193 ( input D0, C0, B0, A0, output F0 );

  lut40072 \Howdy/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_194 ( input D0, C0, B0, A0, output F0 );

  lut40091 \Hola/i4334_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_195 ( input D0, C0, B0, A0, output F0 );

  lut40063 \Hola/i4336_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_196 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40096 \Howdy/i4_4_lut_adj_30 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \Howdy/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \Howdy/valid_41 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0x2000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_197 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \Howdy/i2_3_lut_adj_35 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \Howdy/i1_3_lut_adj_50 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xF8F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_198 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40100 \NES/i2_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_202 ( input DI1, C1, D0, C0, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40018 SLICE_202_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \NES/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_203 ( input DI1, C1, D0, C0, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40018 SLICE_203_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \NES/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \NES/NEScount_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_206 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40103 \Howdy/i1442_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_208 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40104 \Hola/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 \Howdy/i1_2_lut_adj_45 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_212 ( input DI1, C1, B0, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40018 SLICE_212_K1( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \NES/i1_2_lut_adj_63 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \NES/NEScount_i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_218 ( input D0, C0, B0, A0, output F0 );

  lut40091 \Howdy/i14_4_lut_adj_38 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_220 ( output F0 );
  wire   GNDI;

  lut40107 i5659( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module Hi ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B Hi( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module Hello_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \Hello/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.DIVR = "3";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "48.000000";
endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_5_ ( input PADDO, output rgbT5 );
  wire   VCCI;

  BB_B_B \rgbT_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT5) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_4_ ( input PADDO, output rgbT4 );
  wire   VCCI;

  BB_B_B \rgbT_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_3_ ( input PADDO, output rgbT3 );
  wire   VCCI;

  BB_B_B \rgbT_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT3) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_2_ ( input PADDO, output rgbT2 );
  wire   VCCI;

  BB_B_B \rgbT_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT2) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_1_ ( input PADDO, output rgbT1 );
  wire   VCCI;

  BB_B_B \rgbT_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgbT_0_ ( input PADDO, output rgbT0 );
  wire   VCCI;

  BB_B_B \rgbT_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgbT0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgbT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module latch ( input PADDO, output latch );
  wire   VCCI;

  BB_B_B \latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module NESclk ( input PADDO, output NESclk );
  wire   VCCI;

  BB_B_B \NESclk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(NESclk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => NESclk) = (0:0:0,0:0:0);
  endspecify

endmodule

module control ( output PADDI, input control );
  wire   GNDI;

  BB_B_B \control_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(control));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (control => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
